_root.imDict = new Object();
_root.imDict["spikeRight"] = _root.toBmap([8,16,[0xFF3F3F74,0xFF663931,0xFF222034,0xFF000000,0xFF000000,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF45283C,0xFF8F563B,0xFF222034,0xFD48493F,0xEE555745,0xC95D5F49,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF524B24,0xFF8F563B,0xFF222034,0xFD5B5E41,0xF36E7346,0xEA707549,0xE06A6E4B,0xD463664C,0xC85F624C,0xBF63664D,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0x00000000,0x00000000,0xFF524B24,0xFF8F563B,0xFF222034,0xFF8F974A,0xFB828948,0xF881884A,0xF4797F4A,0xEA72764B,0xE46D714C,0xE7686B4E,0xE55B5C50,0xFF515158,0xF54F4F56,0xE245454F,0xFF222034,0xFF222034,0xFF524B24,0xFF8F563B,0xFF222034,0xFF8F974A,0xFA7F8648,0xF77E8549,0xF2777C4A,0xE76F744B,0xE16B6F4C,0xE7686B4E,0xE55B5C50,0xFF4D4D53,0xF1484851,0xDE3D3D49,0xFF222034,0xFF222034,0xFF524B24,0xFF8F563B,0xFF222034,0xFD5B5E41,0xF36E7346,0xEA707449,0xDF696C4B,0xD362644C,0xC75E614C,0xBF63654D,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0x00000000,0x00000000,0xFF45283C,0xFF8F563B,0xFF222034,0xFD48493F,0xEE555745,0xC95D5F49,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3F3F74,0xFF663931,0xFF222034,0xFF000000,0xFF000000,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000]]);
_root.imDict["spikeLeft"] = _root.toBmap([8,16,[0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF000000,0xFF000000,0xFF222034,0xFF663931,0xFF3F3F74,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xC95D5F49,0xEE555745,0xFD48493F,0xFF222034,0xFF8F563B,0xFF45283C,0x00000000,0x00000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xBF63654D,0xC75E614C,0xD362644C,0xDF696C4B,0xEA707449,0xF36E7346,0xFD5B5E41,0xFF222034,0xFF8F563B,0xFF524B24,0xFF222034,0xFF222034,0xDE3D3D49,0xF1484851,0xFF4D4D53,0xE55B5C50,0xE7686B4E,0xE16B6F4C,0xE76F744B,0xF2777C4A,0xF77E8549,0xFA7F8648,0xFF8F974A,0xFF222034,0xFF8F563B,0xFF524B24,0xFF222034,0xFF222034,0xE245454F,0xF54F4F56,0xFF515158,0xE55B5C50,0xE7686B4E,0xE46D714C,0xEA72764B,0xF4797F4A,0xF881884A,0xFB828948,0xFF8F974A,0xFF222034,0xFF8F563B,0xFF524B24,0x00000000,0x00000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xBF63664D,0xC85F624C,0xD463664C,0xE06A6E4B,0xEA707549,0xF36E7346,0xFD5B5E41,0xFF222034,0xFF8F563B,0xFF524B24,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xC95D5F49,0xEE555745,0xFD48493F,0xFF222034,0xFF8F563B,0xFF45283C,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF000000,0xFF000000,0xFF222034,0xFF663931,0xFF3F3F74]]);
_root.imDict["spikeDown"] = _root.toBmap([16,8,[0xFF3F3F74,0xFF45283C,0xFF524B24,0xFF524B24,0xFF524B24,0xFF524B24,0xFF45283C,0xFF3F3F74,0xFF663931,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF663931,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF000000,0xFD48493F,0xFD5B5E41,0xFF8F974A,0xFF8F974A,0xFD5B5E41,0xFD48493F,0xFF000000,0xFF000000,0xEE555745,0xF36E7346,0xFA7F8648,0xFB828948,0xF36E7346,0xEE555745,0xFF000000,0xFF000000,0xC95D5F49,0xEA707449,0xF77E8549,0xF881884A,0xEA707549,0xC95D5F49,0xFF000000,0x00000000,0xFF000000,0xDF696C4B,0xF2777C4A,0xF4797F4A,0xE06A6E4B,0xFF000000,0x00000000,0x00000000,0xFF000000,0xD362644C,0xE76F744B,0xEA72764B,0xD463664C,0xFF000000,0x00000000,0x00000000,0xFF000000,0xC75E614C,0xE16B6F4C,0xE46D714C,0xC85F624C,0xFF000000,0x00000000,0x00000000,0xFF000000,0xBF63654D,0xE7686B4E,0xE7686B4E,0xBF63664D,0xFF000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xE55B5C50,0xE55B5C50,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF4D4D53,0xFF515158,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xF1484851,0xF54F4F56,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xDE3D3D49,0xE245454F,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF222034,0xFF222034,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF222034,0xFF222034,0x00000000,0x00000000,0x00000000]]);
_root.imDict["spikeUp"] = _root.toBmap([16,8,[0x00000000,0x00000000,0x00000000,0xFF222034,0xFF222034,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF222034,0xFF222034,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xE245454F,0xDE3D3D49,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xF54F4F56,0xF1484851,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF515158,0xFF4D4D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xE55B5C50,0xE55B5C50,0xFF000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xBF63664D,0xE7686B4E,0xE7686B4E,0xBF63654D,0xFF000000,0x00000000,0x00000000,0xFF000000,0xC85F624C,0xE46D714C,0xE16B6F4C,0xC75E614C,0xFF000000,0x00000000,0x00000000,0xFF000000,0xD463664C,0xEA72764B,0xE76F744B,0xD362644C,0xFF000000,0x00000000,0x00000000,0xFF000000,0xE06A6E4B,0xF4797F4A,0xF2777C4A,0xDF696C4B,0xFF000000,0x00000000,0xFF000000,0xC95D5F49,0xEA707549,0xF881884A,0xF77E8549,0xEA707449,0xC95D5F49,0xFF000000,0xFF000000,0xEE555745,0xF36E7346,0xFB828948,0xFA7F8648,0xF36E7346,0xEE555745,0xFF000000,0xFF000000,0xFD48493F,0xFD5B5E41,0xFF8F974A,0xFF8F974A,0xFD5B5E41,0xFD48493F,0xFF000000,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF222034,0xFF663931,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF8F563B,0xFF663931,0xFF3F3F74,0xFF45283C,0xFF524B24,0xFF524B24,0xFF524B24,0xFF524B24,0xFF45283C,0xFF3F3F74]]);
_root.imDict["blueBrick"] = _root.toBmap([32,32,[0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFF808080,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFF0B1B33,0xFF0B1B33,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF000001,0xFF000001,0xFF000001,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFFC0C0C0,0xFF808080,0xFF808080,0xFF808080,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFFC0C0C0,0xFF0B1B33,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF0B1B33,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFFC0C0C0,0xFFFFFBF0,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFF808080,0xFF808080,0xFFC0C0C0,0xFF0B1B33,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFFFFFBF0,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF3B7BA3,0xFF000001,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFFC0C0C0,0xFFC0C0C0,0xFFFFFBF0,0xFFFFFBF0,0xFFFFFBF0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFF0B1B33,0xFFFFFBF0,0xFF3B7BA3,0xFF7373B7,0xFF3B7BA3,0xFF2B5777,0xFF3B7BA3,0xFFFFFBF0,0xFFFFFBF0,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFFFFFBF0,0xFFFFFBF0,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFF777777,0xFF777777,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFFC0C0C0,0xFFFFFBF0,0xFFFFFBF0,0xFF808080,0xFFFFFBF0,0xFFC0C0C0,0xFFC0C0C0,0xFF0B1B33,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFFC0C0C0,0xFF777777,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFFC0C0C0,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF000001,0xFF003F3F,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFF777777,0xFF808080,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF0B1B33,0xFF000001,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFF0B1B33,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF000001,0xFF003F3F,0xFF003F3F,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF003F3F,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF808080,0xFF808080,0xFF777777,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF000001,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF808080,0xFF808080,0xFF777777,0xFF777777,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFF000001,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF0B1B33,0xFF808080,0xFF777777,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF777777,0xFF000001,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF0B1B33,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFF434343,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF000001,0xFF000001,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF0B1B33,0xFF0B1B33,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF434343,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF0B1B33,0xFF0B1B33,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF003F3F,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF434343,0xFF777777,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFF808080,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFF0B1B33,0xFF0B1B33,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF0B1B33,0xFF434343,0xFF000001,0xFF000001,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFFC0C0C0,0xFF808080,0xFF808080,0xFF808080,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFFC0C0C0,0xFF0B1B33,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFFFFFBF0,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF3B7BA3,0xFF000001,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFFC0C0C0,0xFFFFFBF0,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFF808080,0xFF808080,0xFFC0C0C0,0xFF0B1B33,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF3B7BA3,0xFFFFFBF0,0xFFFFFBF0,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFFFFFBF0,0xFFFFFBF0,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFF777777,0xFF777777,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFFC0C0C0,0xFFC0C0C0,0xFFFFFBF0,0xFFFFFBF0,0xFFFFFBF0,0xFFC0C0C0,0xFFC0C0C0,0xFF808080,0xFF0B1B33,0xFFFFFBF0,0xFF3B7BA3,0xFF7373B7,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFFC0C0C0,0xFF777777,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFFC0C0C0,0xFFFFFBF0,0xFFFFFBF0,0xFF808080,0xFFFFFBF0,0xFFC0C0C0,0xFFC0C0C0,0xFF0B1B33,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFF777777,0xFF808080,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFFC0C0C0,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF000001,0xFF003F3F,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF3B7BA3,0xFF3B7BA3,0xFF3B7BA3,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF0B1B33,0xFF000001,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF3B7BA3,0xFF3B7BA3,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF003F3F,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF808080,0xFF808080,0xFF777777,0xFF000001,0xFF000001,0xFF000001,0xFF808080,0xFF0B1B33,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF000001,0xFF003F3F,0xFF003F3F,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF808080,0xFF808080,0xFF777777,0xFF777777,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF808080,0xFF808080,0xFF808080,0xFF808080,0xFF000001,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF0B1B33,0xFF808080,0xFF777777,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFF000001,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF0B1B33,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFF434343,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF777777,0xFF000001,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF2B5777,0xFF2B5777,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF777777,0xFF434343,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF777777,0xFF000001,0xFF000001,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF0B1B33,0xFF0B1B33,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF777777,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF434343,0xFF434343,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF0B1B33,0xFF0B1B33,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF003F3F,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF777777,0xFF808080,0xFF777777,0xFF777777,0xFF434343,0xFF777777,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF0B1B33,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001,0xFF000001]]);
_root.imDict["metalCage"] = _root.toBmap([32,32,[0xFF33361B,0xFF4E5230,0xFF56614F,0xFF6A7363,0xFF8E9873,0xFF839183,0xFF51638D,0xFF233056,0xFF191D22,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF11130D,0xFF1A1C12,0xFF292B16,0xFF282D26,0xFF2F3431,0xFF353A33,0xFF313533,0xFF202633,0xFF121624,0xFF0E1218,0xFF0E0F11,0xFF0E0F11,0xFF0E100E,0xFF0E100E,0xFF0B0D0C,0xFF0E100E,0xFF1E2012,0xFF3A3D27,0xFF494D32,0xFF545A53,0xFF717A65,0xFF8E9873,0xFF8C9A83,0xFF5D7091,0xFF344470,0xFF2A3138,0xFF212629,0xFF252823,0xFF282D26,0xFF2C322B,0xFF2C322B,0xFF2C322B,0xFF2C322B,0xFF363A2E,0xFF3D4136,0xFF41453F,0xFF424544,0xFF494D47,0xFF47504B,0xFF3E434A,0xFF363B43,0xFF363B43,0xFF343A3B,0xFF353A33,0xFF313533,0xFF313533,0xFF2F3431,0xFF2F3431,0xFF363A2E,0xFF3D4125,0xFF494D32,0xFF545A53,0xFF6A7363,0xFF8E9873,0xFF8C9A83,0xFF6D8096,0xFF445276,0xFF4C5859,0xFF494D47,0xFF535B4D,0xFF5D6A5B,0xFF626C5C,0xFF637261,0xFF6A736C,0xFF6E7B6B,0xFF7B8576,0xFF828C7D,0xFF828B83,0xFF89928C,0xFF919691,0xFF919691,0xFF8A9494,0xFF878F93,0xFF828D8C,0xFF7D8788,0xFF767E81,0xFF707B7A,0xFF707B7A,0xFF6A7572,0xFF666E6F,0xFF5C6760,0xFF41452A,0xFF464B32,0xFF545A53,0xFF69735E,0xFF888F6D,0xFF8C9A83,0xFF6F7E92,0xFF4C5A7A,0xFF535C59,0xFF56614F,0xFF5D6A5B,0xFF6A7863,0xFF72826C,0xFF73827B,0xFF7C867A,0xFF828B83,0xFF8C9481,0xFF919B8D,0xFF959D95,0xFF9BA19A,0xFFA2A79F,0xFFA2ABA5,0xFFA2ABA5,0xFFA1ABAA,0xFF9CA8A6,0xFF97A3A2,0xFF8F999B,0xFF8F959A,0xFF8A9494,0xFF84918B,0xFF7D8788,0xFF737A73,0xFF41452A,0xFF494D32,0xFF56614F,0xFF69735E,0xFF888F6D,0xFF8C9481,0xFF6C7A8E,0xFF445276,0xFF484F52,0xFF444B45,0xFF494D47,0xFF4F5852,0xFF566456,0xFF5D6A5B,0xFF5C6760,0xFF626B63,0xFF626B63,0xFF6A736C,0xFF6A736C,0xFF737A73,0xFF7C867A,0xFF7C8A7C,0xFF7B8984,0xFF828B83,0xFF828B83,0xFF7D8788,0xFF7B8984,0xFF7A8483,0xFF768480,0xFF73827B,0xFF6C7B78,0xFF65726B,0xFF41452A,0xFF464B32,0xFF56614F,0xFF69735E,0xFF858D6D,0xFF8C9481,0xFF6C7A8E,0xFF495778,0xFF464D50,0xFF444B45,0xFF444B45,0xFF475045,0xFF4D594D,0xFF4D594D,0xFF4F5852,0xFF4F5852,0xFF545A53,0xFF545A53,0xFF535C59,0xFF55615B,0xFF5A635C,0xFF626C5C,0xFF637261,0xFF65726B,0xFF6A736C,0xFF6A7572,0xFF65726B,0xFF6A736C,0xFF65726B,0xFF65726B,0xFF65726B,0xFF5A635C,0xFF41452A,0xFF505439,0xFF545A53,0xFF637261,0xFF7D886A,0xFF84917A,0xFF75868F,0xFF516179,0xFF556462,0xFF535C59,0xFF535C59,0xFF55615B,0xFF55615B,0xFF5A635C,0xFF55615B,0xFF55615B,0xFF595F57,0xFF535C59,0xFF4C5859,0xFF475456,0xFF4A524B,0xFF4B5453,0xFF535B4D,0xFF566456,0xFF5C6760,0xFF5D6A64,0xFF5D6A64,0xFF5D6A64,0xFF626B63,0xFF5D6A64,0xFF626B63,0xFF5A635C,0xFF41452A,0xFF505439,0xFF545A53,0xFF626B63,0xFF79846C,0xFF7C8B75,0xFF6B7E87,0xFF3D4A63,0xFF485358,0xFF484F52,0xFF4A524B,0xFF4A524B,0xFF4A524B,0xFF4A524B,0xFF4A524B,0xFF475045,0xFF444B45,0xFF444B45,0xFF3C4342,0xFF3C4342,0xFF3C413C,0xFF3A3E3D,0xFF3A3E3D,0xFF3C4342,0xFF424544,0xFF47504B,0xFF47504B,0xFF4A524B,0xFF484F52,0xFF4A524B,0xFF4B5453,0xFF475045,0xFF3D4125,0xFF4D5235,0xFF50554C,0xFF5C6760,0xFF717A65,0xFF6E7B6B,0xFF4F6177,0xFF2F3C59,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3E442D,0xFF4B523B,0xFF4A524B,0xFF484F52,0xFF4B5453,0xFF47504B,0xFF323A4A,0xFF262D3C,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4C502E,0xFF50554C,0xFF5A635C,0xFF6A7363,0xFF626B63,0xFF3C4B6A,0xFF233056,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF464B32,0xFF475045,0xFF484F52,0xFF4F5852,0xFF444C4B,0xFF2B354D,0xFF181E3B,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4C502E,0xFF50554C,0xFF5A635C,0xFF637261,0xFF5C6760,0xFF364261,0xFF20294E,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF373C19,0xFF454A2B,0xFF444B45,0xFF4B5453,0xFF505650,0xFF464D50,0xFF2B354D,0xFF1A2343,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4C502E,0xFF50554C,0xFF5A635C,0xFF637261,0xFF556462,0xFF34405F,0xFF1C254B,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF373C19,0xFF454A2B,0xFF475045,0xFF4B5453,0xFF56614F,0xFF4B5453,0xFF2E3954,0xFF1A2343,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4C502E,0xFF50554C,0xFF55615B,0xFF637261,0xFF556462,0xFF34405F,0xFF1A2343,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4A4E2D,0xFF4B5445,0xFF535C59,0xFF5D6A5B,0xFF535C59,0xFF34405F,0xFF1C254B,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4C502E,0xFF50554C,0xFF55615B,0xFF5D6A5B,0xFF55615B,0xFF2F3C59,0xFF1C254B,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF373C19,0xFF4C502E,0xFF4D594D,0xFF5A635C,0xFF69735E,0xFF5D6A64,0xFF3B476A,0xFF212B54,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF36391B,0xFF454A2B,0xFF494D47,0xFF545A53,0xFF566456,0xFF475456,0xFF2E3954,0xFF1B233B,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF36391B,0xFF4C502E,0xFF595E4B,0xFF5D6A5B,0xFF727C6A,0xFF6A736C,0xFF3F5072,0xFF232E5C,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF292B16,0xFF3A3D27,0xFF3C413C,0xFF444B45,0xFF47504B,0xFF444B45,0xFF2A3344,0xFF1A1F32,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF2E3117,0xFF4A4E2D,0xFF505644,0xFF626C5C,0xFF727C6A,0xFF6A7572,0xFF445276,0xFF212B54,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF1B1D19,0xFF252823,0xFF252823,0xFF292D2B,0xFF2C322B,0xFF292D2B,0xFF212629,0xFF191D22,0xFF191D22,0xFF1B1D19,0xFF0D1012,0xFF121413,0xFF0E0F11,0xFF0E0F11,0xFF11130D,0xFF1A1C12,0xFF2E3118,0xFF41452A,0xFF52583B,0xFF5A6352,0xFF6E7B6B,0xFF677574,0xFF404F72,0xFF1E284A,0xFF11171D,0xFF0E0F11,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0E100E,0xFF0E100E,0xFF11130D,0xFF41453F,0xFF424544,0xFF494D47,0xFF41453F,0xFF434648,0xFF444B45,0xFF3E434A,0xFF484D4A,0xFF434648,0xFF484D4A,0xFF434648,0xFF3C4342,0xFF3C4342,0xFF3A3E3D,0xFF343A3B,0xFF353A33,0xFF404427,0xFF4A4E2D,0xFF505644,0xFF606752,0xFF72826C,0xFF6C7B78,0xFF495773,0xFF2A3453,0xFF23292C,0xFF252823,0xFF282D26,0xFF2C322B,0xFF31342E,0xFF363A2E,0xFF353A33,0xFF383D36,0xFF919B8D,0xFF9BA495,0xFFA2A79F,0xFFABADA7,0xFFAEB5AB,0xFFADB2B1,0xFFADB2B1,0xFFA8ADAE,0xFFA1ABAA,0xFF9BA5A5,0xFF92999D,0xFF8F959A,0xFF878F93,0xFF828D8C,0xFF7A8483,0xFF6A736C,0xFF494D32,0xFF52583B,0xFF56614F,0xFF626B63,0xFF7C8B75,0xFF7C8A7C,0xFF5D6C80,0xFF34405F,0xFF484F52,0xFF4B5445,0xFF5B6953,0xFF65735E,0xFF6A736C,0xFF737A73,0xFF7C867A,0xFF839183,0xFFA6B1A0,0xFFAEB5AB,0xFFB5BAB1,0xFFBABDB8,0xFFBCC1BE,0xFFBCC2C0,0xFFBCC2C0,0xFFBCC2C0,0xFFBCC2C0,0xFFB6BDBD,0xFFAEB5B8,0xFFA7B0B3,0xFFA1ABAA,0xFF9BA5A5,0xFF8F999B,0xFF768480,0xFF4D5235,0xFF545B44,0xFF606752,0xFF65726B,0xFF84917A,0xFF839183,0xFF65758A,0xFF394665,0xFF55615B,0xFF5A6352,0xFF6A7863,0xFF72826C,0xFF7C867A,0xFF828B83,0xFF919B8D,0xFF9BA495,0xFF768474,0xFF7C8B75,0xFF828B83,0xFF828B83,0xFF89928C,0xFF84918B,0xFF89928C,0xFF89928C,0xFF89928C,0xFF89928C,0xFF828D8C,0xFF828D8C,0xFF7B8984,0xFF768480,0xFF707B7A,0xFF626B63,0xFF494D32,0xFF52583B,0xFF5A6352,0xFF6A7363,0xFF84917A,0xFF839183,0xFF65758A,0xFF394665,0xFF475456,0xFF4B5445,0xFF4D594D,0xFF535B4D,0xFF595F57,0xFF5C6760,0xFF626B63,0xFF6A736C,0xFF475045,0xFF4B5445,0xFF4D594D,0xFF545A53,0xFF55615B,0xFF5A635C,0xFF55615B,0xFF535C59,0xFF535C59,0xFF4C5859,0xFF4F5852,0xFF4F5852,0xFF4F5852,0xFF4B5453,0xFF47504B,0xFF475045,0xFF41452A,0xFF4D5235,0xFF535B4D,0xFF69735E,0xFF889378,0xFF84918B,0xFF5F708E,0xFF323F63,0xFF343A3B,0xFF2F3932,0xFF2F3431,0xFF2F3431,0xFF313533,0xFF383D36,0xFF3A3E3D,0xFF3C413C,0xFF1E221E,0xFF212522,0xFF252823,0xFF282D26,0xFF292D2B,0xFF292D2B,0xFF23292C,0xFF212629,0xFF212629,0xFF212522,0xFF1E2322,0xFF1E2322,0xFF1E2322,0xFF1E221E,0xFF1E2322,0xFF26281C,0xFF3D4125,0xFF454A2B,0xFF505644,0xFF626C5C,0xFF8E997B,0xFF89988E,0xFF586B92,0xFF2A3863,0xFF1E2322,0xFF11171D,0xFF121413,0xFF121413,0xFF161814,0xFF121413,0xFF161814,0xFF1B1D19,0xFF11130D,0xFF161814,0xFF1E2012,0xFF1E221E,0xFF212522,0xFF212629,0xFF11171D,0xFF11171D,0xFF0E1218,0xFF0E0F11,0xFF0B0D0C,0xFF0E100E,0xFF0B0D0C,0xFF0B0D0C,0xFF0E100E,0xFF1E2012,0xFF33361B,0xFF454A2B,0xFF505644,0xFF69735E,0xFF8E997B,0xFF8A9A90,0xFF556995,0xFF263261,0xFF121624,0xFF0D1012,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF0B0D0C,0xFF292B16,0xFF373A20,0xFF383D36,0xFF3C4342,0xFF3A3E3D,0xFF32363C,0xFF1B233B,0xFF121B2A,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF33361B,0xFF4A4E2D,0xFF595E4B,0xFF717A65,0xFF919D7C,0xFF89988E,0xFF536794,0xFF293769,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF454A2B,0xFF444B45,0xFF464D50,0xFF444C4B,0xFF3A3F45,0xFF242D42,0xFF172136,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF505530,0xFF606752,0xFF727C6A,0xFF8E997B,0xFF84918B,0xFF51638D,0xFF293769,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4A4E2D,0xFF47504B,0xFF4B5453,0xFF505650,0xFF444C4B,0xFF2B354D,0xFF1A2343,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF505530,0xFF606752,0xFF6E7B6B,0xFF808E73,0xFF73827B,0xFF495782,0xFF293769,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4A4E2D,0xFF4A524B,0xFF535C59,0xFF5A6352,0xFF4C5859,0xFF313D5A,0xFF1E284A,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4F5430,0xFF595E4B,0xFF6A7863,0xFF79846C,0xFF677574,0xFF435279,0xFF263261,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4C502E,0xFF50554C,0xFF5A635C,0xFF6A7863,0xFF5D6A64,0xFF3B476A,0xFF212B54,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4F5430,0xFF535B4D,0xFF626B63,0xFF717A65,0xFF65726B,0xFF3F5072,0xFF243259,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4E5230,0xFF535B4D,0xFF626B63,0xFF79846C,0xFF6A7972,0xFF3F5072,0xFF263261,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4C502E,0xFF50554C,0xFF5A635C,0xFF6A7863,0xFF5D6A64,0xFF3C4B6A,0xFF233056,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4E5230,0xFF56614F,0xFF6A7863,0xFF808E73,0xFF768474,0xFF495782,0xFF293566,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1C,0xFF4A4E2D,0xFF50554C,0xFF595F57,0xFF626C5C,0xFF556462,0xFF364261,0xFF20294E,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF36391B,0xFF4E5230,0xFF5A6352,0xFF717A65,0xFF879473,0xFF7C8A7C,0xFF4B5A85,0xFF263261,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF2E3117,0xFF3D4125,0xFF41453F,0xFF4A524B,0xFF535B4D,0xFF4A524B,0xFF2B354D,0xFF181E3B,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000]]);
_root.imDict["metalCageLarge"] = _root.toBmap([48,48,[0xFF323519,0xFF4D5131,0xFF575D50,0xFF6E7A66,0xFF8E9873,0xFF839284,0xFF516187,0xFF243054,0xFF191D22,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF12140D,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF191B12,0xFF26281A,0xFF272A25,0xFF31352E,0xFF353B32,0xFF313532,0xFF202633,0xFF121624,0xFF0F1119,0xFF0E0F11,0xFF0E100E,0xFF0E0F11,0xFF0B0E0C,0xFF0E100E,0xFF0E100E,0xFF1E2012,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF3A3E27,0xFF494E31,0xFF555A52,0xFF6A7363,0xFF8E9873,0xFF8C9A83,0xFF5D7091,0xFF2D3B65,0xFF2C3238,0xFF272A28,0xFF272A25,0xFF292E2B,0xFF2C312A,0xFF2C312A,0xFF2C312A,0xFF2C312A,0xFF2A2D27,0xFF2C312A,0xFF2C312A,0xFF2C312A,0xFF2C312A,0xFF31352E,0xFF2C312A,0xFF31352E,0xFF353B32,0xFF393C33,0xFF393C33,0xFF3B403D,0xFF3B403D,0xFF393E3B,0xFF363A39,0xFF323738,0xFF313532,0xFF313532,0xFF313532,0xFF313532,0xFF363A39,0xFF313532,0xFF313532,0xFF31352E,0xFF2C312A,0xFF2A2D27,0xFF2C312A,0xFF272A25,0xFF2C312A,0xFF2C312A,0xFF2C312A,0xFF2C312A,0xFF3D4224,0xFF454B31,0xFF555A52,0xFF6A7363,0xFF8E9873,0xFF8C9A83,0xFF6D8096,0xFF394669,0xFF51605D,0xFF555A52,0xFF5A6354,0xFF5E6C5E,0xFF637260,0xFF637260,0xFF6A736C,0xFF6A736C,0xFF5A6354,0xFF5E6C5E,0xFF5C695B,0xFF5A6354,0xFF576459,0xFF5E6C5E,0xFF637260,0xFF616B63,0xFF6E7A66,0xFF727D73,0xFF727D73,0xFF798479,0xFF798479,0xFF828C83,0xFF828B89,0xFF7C8484,0xFF7C8484,0xFF76817A,0xFF6F7D7C,0xFF6A736C,0xFF65726C,0xFF65726C,0xFF616763,0xFF59625C,0xFF4F5A50,0xFF5A6859,0xFF637260,0xFF5A6354,0xFF5C695B,0xFF637260,0xFF6A7363,0xFF65726C,0xFF41452A,0xFF454B31,0xFF585D50,0xFF686F61,0xFF89916E,0xFF8C9A83,0xFF6F7E92,0xFF3D4C6B,0xFF616763,0xFF5D695D,0xFF637260,0xFF6C7A6B,0xFF738373,0xFF738373,0xFF798479,0xFF798479,0xFF738373,0xFF738373,0xFF738373,0xFF6C7A6B,0xFF738373,0xFF738373,0xFF738373,0xFF738373,0xFF7C897B,0xFF7C897B,0xFF828C83,0xFF828C83,0xFF839284,0xFF8B988E,0xFF89968C,0xFF89968C,0xFF89968C,0xFF84928C,0xFF839284,0xFF7C8484,0xFF7B8982,0xFF76817A,0xFF727D73,0xFF6E7A72,0xFF6C7A6B,0xFF6C7A6B,0xFF738373,0xFF6A7363,0xFF738373,0xFF738373,0xFF738373,0xFF798479,0xFF41452A,0xFF494E31,0xFF56614E,0xFF69735E,0xFF888F6D,0xFF8D9582,0xFF6C798B,0xFF394669,0xFF454D50,0xFF484F46,0xFF495048,0xFF545D55,0xFF5A6859,0xFF5D695D,0xFF5E6C5E,0xFF616763,0xFF5C635B,0xFF5C645B,0xFF5C695B,0xFF586159,0xFF566256,0xFF5A6859,0xFF5D695D,0xFF616B63,0xFF686F61,0xFF65726C,0xFF6A736C,0xFF6C7A6B,0xFF727D73,0xFF727D73,0xFF76817A,0xFF76817A,0xFF76817A,0xFF76817A,0xFF727C79,0xFF727C79,0xFF727D73,0xFF6E7A72,0xFF697571,0xFF616B63,0xFF586159,0xFF586159,0xFF5D695D,0xFF545D55,0xFF586159,0xFF5D695D,0xFF5E6C5E,0xFF60675E,0xFF41452A,0xFF474E3B,0xFF56614E,0xFF69735E,0xFF818A6E,0xFF818D7C,0xFF6C798B,0xFF394669,0xFF454D50,0xFF434B45,0xFF434B45,0xFF475048,0xFF4C5B4D,0xFF4F5A50,0xFF4F5A50,0xFF515955,0xFF475048,0xFF49524D,0xFF4C5B4D,0xFF495048,0xFF49544D,0xFF4F5A50,0xFF525D51,0xFF556059,0xFF545D55,0xFF545D59,0xFF59625C,0xFF59625C,0xFF5D665D,0xFF616B5D,0xFF616B63,0xFF6A736C,0xFF65726C,0xFF6A736C,0xFF697571,0xFF697571,0xFF65726C,0xFF697571,0xFF626C69,0xFF5D665D,0xFF49524D,0xFF475048,0xFF4C5B4D,0xFF434B45,0xFF484F46,0xFF4C5B4D,0xFF4C5B4D,0xFF4F5A50,0xFF41452A,0xFF4E523A,0xFF585D50,0xFF686F61,0xFF7B856B,0xFF818D7C,0xFF6F7F86,0xFF414F6C,0xFF556460,0xFF545D59,0xFF545D59,0xFF545D59,0xFF576459,0xFF576459,0xFF59625C,0xFF556059,0xFF545D59,0xFF556059,0xFF525C55,0xFF4F5A50,0xFF515955,0xFF525C55,0xFF556059,0xFF525C55,0xFF545D55,0xFF515955,0xFF4A5655,0xFF4A5452,0xFF495251,0xFF4C564D,0xFF525D51,0xFF5A6354,0xFF5C6562,0xFF5C6863,0xFF616B63,0xFF5C6863,0xFF5C6863,0xFF5C6863,0xFF5C6863,0xFF566256,0xFF525C55,0xFF556059,0xFF556059,0xFF545D59,0xFF556059,0xFF576459,0xFF576459,0xFF59625C,0xFF41452A,0xFF4E523A,0xFF555A52,0xFF616B5D,0xFF74806C,0xFF798479,0xFF65777E,0xFF2E3957,0xFF485355,0xFF495251,0xFF49524D,0xFF49524D,0xFF49524D,0xFF4C5350,0xFF49524D,0xFF475048,0xFF49524D,0xFF49524D,0xFF4C5350,0xFF49524D,0xFF49524D,0xFF49544D,0xFF49524D,0xFF49524D,0xFF475048,0xFF434B45,0xFF3F4847,0xFF3F4847,0xFF414645,0xFF3D4341,0xFF3D4341,0xFF414645,0xFF444A4B,0xFF475048,0xFF49524D,0xFF49524D,0xFF4A4E50,0xFF49524D,0xFF49524D,0xFF484F46,0xFF49524D,0xFF49524D,0xFF49524D,0xFF49524D,0xFF49524D,0xFF49524D,0xFF4C5350,0xFF49524D,0xFF3D4224,0xFF4D5131,0xFF50554C,0xFF60675E,0xFF6E7A66,0xFF6A736C,0xFF404E66,0xFF243054,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF3E442D,0xFF474E3B,0xFF475048,0xFF454D50,0xFF49524D,0xFF3F4847,0xFF333B47,0xFF242C41,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF3C3E1D,0xFF494E31,0xFF51564A,0xFF5C645B,0xFF637260,0xFF5C6863,0xFF404E66,0xFF243054,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1C,0xFF454B31,0xFF484F46,0xFF495251,0xFF4E5551,0xFF454D50,0xFF2C364C,0xFF1A233E,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494E31,0xFF51564A,0xFF59625C,0xFF637260,0xFF556460,0xFF394660,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF383A1A,0xFF45492C,0xFF434B45,0xFF4C564D,0xFF4E5551,0xFF454D50,0xFF2C364C,0xFF1B2444,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF34405D,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF383A1A,0xFF45492C,0xFF484F46,0xFF4E5551,0xFF555A52,0xFF495251,0xFF2E3952,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF4B5448,0xFF545D55,0xFF596459,0xFF545D59,0xFF34405D,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C4F2E,0xFF51564A,0xFF576459,0xFF686F61,0xFF556460,0xFF3C4964,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF364261,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF56614E,0xFF5D695D,0xFF747D69,0xFF697571,0xFF414F74,0xFF232D59,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF556460,0xFF323D5E,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C4F2E,0xFF50554C,0xFF556059,0xFF5E6C5E,0xFF51605D,0xFF313D5B,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF383A1A,0xFF484B2C,0xFF4B5245,0xFF525C55,0xFF576459,0xFF4C5A5A,0xFF323D55,0xFF1C2342,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF364261,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF494E31,0xFF51564A,0xFF586159,0xFF616B5D,0xFF556460,0xFF3C4964,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494E31,0xFF51564A,0xFF59625C,0xFF637260,0xFF556460,0xFF394660,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF51564A,0xFF59625C,0xFF5E6C5E,0xFF556460,0xFF34405D,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF51564A,0xFF59625C,0xFF5E6C5E,0xFF556460,0xFF34405D,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF51564A,0xFF586159,0xFF5E6C5E,0xFF51605D,0xFF34405D,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF51564A,0xFF586159,0xFF5E6C5E,0xFF51605D,0xFF34405D,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF4E5449,0xFF556059,0xFF5B685D,0xFF4C5A5A,0xFF323D55,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF494D2E,0xFF4E5449,0xFF556059,0xFF5B685D,0xFF4C5A5A,0xFF323D55,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF383A1A,0xFF484B2C,0xFF495048,0xFF515955,0xFF566256,0xFF4A5655,0xFF2E3952,0xFF1B2344,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF383A1A,0xFF45492C,0xFF4B5245,0xFF545D55,0xFF576459,0xFF4C5A5A,0xFF323D55,0xFF1B2344,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF191B1A,0xFF232621,0xFF272A25,0xFF2A2D27,0xFF2C312A,0xFF292E2B,0xFF212629,0xFF191D22,0xFF191D22,0xFF191B1A,0xFF111312,0xFF111312,0xFF111312,0xFF0E0F11,0xFF191B1A,0xFF111312,0xFF111312,0xFF111312,0xFF191B1A,0xFF111312,0xFF111312,0xFF0E0F11,0xFF0E0F11,0xFF111312,0xFF323519,0xFF41452A,0xFF515645,0xFF5B624E,0xFF6A7363,0xFF5F6D6E,0xFF3D4C6B,0xFF1C2549,0xFF121624,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0E100E,0xFF0E100E,0xFF191B1A,0xFF111312,0xFF111312,0xFF111312,0xFF191B1A,0xFF111312,0xFF111312,0xFF0E0F11,0xFF0E0F11,0xFF111312,0xFF414645,0xFF444A4B,0xFF484F46,0xFF424648,0xFF444A4B,0xFF444A4B,0xFF4A4E50,0xFF4A4E50,0xFF4A4E50,0xFF4A4E50,0xFF484C4D,0xFF444A4B,0xFF424648,0xFF3F4847,0xFF4A4E50,0xFF444A4B,0xFF424648,0xFF424648,0xFF484C4D,0xFF484C4D,0xFF444A4B,0xFF444A4B,0xFF424648,0xFF414645,0xFF3D4224,0xFF494E31,0xFF545A42,0xFF606956,0xFF6C7A6B,0xFF677474,0xFF4A5870,0xFF243054,0xFF393E3B,0xFF363A39,0xFF363A39,0xFF3B403D,0xFF3B403D,0xFF3D4341,0xFF444A4B,0xFF444A4B,0xFF444A4B,0xFF424648,0xFF484C4D,0xFF484C4D,0xFF484C4D,0xFF444A4B,0xFF444A4B,0xFF424648,0xFF919A96,0xFF989E9B,0xFF9DA09F,0xFF9DA09F,0xFF9BA1A2,0xFFA1A6A5,0xFF989EA0,0xFF989EA0,0xFF929B9A,0xFF929B9A,0xFF909597,0xFF888F92,0xFF8F9799,0xFF8B9394,0xFF989EA0,0xFF929B9A,0xFF91969A,0xFF8F9799,0xFF91969A,0xFF91969A,0xFF909597,0xFF888F92,0xFF888F92,0xFF828B89,0xFF41452A,0xFF52583B,0xFF5B624E,0xFF616B63,0xFF7C8A74,0xFF7B8982,0xFF5D6C80,0xFF2D385B,0xFF7C8484,0xFF7C8484,0xFF828C83,0xFF828B89,0xFF888E8D,0xFF909597,0xFF989EA0,0xFF91969A,0xFF91969A,0xFF909597,0xFF9BA1A2,0xFF8B9394,0xFF8B9394,0xFF868E90,0xFF828B89,0xFF7C8484,0xFFADB6A9,0xFFB2BAAF,0xFFB7BCB5,0xFFABB2B2,0xFFBBC0BD,0xFFBDC2C0,0xFFB5BCBA,0xFFB5BCBA,0xFFB5BCBA,0xFFB5BCBA,0xFFABB2B2,0xFFABB2B2,0xFFB5BCBA,0xFFB8BEBD,0xFFB8BEBD,0xFFB8BEBD,0xFFB5BCBA,0xFFABB2B2,0xFFABB2B2,0xFFABB2B2,0xFFABB2B2,0xFFA5ABA9,0xFF9FA9A7,0xFF929B9A,0xFF484B2C,0xFF545A42,0xFF596459,0xFF6A7363,0xFF84927A,0xFF839284,0xFF65758A,0xFF313D5B,0xFFA5ABA9,0xFFA1A6A5,0xFFA3AAA6,0xFFA3AAA6,0xFFA5ABA9,0xFFA8ADAB,0xFFBBC0BD,0xFFB8BEBD,0xFFABB2B2,0xFFABB2B2,0xFFB8BEBD,0xFFABB2B2,0xFFABB2B2,0xFF9BA1A2,0xFF929B9A,0xFF8B9394,0xFF89968C,0xFF89968C,0xFF8D9895,0xFF919A96,0xFF919A96,0xFF919A96,0xFF8E9998,0xFF8E9998,0xFF919A96,0xFF8D9895,0xFF8D9895,0xFF8D9895,0xFF8E9998,0xFF8E9998,0xFF929B9A,0xFF8E9998,0xFF8E9998,0xFF8D9895,0xFF8D9895,0xFF8D9895,0xFF8B9394,0xFF888F92,0xFF84928C,0xFF7B8982,0xFF45492C,0xFF52583B,0xFF5B624E,0xFF637260,0xFF84927A,0xFF84928C,0xFF65758A,0xFF313D5B,0xFF7E8A89,0xFF84928C,0xFF868E90,0xFF84928C,0xFF888F92,0xFF89968C,0xFF8B9394,0xFF929B9A,0xFF8E9998,0xFF8B9394,0xFF929B9A,0xFF8D9895,0xFF929B9A,0xFF929B9A,0xFF929B9A,0xFF8B9394,0xFF556059,0xFF5C645B,0xFF5D665D,0xFF616763,0xFF626C69,0xFF616B63,0xFF626C69,0xFF626C69,0xFF616763,0xFF616763,0xFF616763,0xFF5C6863,0xFF5C6562,0xFF5C6562,0xFF5C6562,0xFF5C6562,0xFF5C6562,0xFF5C6562,0xFF616763,0xFF5C6863,0xFF616763,0xFF5C6863,0xFF5C6562,0xFF586159,0xFF404425,0xFF4D5131,0xFF535A4B,0xFF69735E,0xFF89947A,0xFF84928C,0xFF5F708E,0xFF2D385B,0xFF556460,0xFF616763,0xFF5C6562,0xFF616763,0xFF616763,0xFF616763,0xFF5C6863,0xFF5C6562,0xFF626C69,0xFF626C69,0xFF626C69,0xFF626C69,0xFF616B63,0xFF5C6863,0xFF5C6562,0xFF57655E,0xFF3D4341,0xFF3D4341,0xFF414645,0xFF434B45,0xFF434B45,0xFF444A4B,0xFF414645,0xFF393E45,0xFF3D4341,0xFF3D4341,0xFF3B403D,0xFF3B403D,0xFF3D4341,0xFF3B403D,0xFF3D4341,0xFF3D4341,0xFF3D4341,0xFF3D4341,0xFF3B403D,0xFF3B403D,0xFF3B403D,0xFF3B403D,0xFF393E3B,0xFF393E3B,0xFF3C3E1D,0xFF494D2E,0xFF515645,0xFF616B5D,0xFF8E9879,0xFF89968C,0xFF586B92,0xFF25315B,0xFF3D4341,0xFF363A39,0xFF363A39,0xFF363A39,0xFF323738,0xFF363A39,0xFF3D4341,0xFF3D4341,0xFF3D4341,0xFF3D4341,0xFF3D4341,0xFF3D4341,0xFF3B403D,0xFF3B403D,0xFF393E3B,0xFF393E3B,0xFF0E100E,0xFF111312,0xFF191B12,0xFF191B1A,0xFF191B1A,0xFF191B1A,0xFF12171B,0xFF111312,0xFF0D1011,0xFF0D1011,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0E100E,0xFF0D1011,0xFF0B0E0C,0xFF0B0E0C,0xFF0E100E,0xFF0D1011,0xFF0B0E0C,0xFF0D1011,0xFF0B0E0C,0xFF0B0E0C,0xFF0E100E,0xFF36391A,0xFF45492C,0xFF515645,0xFF69735E,0xFF8E9879,0xFF8B988E,0xFF556995,0xFF25315B,0xFF121624,0xFF0F1119,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0B0E0C,0xFF0E100E,0xFF0B0E0C,0xFF0D1011,0xFF0B0E0C,0xFF0E100E,0xFF0B0E0C,0xFF0B0E0C,0xFF0E100E,0xFF282A15,0xFF333621,0xFF353B32,0xFF393E3B,0xFF393E3B,0xFF2C3238,0xFF1F2735,0xFF161F35,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF36391A,0xFF494D2E,0xFF5A5F4A,0xFF737B65,0xFF89947A,0xFF84928C,0xFF53668B,0xFF263261,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF3A3D1C,0xFF3E442D,0xFF434B45,0xFF444A4B,0xFF444A4B,0xFF393E45,0xFF242C41,0xFF1A233E,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1C,0xFF4D5131,0xFF606750,0xFF747D69,0xFF84927A,0xFF7E8A89,0xFF516187,0xFF263261,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3C3E1D,0xFF454B31,0xFF4B5245,0xFF495251,0xFF4C5350,0xFF444A4B,0xFF2C364C,0xFF1B2444,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF505533,0xFF606750,0xFF6E7A66,0xFF7C8A74,0xFF6F7D7C,0xFF3D4C6B,0xFF232D59,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF494D2E,0xFF4B5448,0xFF525C55,0xFF566256,0xFF4D5757,0xFF323D55,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF4D5131,0xFF5B624E,0xFF6A7363,0xFF74806C,0xFF677474,0xFF394669,0xFF232D59,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF494E31,0xFF51564A,0xFF596459,0xFF637260,0xFF5C6863,0xFF3C4964,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF4D5131,0xFF535A4B,0xFF616B5D,0xFF6C7A6B,0xFF626C69,0xFF364261,0xFF243054,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3D401E,0xFF4D5131,0xFF535A4B,0xFF5D695D,0xFF6E7A66,0xFF65726C,0xFF43506E,0xFF232D59,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3C3E1D,0xFF494E31,0xFF51564A,0xFF5C645B,0xFF686F61,0xFF5C6863,0xFF34405D,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3C3E1D,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1C,0xFF4C4F2E,0xFF4E5449,0xFF556059,0xFF637260,0xFF556460,0xFF364261,0xFF20294E,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1C,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF364261,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF556460,0xFF323D5E,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF364261,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3C3E1D,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1C,0xFF4D5131,0xFF50554C,0xFF5C635B,0xFF6A7363,0xFF616B63,0xFF3D4C6B,0xFF212D53,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF5C6863,0xFF364261,0xFF1E284D,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF364261,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF57655E,0xFF364261,0xFF1E264C,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF556460,0xFF323D5E,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C502E,0xFF50554C,0xFF59625C,0xFF637260,0xFF556460,0xFF323D5E,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF3A3D1A,0xFF4C4F2E,0xFF50554C,0xFF556059,0xFF5E6C5E,0xFF51605D,0xFF313D5B,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF000000,0xFF3A3D1A,0xFF4C4F2E,0xFF50554C,0xFF556059,0xFF5E6C5E,0xFF51605D,0xFF313D5B,0xFF1C2549,0xFF000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFF383A1A,0xFF484B2C,0xFF495048,0xFF515955,0xFF566256,0xFF4A5655,0xFF2E3952,0xFF1B2344,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF383A1A,0xFF484B2C,0xFF495048,0xFF515955,0xFF566256,0xFF4A5655,0xFF2E3952,0xFF1B2344,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000]]);
_root.imDict["wood"] = _root.toBmap([32,32,[0xFF805038,0xFF987830,0xFF784840,0xFF907030,0xFF886038,0xFF906038,0xFFA06838,0xFFA07038,0xFF805048,0xFF987838,0xFF805038,0xFF907030,0xFFA06838,0xFF987040,0xFF907040,0xFF986030,0xFF907038,0xFFA06830,0xFF907048,0xFFA08838,0xFF986048,0xFF784838,0xFF907028,0xFFA06840,0xFF987050,0xFFA07850,0xFF807048,0xFFA06030,0xFF887850,0xFFA88040,0xFF986050,0xFFA07048,0xFF907048,0xFF986838,0xFF804840,0xFF907030,0xFF906830,0xFF906038,0xFFA06830,0xFFA07840,0xFF805848,0xFF987838,0xFF805048,0xFF907830,0xFFA06838,0xFF987040,0xFF907040,0xFF986030,0xFF907040,0xFF986840,0xFF907040,0xFFA07038,0xFF987858,0xFF704830,0xFF886830,0xFF986838,0xFF987040,0xFF987040,0xFF887048,0xFFA06038,0xFF807858,0xFFA06038,0xFF887850,0xFF986040,0xFF907040,0xFF907038,0xFF684840,0xFF906028,0xFF886838,0xFF986840,0xFFA06838,0xFFA07048,0xFF785848,0xFFA07830,0xFF887840,0xFF884030,0xFFA07828,0xFF987040,0xFF886840,0xFF906830,0xFF986838,0xFF987038,0xFF887048,0xFFA06848,0xFF987848,0xFF886830,0xFF886838,0xFFA06840,0xFF987050,0xFF987040,0xFF987048,0xFFA89040,0xFF886860,0xFFA06038,0xFF887850,0xFF986840,0xFF987040,0xFF987048,0xFF784838,0xFF907030,0xFF806040,0xFF906038,0xFF986838,0xFFA07040,0xFF805050,0xFF987828,0xFF907048,0xFF784830,0xFFA07028,0xFF907038,0xFF906840,0xFF906030,0xFF986838,0xFFA06840,0xFF907048,0xFF986048,0xFF887048,0xFF886030,0xFF886038,0xFF986840,0xFF987048,0xFF987048,0xFF986848,0xFFA89850,0xFF804058,0xFFA87830,0xFF907850,0xFF886840,0xFF986030,0xFF886848,0xFF804838,0xFF907030,0xFF886038,0xFF986830,0xFFA06838,0xFFA07040,0xFF785848,0xFF907028,0xFFA06840,0xFF907038,0xFFA06028,0xFF907040,0xFF884838,0xFF907830,0xFF986038,0xFF907038,0xFF886840,0xFF906838,0xFF906840,0xFF886030,0xFF804038,0xFF987830,0xFFA07050,0xFF987848,0xFFA07848,0xFFA89848,0xFF804058,0xFFA07830,0xFF987848,0xFF807048,0xFF986038,0xFF785040,0xFF907830,0xFF906830,0xFF886838,0xFF986038,0xFF987038,0xFFA07038,0xFF785050,0xFF907028,0xFF986838,0xFF804838,0xFF986828,0xFF907040,0xFF884838,0xFF907830,0xFF986830,0xFF987040,0xFF887048,0xFF906038,0xFF906838,0xFF906030,0xFF806840,0xFFA06038,0xFFA07858,0xFF987840,0xFF987040,0xFFA89048,0xFF886058,0xFF986038,0xFFA89048,0xFF704050,0xFF987830,0xFF805040,0xFF907838,0xFF986840,0xFF906838,0xFF986838,0xFFA07040,0xFFA07040,0xFF887840,0xFF986030,0xFF986840,0xFF784838,0xFFA07028,0xFF987048,0xFF906838,0xFF986030,0xFFA06838,0xFF987040,0xFF987048,0xFF886840,0xFF986838,0xFF886838,0xFF986840,0xFFA07040,0xFFA07848,0xFF987848,0xFF907048,0xFFA06840,0xFF887858,0xFF906030,0xFFA08848,0xFF784060,0xFF907830,0xFF886840,0xFF804838,0xFF907830,0xFF886838,0xFFA06838,0xFF987040,0xFFA07038,0xFF907048,0xFF906838,0xFF986838,0xFF884838,0xFFA07028,0xFF907038,0xFF906830,0xFF906830,0xFFA06028,0xFFA07040,0xFF987848,0xFF986848,0xFF987038,0xFF907040,0xFFA06838,0xFFA07848,0xFFA07848,0xFFA07050,0xFF987848,0xFFA07048,0xFF907848,0xFF906838,0xFFA88040,0xFF804058,0xFF907830,0xFF987038,0xFF784838,0xFF907830,0xFF804030,0xFF987830,0xFFA07848,0xFF987840,0xFF887048,0xFF906030,0xFF986030,0xFF704830,0xFF986820,0xFF987038,0xFF906838,0xFF906830,0xFFA06030,0xFF987840,0xFF887048,0xFFA06038,0xFF907840,0xFF906838,0xFFA06040,0xFFA07848,0xFFA07850,0xFFA07048,0xFF987850,0xFFA07038,0xFF907848,0xFF886838,0xFFA08838,0xFF906050,0xFF886840,0xFF804838,0xFF807838,0xFF906030,0xFF784838,0xFF987030,0xFF987848,0xFF907038,0xFF886040,0xFF986030,0xFF986838,0xFF704830,0xFFA06028,0xFF907040,0xFF986840,0xFF906830,0xFFA06838,0xFF987840,0xFF907048,0xFF986038,0xFF907040,0xFF906840,0xFFA06838,0xFFA07848,0xFF987850,0xFFA07050,0xFF987848,0xFFA07040,0xFF907848,0xFF886838,0xFFA06838,0xFF987858,0xFF907850,0xFF806838,0xFF886038,0xFF906030,0xFF784838,0xFFA07028,0xFF987840,0xFF887038,0xFF986038,0xFF705038,0xFF987030,0xFF705040,0xFFA06028,0xFF907040,0xFF986830,0xFF987038,0xFFA86838,0xFF987850,0xFF887048,0xFF986030,0xFF887040,0xFF886038,0xFFA06040,0xFFA09858,0xFF986050,0xFFA07040,0xFF987850,0xFFA07040,0xFF907850,0xFF986838,0xFFA89040,0xFFA06058,0xFF987850,0xFF804840,0xFF987828,0xFF986840,0xFF784838,0xFF987030,0xFFA07838,0xFF804838,0xFF987038,0xFF805040,0xFF987828,0xFF804840,0xFFA07028,0xFF887848,0xFF986038,0xFF987038,0xFFA87038,0xFFA07850,0xFF907048,0xFF986838,0xFF887040,0xFF884038,0xFFA07830,0xFF987858,0xFF987050,0xFFA87040,0xFF987850,0xFFA89040,0xFF986050,0xFF986840,0xFFA09048,0xFFA06058,0xFF907850,0xFF804838,0xFF907830,0xFF986838,0xFF805040,0xFF987030,0xFF987040,0xFF784840,0xFF986828,0xFF887038,0xFF986030,0xFF804840,0xFFA07030,0xFF885040,0xFF907838,0xFF986830,0xFFA06838,0xFFA07848,0xFF887850,0xFF986038,0xFF907840,0xFF906030,0xFFA06038,0xFF887848,0xFF986040,0xFFA06838,0xFF987858,0xFFA06848,0xFF987850,0xFF987038,0xFFA87040,0xFFA07858,0xFF987850,0xFF887040,0xFF986030,0xFF906838,0xFF804840,0xFF987030,0xFF987040,0xFF805040,0xFF987828,0xFF785040,0xFF907838,0xFF804038,0xFFA07830,0xFF885048,0xFF987838,0xFF986840,0xFFA06838,0xFFA07840,0xFF805848,0xFFA09030,0xFF886048,0xFF906030,0xFFA06848,0xFF807848,0xFF986030,0xFFA07048,0xFF987850,0xFFA07048,0xFF987850,0xFF987048,0xFFA89038,0xFFA06050,0xFF987848,0xFF887040,0xFF986038,0xFF986848,0xFF704840,0xFF986828,0xFF987040,0xFF887038,0xFF986040,0xFF684838,0xFF886828,0xFF906030,0xFFA06828,0xFF907840,0xFF906838,0xFF986838,0xFFA06830,0xFFA07848,0xFF885848,0xFFA87830,0xFF887858,0xFF986030,0xFF987048,0xFF987850,0xFF987840,0xFF987040,0xFF887848,0xFFA06038,0xFF987848,0xFF987048,0xFFA89038,0xFFA06050,0xFF987850,0xFF887040,0xFF986030,0xFFA06840,0xFF685048,0xFF986028,0xFFA07040,0xFF887048,0xFF986040,0xFF785038,0xFF884828,0xFF907830,0xFFA06838,0xFF907048,0xFF906038,0xFF986038,0xFF986838,0xFFA07040,0xFF907850,0xFFA06038,0xFF887850,0xFF986038,0xFFA07040,0xFF987058,0xFF986850,0xFF987850,0xFF805050,0xFF987830,0xFFA07050,0xFF987840,0xFFA07040,0xFFA07850,0xFF987048,0xFF906840,0xFF906038,0xFF906838,0xFF704848,0xFF987020,0xFFA07040,0xFF887040,0xFF906030,0xFF804838,0xFF887820,0xFF986028,0xFFA07040,0xFF907040,0xFF906838,0xFF986840,0xFFA07038,0xFFA07848,0xFF907850,0xFFA07040,0xFF887850,0xFF986038,0xFFA07048,0xFFA07850,0xFF987048,0xFF987048,0xFF887040,0xFF986838,0xFFA07848,0xFF987840,0xFFA06848,0xFFA07850,0xFF987848,0xFF887040,0xFF986840,0xFF986838,0xFF705040,0xFF986828,0xFF987040,0xFF785040,0xFF805030,0xFF987830,0xFF906830,0xFF986030,0xFFA07038,0xFF907848,0xFF906038,0xFF986838,0xFFA07038,0xFFA89040,0xFF906050,0xFF986848,0xFF887050,0xFF986030,0xFFA07048,0xFF987850,0xFF987048,0xFF887050,0xFF906838,0xFF986838,0xFF987040,0xFFA07040,0xFFA07040,0xFFA07850,0xFF987848,0xFF805038,0xFF987830,0xFF807038,0xFF704038,0xFFA06828,0xFF907040,0xFF784840,0xFF805028,0xFF987828,0xFF907038,0xFF986030,0xFFA07040,0xFF887038,0xFF986030,0xFF987038,0xFF987048,0xFFA89040,0xFF886058,0xFFA06038,0xFF907840,0xFF906038,0xFF986840,0xFF987048,0xFF987048,0xFF907048,0xFF806840,0xFF986038,0xFFA07048,0xFF987848,0xFF987040,0xFFA07850,0xFF987850,0xFF784848,0xFF907030,0xFF705040,0xFF705030,0xFF987030,0xFF907048,0xFF784840,0xFF804828,0xFFA07830,0xFF907040,0xFF986030,0xFFA07048,0xFF887048,0xFF906038,0xFF986048,0xFFA07048,0xFFA87838,0xFF805858,0xFF987838,0xFF907048,0xFF906038,0xFF986840,0xFF785848,0xFF987840,0xFF906840,0xFF784838,0xFF987030,0xFFA07048,0xFF987850,0xFFA07850,0xFFA09850,0xFF906048,0xFF704030,0xFF785020,0xFF605030,0xFF804028,0xFFA07828,0xFF907840,0xFF684830,0xFF906020,0xFFA06038,0xFF987040,0xFFA06030,0xFFA07030,0xFF907840,0xFF886038,0xFF986028,0xFF987040,0xFF987048,0xFF887048,0xFF784030,0xFF987038,0xFF907038,0xFF986840,0xFF705048,0xFF906830,0xFF887048,0xFF784040,0xFF907028,0xFF986840,0xFFA07048,0xFFA07848,0xFFA09848,0xFF906050,0xFF884838,0xFF887828,0xFF804028,0xFF887828,0xFF986030,0xFF906838,0xFF704838,0xFF906828,0xFF986838,0xFF907840,0xFFA06838,0xFFA07038,0xFF907848,0xFF804038,0xFF987838,0xFF987048,0xFF886840,0xFF986840,0xFF886840,0xFF906030,0xFF986838,0xFF987048,0xFF785040,0xFF907038,0xFF886840,0xFF784030,0xFF907828,0xFF986838,0xFF987048,0xFF987048,0xFF987048,0xFF987040,0xFF907040,0xFF906038,0xFF906030,0xFF906030,0xFF906030,0xFF986838,0xFF784830,0xFF906828,0xFF986038,0xFF987038,0xFFA06038,0xFFA07038,0xFF987840,0xFF907040,0xFF986038,0xFFA07040,0xFF887040,0xFF986030,0xFF987040,0xFF907048,0xFFA06840,0xFF987848,0xFF887050,0xFF906038,0xFF986840,0xFF886838,0xFF906038,0xFF986838,0xFF907048,0xFFA06840,0xFFA07048,0xFF987848,0xFF907048,0xFF906840,0xFF906838,0xFF906838,0xFF906838,0xFF906848,0xFF804038,0xFF987028,0xFF907038,0xFF987030,0xFF986830,0xFFA06838,0xFF987848,0xFF907038,0xFF986838,0xFF986840,0xFF987040,0xFF986848,0xFFA06848,0xFF987038,0xFFA06838,0xFFA07848,0xFF987850,0xFF906840,0xFF887038,0xFF884048,0xFF907838,0xFF987040,0xFF987048,0xFFA07040,0xFFA07848,0xFF987848,0xFF907040,0xFF986030,0xFF907040,0xFF986838,0xFF907040,0xFF906838,0xFF704030,0xFF986828,0xFF887040,0xFF906040,0xFF886030,0xFFA86030,0xFF987850,0xFF906840,0xFF986040,0xFF987038,0xFFA07040,0xFF907848,0xFF986840,0xFF987040,0xFFA07050,0xFFA07850,0xFF987048,0xFF887048,0xFF886038,0xFF886838,0xFF906838,0xFF986838,0xFF987048,0xFFA07038,0xFF987048,0xFF987848,0xFF907040,0xFF906830,0xFF906840,0xFF906030,0xFF886038,0xFF884038,0xFF805830,0xFFA07028,0xFF907848,0xFF986830,0xFF804838,0xFFA07030,0xFF987040,0xFF804838,0xFF987828,0xFF987040,0xFF986838,0xFF987048,0xFFA06838,0xFF987048,0xFFA87040,0xFFA07850,0xFF987048,0xFF906848,0xFF784038,0xFF907838,0xFF906838,0xFF986838,0xFF987040,0xFFA07040,0xFF987048,0xFF907048,0xFF885040,0xFF987830,0xFF987038,0xFF906830,0xFF886030,0xFF804030,0xFF685838,0xFFA06828,0xFF907050,0xFF906840,0xFF804038,0xFFA07830,0xFF987850,0xFF906838,0xFF986030,0xFF987040,0xFF886838,0xFF986038,0xFF987038,0xFF986838,0xFFA89040,0xFF986050,0xFF987048,0xFF887048,0xFF784038,0xFF907830,0xFF906840,0xFFA07048,0xFF987048,0xFF987038,0xFF987048,0xFF907048,0xFF906840,0xFF906030,0xFF986838,0xFF906838,0xFF906030,0xFF884838,0xFF785830,0xFFA06828,0xFF987848,0xFF906840,0xFF906038,0xFFA06838,0xFF907848,0xFF986030,0xFF906838,0xFF986838,0xFF887030,0xFF986038,0xFF907040,0xFF986038,0xFFA87048,0xFF987850,0xFF987048,0xFF907040,0xFF906038,0xFF987038,0xFF907040,0xFF986848,0xFF887840,0xFF986038,0xFF987840,0xFF907048,0xFF906838,0xFF986038,0xFF986838,0xFF907038,0xFF906038,0xFF884838,0xFF785838,0xFFA07020,0xFF987848,0xFF907038,0xFF906030,0xFFA06838,0xFF885850,0xFF987838,0xFF907038,0xFF986838,0xFF886830,0xFF986030,0xFF906840,0xFF906830,0xFFA06840,0xFF987048,0xFF907040,0xFF906840,0xFF987038,0xFF885048,0xFF807840,0xFF986038,0xFF785040,0xFF987830,0xFF907040,0xFF907050,0xFF906838,0xFF986830,0xFF986838,0xFF804838,0xFF987030,0xFF887038,0xFF704038,0xFFA06830,0xFFA07848,0xFF907040,0xFF906030,0xFFA06838,0xFF885848,0xFF987838,0xFF986838,0xFF987040,0xFF886830,0xFF986038,0xFF906838,0xFF986038,0xFF986840,0xFF987048,0xFF804838,0xFF987838,0xFF987040,0xFF805048,0xFF805038,0xFF987830,0xFF887048,0xFF906838,0xFF986848,0xFF907048,0xFF906038,0xFF986030,0xFF986840,0xFF805038,0xFF907028,0xFF886038,0xFF784030,0xFFA07020,0xFF987040,0xFF907040,0xFF906030,0xFFA06838,0xFF805040,0xFF885830,0xFF987838,0xFF987050,0xFF886840,0xFF986038,0xFF907038,0xFF986840,0xFF987040,0xFF907040,0xFF685048,0xFF986028,0xFF986848,0xFF685048,0xFF806828,0xFF986030,0xFF906840,0xFF907040,0xFF986840,0xFF907850,0xFF906038,0xFF986038,0xFF986838,0xFF884838,0xFF907828,0xFF886840,0xFF906038,0xFFA06820,0xFFA07040,0xFF887838,0xFF906030,0xFFA06838,0xFF887040,0xFF886030,0xFF986038,0xFF987848,0xFF907040,0xFF804838,0xFF987830,0xFF986840,0xFF986840,0xFF987048,0xFF685040,0xFF986020,0xFF986838,0xFF705038,0xFF907030,0xFF906838,0xFF986840,0xFF987048,0xFF987040]]);
_root.imDict["green"] = _root.toBmap([1,1,[0xFF00FF00]]);
_root.imDict["sand"] = _root.toBmap([32,32,[0xFFE1AF4F,0xFFF7CE73,0xFFF5C462,0xFFE7BD63,0xFFE6BD5A,0xFFE7B55A,0xFFEFC665,0xFFF5C563,0xFFD6AD52,0xFFD6B55A,0xFFEFBD63,0xFFEDBD60,0xFFE7BD5A,0xFFE7B552,0xFFE7B55A,0xFFE8BE63,0xFFF5C663,0xFFDEAD52,0xFFF0BE64,0xFFF7C66B,0xFFE7B75B,0xFFDEAD4A,0xFFF7CC6E,0xFFE7B55A,0xFFDEBD5A,0xFFE7BD5A,0xFFEFC66B,0xFFF1C663,0xFFE7BD63,0xFFD6B55A,0xFFDEAD52,0xFFEFBD63,0xFFE7BD5A,0xFFF7D67B,0xFFEECC71,0xFFE7BD5A,0xFFDFB55A,0xFFE7B552,0xFFF2C363,0xFFF5C569,0xFFDEAD52,0xFFEFBD63,0xFFF7C66B,0xFFF2C969,0xFFE7BD5A,0xFFDEAD52,0xFFDEAD52,0xFFEEBC62,0xFFF2C666,0xFFE7B55A,0xFFF0BF64,0xFFF7C663,0xFFE8BD5B,0xFFE7BD5A,0xFFF5D479,0xFFE7BD63,0xFFE7B55A,0xFFDEB55A,0xFFE7BD63,0xFFF7C665,0xFFE7BD5A,0xFFEFBD63,0xFFEFBD63,0xFFF7CD6B,0xFFEDC05E,0xFFE8BD63,0xFFE7BD69,0xFFE4B358,0xFFDBB352,0xFFE6BC62,0xFFD8AD50,0xFFDFB053,0xFFEEBD5B,0xFFE8BE6B,0xFFE6B459,0xFFE1B358,0xFFE8C562,0xFFE6B55A,0xFFDEB459,0xFFE5B458,0xFFE9BF5D,0xFFE8B75B,0xFFE0B054,0xFFEDBB61,0xFFE9C462,0xFFF0BE5C,0xFFE8BD65,0xFFE0B754,0xFFD7B55A,0xFFDCB351,0xFFD6AC4A,0xFFDAAF53,0xFFDEAD4A,0xFFE8BE6B,0xFFE0BD5B,0xFFDFAF54,0xFFE1BB5F,0xFFD8A74C,0xFFDFB156,0xFFE0B75C,0xFFE6BC61,0xFFEDBF5C,0xFFE6BF64,0xFFE0B257,0xFFF1BF65,0xFFE5BA5F,0xFFEBC265,0xFFE1B75F,0xFFE9BA5C,0xFFE7C463,0xFFDEAF54,0xFFDFB358,0xFFE4B559,0xFFF1BF63,0xFFE4B959,0xFFEDBD63,0xFFE8BE5D,0xFFDEBB61,0xFFDAAA4F,0xFFEABF64,0xFFE0B761,0xFFE7BD61,0xFFE9BD61,0xFFE3BB61,0xFFE0B75A,0xFFE5BA5F,0xFFE5C065,0xFFE3BA63,0xFFE7C05D,0xFFE7B55A,0xFFE6BD63,0xFFEFBD5A,0xFFD8A74C,0xFFE7BD63,0xFFEFBD5D,0xFFE0B65B,0xFFEFBD5A,0xFFEFC663,0xFFEFBD63,0xFFE4B55A,0xFFEFBD5A,0xFFE7BD63,0xFFEFBD5A,0xFFF5C56A,0xFFEFBD5D,0xFFDEB55A,0xFFDCAC4A,0xFFDEAD52,0xFFE7C563,0xFFE7BD5A,0xFFE7B75D,0xFFDEBD63,0xFFE7B55A,0xFFD6A54A,0xFFEFBD63,0xFFEABB5A,0xFFEFBD63,0xFFEFC663,0xFFF7C663,0xFFE8B65B,0xFFE4B358,0xFFD6AD52,0xFFDEAE53,0xFFF7C66B,0xFFDEB459,0xFFF7C66B,0xFFF1C66B,0xFFE0AF54,0xFFE7BD63,0xFFE7BD5A,0xFFDEAD52,0xFFE1AF54,0xFFD6A54A,0xFFE7B552,0xFFEFBD63,0xFFF0BE63,0xFFEDBB5A,0xFFE7B552,0xFFDCB358,0xFFD6A54A,0xFFDDAD52,0xFFE7B55A,0xFFD8AD52,0xFFDEB55A,0xFFDEAD52,0xFFDEB55A,0xFFF7C66B,0xFFEABE63,0xFFEFBD63,0xFFE7BD5A,0xFFEFBD63,0xFFDEAD52,0xFFDCB055,0xFFDEAD52,0xFFDFB55A,0xFFF7C663,0xFFF7CF6D,0xFFE7C663,0xFFF2C369,0xFFF0C66A,0xFFF7C66B,0xFFDEBD5A,0xFFDEAD52,0xFFD8AF57,0xFFDEB55A,0xFFCEA54A,0xFFD6AD52,0xFFEFC56A,0xFFE9C26B,0xFFF7CE6B,0xFFF5C56A,0xFFDEB55A,0xFFD7A64B,0xFFDEB55A,0xFFDEAF54,0xFFE7B55A,0xFFF7D67B,0xFFF7CE6B,0xFFE7BD63,0xFFF5C66B,0xFFF7C663,0xFFDEBD5A,0xFFCEA542,0xFFD7AD52,0xFFE9BA5B,0xFFDEB55A,0xFFE2B55E,0xFFEBBE63,0xFFF0CE74,0xFFF0BE5F,0xFFF1C665,0xFFF4C267,0xFFEFC667,0xFFE6C162,0xFFDAB059,0xFFDEB65E,0xFFD7A94E,0xFFEABD62,0xFFE6C16A,0xFFE7C66B,0xFFE8C065,0xFFEBC167,0xFFF5C86A,0xFFCDA04A,0xFFEEC464,0xFFE7B556,0xFFDFB55B,0xFFDEB55A,0xFFF0CA6B,0xFFF0CF75,0xFFEBBD5F,0xFFF3C867,0xFFF7C667,0xFFE6C162,0xFFE6BD67,0xFFDEB862,0xFFEFCB6D,0xFFE7BD5A,0xFFF4CB71,0xFFDEC66B,0xFFDEB663,0xFFDEB552,0xFFEAB85E,0xFFE9B755,0xFFD6A54A,0xFFEFCE73,0xFFF7D67B,0xFFDDB95B,0xFFDEAD4A,0xFFF7CE73,0xFFEFC66B,0xFFDFB865,0xFFE1CC71,0xFFE7BD63,0xFFEEC66A,0xFFF7C66B,0xFFEFD371,0xFFEFC66B,0xFFECC262,0xFFDEB563,0xFFDEBD63,0xFFDEB563,0xFFDEAD52,0xFFEDBB5E,0xFFF7C66B,0xFFEFCE73,0xFFF7DE84,0xFFE9C865,0xFFE7C363,0xFFEFBD63,0xFFE7BC62,0xFFF7CE73,0xFFE8B75B,0xFFE7B55A,0xFFEABE5B,0xFFE7B65B,0xFFE7B55A,0xFFDEBD63,0xFFEFC663,0xFFEDBB5E,0xFFDEAD52,0xFFE7B55A,0xFFE7BD63,0xFFE4C368,0xFFE4C66E,0xFFE7C66B,0xFFF6D379,0xFFE7BD5A,0xFFE7BD63,0xFFE7C663,0xFFEDBD63,0xFFE7B55A,0xFFEFC663,0xFFE7B55A,0xFFDEAD4A,0xFFEDC160,0xFFE7BD63,0xFFDEBD63,0xFFE7B55A,0xFFEFBE63,0xFFEDBD60,0xFFDEB55A,0xFFF0C76C,0xFFEFC663,0xFFE5BB59,0xFFE7BD5A,0xFFE4B55A,0xFFE8BF6C,0xFFEFC663,0xFFE7BD6B,0xFFE7BD63,0xFFF2C66B,0xFFE7BD63,0xFFD6AD52,0xFFE7BD63,0xFFE9C76C,0xFFDEC369,0xFFDEC66B,0xFFF5CC70,0xFFEFC66B,0xFFE8BD5A,0xFFEFBD63,0xFFE3BA5F,0xFFF7CE73,0xFFD6AD52,0xFFE7BD5A,0xFFDEB55A,0xFFE7B75F,0xFFEFCE73,0xFFE7BD6B,0xFFDEB563,0xFFF5CC71,0xFFF1CC6B,0xFFF7CE73,0xFFECCA6F,0xFFE9BD62,0xFFE1B153,0xFFE7BA60,0xFFF0C565,0xFFF3CD71,0xFFEFD176,0xFFF7D678,0xFFE1C368,0xFFECC16A,0xFFE7BB60,0xFFECC363,0xFFDBB257,0xFFF0C56B,0xFFE5BD5F,0xFFE4B858,0xFFE4BA5D,0xFFF7CB6B,0xFFE3B95F,0xFFF7D370,0xFFF4CD72,0xFFE4BB63,0xFFE1B858,0xFFE1B052,0xFFE7C363,0xFFF4C86A,0xFFEAC063,0xFFF7D678,0xFFE7CB6B,0xFFEBC36D,0xFFEFC469,0xFFEFBD63,0xFFDEBE64,0xFFE7C66B,0xFFDEB663,0xFFEFC663,0xFFDEAD50,0xFFE7B75B,0xFFCFAD53,0xFFF7CE72,0xFFDEB563,0xFFEEBF65,0xFFE8C663,0xFFEFBD63,0xFFE7B55A,0xFFE5BC61,0xFFF1C05F,0xFFE7BD63,0xFFE9BE5C,0xFFF6CE72,0xFFEEBE64,0xFFEFC66B,0xFFEABD63,0xFFDEC66B,0xFFD6B65B,0xFFDFB663,0xFFDEAD4B,0xFFE1B054,0xFFE6C562,0xFFF7CE72,0xFFEFD57A,0xFFECBC62,0xFFF5D97F,0xFFEFCE73,0xFFE8CF74,0xFFE7C66B,0xFFF5CD72,0xFFF7CE73,0xFFE9B75A,0xFFDFB65A,0xFFEFC663,0xFFE7BD5A,0xFFEFBD5A,0xFFE1B763,0xFFF7CE6B,0xFFF7C663,0xFFE7BD63,0xFFE7BC61,0xFFE7BB60,0xFFE7BD63,0xFFEFC56A,0xFFE7BD63,0xFFEFCD71,0xFFF7DE84,0xFFEDCE73,0xFFEFD67B,0xFFE7C66B,0xFFF7CE73,0xFFEFBD5A,0xFFE4B55A,0xFFE7BD5A,0xFFE7BD5A,0xFFEFC66B,0xFFE0B662,0xFFF7D473,0xFFEFD67B,0xFFE6BC69,0xFFE7CE73,0xFFE7BD64,0xFFDEAD52,0xFFEFC363,0xFFCFA543,0xFFEFBD63,0xFFF7C663,0xFFEFBD63,0xFFE3C05F,0xFFF7DE84,0xFFE7CE73,0xFFF7C66B,0xFFEFBD63,0xFFDCB35E,0xFFE7B55A,0xFFE0B763,0xFFF7C66B,0xFFF6CC71,0xFFF7D673,0xFFEDCE76,0xFFDEB55A,0xFFE7BD6B,0xFFE7BD63,0xFFEFBD63,0xFFE5BC59,0xFFD6A54A,0xFFF7C663,0xFFEFBD63,0xFFE0BD5B,0xFFEFBE63,0xFFEFC663,0xFFEFBF5D,0xFFEFCE73,0xFFD8AE53,0xFFDEAD4A,0xFFDBB55A,0xFFDFAF54,0xFFDEB552,0xFFCEA54A,0xFFE7BD5A,0xFFF1C665,0xFFF7CE73,0xFFDEBD63,0xFFF7CE73,0xFFF7C86D,0xFFE9C363,0xFFE7BD5A,0xFFDFB553,0xFFF7C663,0xFFDFAE53,0xFFF7C66B,0xFFEFC360,0xFFEFCE73,0xFFE7B55A,0xFFD6AD52,0xFFE7B55A,0xFFD8B358,0xFFE7BD63,0xFFCEA54A,0xFFE7C663,0xFFEEC562,0xFFF0BF5F,0xFFEBBF63,0xFFF0C065,0xFFF5CA6D,0xFFD7A74C,0xFFDCAD52,0xFFE1B156,0xFFE7C05D,0xFFE9BB61,0xFFE1B756,0xFFE5BB5C,0xFFEFC367,0xFFEDBD63,0xFFEBC16D,0xFFE9B95F,0xFFEFBD63,0xFFE8BD60,0xFFF5C469,0xFFF7CC71,0xFFE2BD63,0xFFF1C066,0xFFEFBF5C,0xFFECBF63,0xFFF5D875,0xFFDCB55A,0xFFD6A54A,0xFFE1B156,0xFFE3B558,0xFFE7C463,0xFFE1B756,0xFFE7BD63,0xFFEAC164,0xFFF1C268,0xFFE7BD63,0xFFE4B358,0xFFE7B55A,0xFFDEB563,0xFFE7BD5A,0xFFD4B358,0xFFE7BD6A,0xFFD6B55A,0xFFDEB55A,0xFFF7C66B,0xFFF7D776,0xFFE7C663,0xFFE7B55A,0xFFEFBD63,0xFFF0BF65,0xFFEFC360,0xFFE7BD5A,0xFFEFBD62,0xFFF7D673,0xFFF7CD72,0xFFEFBD63,0xFFE7BB60,0xFFCEA542,0xFFDEB563,0xFFDEB563,0xFFCEAD52,0xFFDBB75F,0xFFE7BD63,0xFFDEB55A,0xFFDEB55A,0xFFF7DC79,0xFFF1C868,0xFFEFC66B,0xFFF5C569,0xFFE7BD63,0xFFE7CC71,0xFFEFC66B,0xFFEFC05D,0xFFEFC76B,0xFFE7CE73,0xFFDEAD52,0xFFE7BD5A,0xFFE4BB60,0xFFDEB55A,0xFFF7C66B,0xFFDEB55A,0xFFE6BB61,0xFFE1B24F,0xFFE7BD63,0xFFE7B754,0xFFEFBD63,0xFFF5CB70,0xFFEFC663,0xFFF1C66B,0xFFE7BD5A,0xFFE7BD63,0xFFE7CE73,0xFFEFC663,0xFFEFC05F,0xFFEFCE6B,0xFFDEAD52,0xFFE7B55A,0xFFE7BD62,0xFFE4C469,0xFFEFC663,0xFFF6CD72,0xFFE7BD5A,0xFFEFC76C,0xFFEFC66B,0xFFF5C366,0xFFF6D67A,0xFFE7BD6B,0xFFDEB55A,0xFFDEAD52,0xFFDCAB50,0xFFC69C4A,0xFFDEB55A,0xFFDEAD52,0xFFEDBC62,0xFFE7B75D,0xFFEFBD5A,0xFFF0BE63,0xFFEFC663,0xFFDFAE53,0xFFE7CE73,0xFFF1C868,0xFFEFC66B,0xFFEFCE73,0xFFEFC66B,0xFFEFBD5A,0xFFF7CB70,0xFFEFD673,0xFFDEB55A,0xFFDEB552,0xFFDEAD52,0xFFE3B65F,0xFFF0C263,0xFFEDC062,0xFFEFC267,0xFFE4B95F,0xFFEFC66B,0xFFE9BD5E,0xFFE3BC5C,0xFFF3CF74,0xFFF0C667,0xFFE7BE5B,0xFFE4B85D,0xFFEBB95A,0xFFDAAD52,0xFFD6A54A,0xFFE2B156,0xFFE8BE62,0xFFF3C167,0xFFE5C469,0xFFF7CF74,0xFFDFB257,0xFFE5B963,0xFFF0C263,0xFFDAB156,0xFFDFB65B,0xFFE4B95F,0xFFE3BE5F,0xFFE9BC5D,0xFFE7C263,0xFFF0C667,0xFFEBC267,0xFFE7BD62,0xFFE1AF4F,0xFFF7CE73,0xFFF5C462,0xFFE7BD63,0xFFE6BD5A,0xFFE7B55A,0xFFEFC665,0xFFF5C563,0xFFD6AD52,0xFFD6B55A,0xFFEFBD63,0xFFEDBD60,0xFFE7BD5A,0xFFE7B552,0xFFE7B55A,0xFFE8BE63,0xFFF5C663,0xFFDEAD52,0xFFF0BE64,0xFFF7C66B,0xFFE7B75B,0xFFDEAD4A,0xFFF7CC6E,0xFFE7B55A,0xFFDEBD5A,0xFFE7BD5A,0xFFEFC66B,0xFFF1C663,0xFFE7BD63,0xFFD6B55A,0xFFDEAD52,0xFFEFBD63,0xFFF2C163,0xFFEFBD63,0xFFEFC66A,0xFFCEA54A,0xFFD0A74C,0xFFDEB55A,0xFFE2B050,0xFFE6C360,0xFFE7BD63,0xFFEFC66B,0xFFDEAD52,0xFFE6BA5F,0xFFEFBD5A,0xFFDEB55A,0xFFDEAD52,0xFFDCB358,0xFFE7BD60,0xFFEFC663,0xFFE7BD5B,0xFFDEAD52,0xFFE8B654,0xFFF7C66B,0xFFEFC065,0xFFEFC663,0xFFDEB55A,0xFFCEA54A,0xFFD6A54A,0xFFE7BA57,0xFFDEAD4A,0xFFEFC66B,0xFFEFBD63,0xFFDEB459,0xFFEDC05D,0xFFE7BD63,0xFFE6BC68,0xFFE7B55A,0xFFDDB553,0xFFE7BD63,0xFFD6AD50,0xFFDEAD51,0xFFEFBD5A,0xFFE7BD6B,0xFFE7B55A,0xFFE1B257,0xFFE7C663,0xFFE7B55A,0xFFDEB55A,0xFFE6B458,0xFFE9C05D,0xFFE7B55A,0xFFDFAE53,0xFFEFBD63,0xFFE9C664,0xFFEFBD5A,0xFFE7BD65,0xFFDEB552,0xFFD6B55A,0xFFDEB552,0xFFD6AD4A,0xFFD8AD52,0xFFDEAD4A,0xFFE7BD6B,0xFFDEBD5A,0xFFDFAE53,0xFFE1B95E,0xFFDBAA4F,0xFFDFB257,0xFFE4BA60,0xFFE7BD5D,0xFFEAC360,0xFFEDC165,0xFFE4B75D,0xFFF4C368,0xFFEEC065,0xFFF1C868,0xFFE8BD5F,0xFFECC060,0xFFE7C063,0xFFDEB257,0xFFDEB054,0xFFE8B95C,0xFFF4C363,0xFFE1B759,0xFFEABD63,0xFFE8BD60,0xFFDEB85D,0xFFDCAC51,0xFFE4B65B,0xFFE4BA5D,0xFFE7BD5D,0xFFECBD5D,0xFFEBBF65,0xFFE4BA5A,0xFFEEC065,0xFFEECF75,0xFFEAC164,0xFFE7BF5D,0xFFE6B55A,0xFFE6BC62,0xFFEFBD5B,0xFFD8A74C,0xFFE8BD63,0xFFEFBD5D,0xFFE0B65B,0xFFEFBD5A,0xFFEFC663,0xFFEEBC62,0xFFE4B55A,0xFFEEBC59,0xFFE7BD62,0xFFEFBD5A,0xFFF5C56A,0xFFEFBD5D,0xFFDEB55A,0xFFDCAC4B,0xFFDEAD52,0xFFE7C462,0xFFE7BD5A,0xFFE6B75C,0xFFDEBD63,0xFFE7B55A,0xFFD6A64B,0xFFEFBD63,0xFFEABB5A,0xFFEFBD63,0xFFEFC663,0xFFF7C663,0xFFE7B55B,0xFFE2B350,0xFFE7C663,0xFFE0B662,0xFFF7CE73,0xFFEFBD5B,0xFFEFBD63,0xFFF1C663,0xFFEEBD64,0xFFE7BD63,0xFFDEAD52,0xFFD6A54A,0xFFD0A747,0xFFCEAD52,0xFFCEAD52,0xFFDEAD52,0xFFDEB562,0xFFE1BD5D,0xFFF7C66B,0xFFE6BC5A,0xFFE7B55A,0xFFD6AC4A,0xFFE7B552,0xFFE4C163,0xFFEFBD5A,0xFFEFBD63,0xFFEFBD5A,0xFFF7C663,0xFFEFC363,0xFFE7BD6B,0xFFDEAD52,0xFFDEB55A,0xFFCFA543,0xFFE7B659,0xFFDEB459,0xFFE5B55A,0xFFF7C66A,0xFFF7DA7E,0xFFF4C663,0xFFF2C869,0xFFF6C66B,0xFFF0C664,0xFFDEB65A,0xFFD1A64B,0xFFDFB95F,0xFFDEAE53,0xFFDBB257,0xFFDDB460,0xFFEECB70,0xFFF1C869,0xFFEAC064,0xFFF5C469,0xFFCAA04D,0xFFE9B856,0xFFE5B55A,0xFFE0B459,0xFFE0B55A,0xFFF7CF6E,0xFFF7DB80,0xFFE7BD63,0xFFF7CB6B,0xFFF7C66A,0xFFDEB65A,0xFFDBB25D,0xFFDBB85E,0xFFE9BD5C,0xFFDEB55A,0xFFDEB562,0xFFDEB55A,0xFFE7BE64,0xFFE7B55A,0xFFEFC360,0xFFF0BE63,0xFFEFC66B,0xFFEFCE6B,0xFFE7BD6B,0xFFDCB05B,0xFFCEA54A,0xFFF7C66B,0xFFEFCE73,0xFFDFBF65,0xFFDCB560,0xFFEFC66B,0xFFF6CD6B,0xFFD6A54A,0xFFF0CD72,0xFFE7B552,0xFFDEB55D,0xFFDEB55A,0xFFE7C66B,0xFFE7BD63,0xFFEFBD5A,0xFFEFC363,0xFFF7C663,0xFFEFCE6B,0xFFEFC66B,0xFFDFB664,0xFFEFCA6D,0xFFEBBF5E,0xFFF3C96E,0xFFE2C86D,0xFFE2B763,0xFFE0B552,0xFFE9B95E,0xFFE9BA58,0xFFDCAA50,0xFFEDCA6F,0xFFF7D277,0xFFDEB95B,0xFFDEB14E,0xFFF3CA6F,0xFFEBC469,0xFFE1BB66,0xFFE2CC71,0xFFE5BD63,0xFFEEC96C,0xFFF5C66B,0xFFEFD070,0xFFEFC66B,0xFFEEC263,0xFFE2BB67,0xFFE2BD63,0xFFE2B763,0xFFDEAF54,0xFFEBBC5F,0xFFF7C669,0xFFEDCA6F,0xFFF3D77D,0xFFE9C563,0xFFE7C363,0xFFEFBD63,0xFFE7BC62,0xFFF7CE73,0xFFE8B75B,0xFFE7B55A,0xFFEABE5B,0xFFE7B65B,0xFFE7B55A,0xFFDEBD63,0xFFEFC663,0xFFEDBB5E,0xFFDEAD52,0xFFE7B55A,0xFFE7BD63,0xFFE4C368,0xFFE4C66E,0xFFE7C66B,0xFFF6D379,0xFFE7BD5A,0xFFE7BD63,0xFFE7C663,0xFFEDBD63,0xFFE7B55A,0xFFEFC663,0xFFE7B55A,0xFFDEAD4A,0xFFEDC160,0xFFE7BD63,0xFFDEBD63,0xFFE7B55A,0xFFEFBE63,0xFFEFC666,0xFFF7CE73,0xFFF6C66A,0xFFDEAD52,0xFFE7B654,0xFFE7B55A,0xFFEDC369,0xFFEFCD71,0xFFEFD67B,0xFFF7D673,0xFFE7BD63,0xFFF7CE73,0xFFF7C66B,0xFFE7BD63,0xFFD6AD52,0xFFE7C66B,0xFFD3B257,0xFFEFBD63,0xFFDFB654,0xFFF7C66B,0xFFDEB459,0xFFF7CE6B,0xFFF7CC71,0xFFEFC663,0xFFE7BD63,0xFFE7B552,0xFFE7BD63,0xFFEFC86D,0xFFEFC663,0xFFF7D673,0xFFE7C66B,0xFFF5CC71]]);
_root.imDict["greyBrick"] = _root.toBmap([32,32,[0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFFDBF1EA,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF000000,0xFF618179,0xFFA7BEB6,0xFFDBF1EA,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFF618179,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFF385149,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF385149,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF385149,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF385149,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF000000,0xFF000000,0xFF385149,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF618179,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF618179,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF000000,0xFF618179,0xFFA7BEB6,0xFFDBF1EA,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFFDBF1EA,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFF385149,0xFF000000,0xFF000000,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFA7BEB6,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFFDBF1EA,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFFA7BEB6,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF000000,0xFF000000,0xFF618179,0xFF618179,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFFA7BEB6,0xFF618179,0xFF618179,0xFF618179,0xFF000000,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF618179,0xFF385149,0xFF618179,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF618179,0xFF618179,0xFF618179,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF618179,0xFF385149,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF385149,0xFF618179,0xFF618179,0xFF385149,0xFF618179,0xFF000000,0xFF000000,0xFF385149,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF385149,0xFF000000,0xFF000000,0xFF385149,0xFF385149,0xFF618179,0xFF000000,0xFF385149,0xFF385149,0xFF385149,0xFF385149,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000]]);
_root.imDict["hotRock"] = _root.toBmap([32,32,[0xFF900808,0xFFB04808,0xFFB05808,0xFFB05008,0xFFB05008,0xFFB06008,0xFFB06808,0xFFB07808,0xFFB08808,0xFFB06008,0xFF680000,0xFF200000,0xFF200000,0xFF500000,0xFFD81800,0xFFD84008,0xFFD84008,0xFFD83808,0xFFD84008,0xFFD84808,0xFFD86008,0xFFD85008,0xFFD84008,0xFFD83008,0xFF580000,0xFF280000,0xFF380000,0xFF502000,0xFF501000,0xFF480800,0xFF480000,0xFF380000,0xFF901008,0xFFA82008,0xFFB06808,0xFFB06808,0xFFB05008,0xFFB05008,0xFFB04808,0xFFB04008,0xFF982008,0xFF580000,0xFF180000,0xFF580000,0xFF480000,0xFF280000,0xFF780000,0xFFD82808,0xFFD84808,0xFFD84808,0xFFD84808,0xFFD84808,0xFFD84808,0xFFD84008,0xFFD82008,0xFF980000,0xFF300000,0xFF300000,0xFF501800,0xFF501800,0xFF501800,0xFF501000,0xFF380000,0xFF380000,0xFF300000,0xFF900800,0xFFB05008,0xFFB06008,0xFFB05808,0xFFB05008,0xFFB04008,0xFF880008,0xFF380000,0xFF280000,0xFF400000,0xFF580000,0xFF600000,0xFF781000,0xFF780000,0xFF480000,0xFFD82008,0xFFD85008,0xFFD85008,0xFFD84808,0xFFD84008,0xFFD82808,0xFFD01008,0xFF500000,0xFF280000,0xFF400000,0xFF501800,0xFF501800,0xFF501800,0xFF501800,0xFF400000,0xFF380000,0xFF200000,0xFF900800,0xFFB04008,0xFFB05008,0xFFB05008,0xFFB04808,0xFFA02008,0xFF300000,0xFF480000,0xFF600000,0xFF700800,0xFF700800,0xFF802000,0xFF803000,0xFF802000,0xFF800000,0xFF300000,0xFFA80000,0xFFD84008,0xFFD84008,0xFFD83808,0xFFD01008,0xFF980000,0xFF200000,0xFF300000,0xFF480800,0xFF501000,0xFF501000,0xFF502000,0xFF583008,0xFF501000,0xFF200000,0xFF180000,0xFF580000,0xFF981808,0xFFB03808,0xFFB03808,0xFF981008,0xFF480000,0xFF400000,0xFF680000,0xFF701000,0xFF781000,0xFF781800,0xFF803000,0xFF803000,0xFF802800,0xFF781800,0xFF680000,0xFF280000,0xFF880000,0xFFC80008,0xFFA80000,0xFF800000,0xFF380000,0xFF180000,0xFF280000,0xFF400000,0xFF501000,0xFF501000,0xFF502000,0xFF583008,0xFF501000,0xFF280000,0xFF180000,0xFF180000,0xFF400000,0xFF600000,0xFF400000,0xFF180000,0xFF180000,0xFF600000,0xFF680000,0xFF781000,0xFF700800,0xFF700800,0xFF781000,0xFF802800,0xFF802000,0xFF802000,0xFF680000,0xFF600000,0xFF300000,0xFF280000,0xFF180000,0xFF280000,0xFF480000,0xFF580000,0xFF400000,0xFF380000,0xFF400000,0xFF480000,0xFF480800,0xFF501000,0xFF480000,0xFF280000,0xFF180000,0xFF580008,0xFF680008,0xFF700008,0xFF700008,0xFF600000,0xFF280000,0xFF680000,0xFF680000,0xFF781000,0xFF781000,0xFF781000,0xFF700800,0xFF781000,0xFF802000,0xFF802800,0xFF782000,0xFF600000,0xFF300000,0xFF280000,0xFF500000,0xFF900808,0xFF981008,0xFF800000,0xFF600000,0xFF380000,0xFF280000,0xFF500000,0xFF400000,0xFF400000,0xFF400000,0xFF380000,0xFF480000,0xFF801008,0xFF801008,0xFF781008,0xFF801008,0xFF700008,0xFF380000,0xFF600000,0xFF680000,0xFF781000,0xFF781000,0xFF781000,0xFF781000,0xFF700800,0xFF802000,0xFF802800,0xFF802000,0xFF600000,0xFF180000,0xFF600000,0xFFA01808,0xFFB02808,0xFFB03808,0xFFA82008,0xFFA02008,0xFF901008,0xFF700000,0xFF400000,0xFF180000,0xFF480000,0xFF400000,0xFF380000,0xFF680008,0xFF882008,0xFF881808,0xFF801008,0xFF802008,0xFF802008,0xFF500000,0xFF280000,0xFF600000,0xFF781000,0xFF781800,0xFF781800,0xFF781800,0xFF701000,0xFF781800,0xFF781800,0xFF680000,0xFF580000,0xFF280000,0xFF981008,0xFFA82808,0xFFB02808,0xFFB03808,0xFFB03808,0xFFB03808,0xFFB03808,0xFFB03808,0xFF780000,0xFF480000,0xFF400000,0xFF200000,0xFF380000,0xFF882008,0xFF902808,0xFF882008,0xFF801008,0xFF802008,0xFF883008,0xFF700008,0xFF300000,0xFF700000,0xFF680000,0xFF781000,0xFF701000,0xFF600000,0xFF680800,0xFF480000,0xFF680000,0xFF600000,0xFF380000,0xFF500000,0xFFA02008,0xFFA82808,0xFFA82008,0xFFA82008,0xFFB02808,0xFFB03808,0xFFB05008,0xFFB04008,0xFFB03808,0xFFA02008,0xFF780000,0xFF600000,0xFF380000,0xFF801008,0xFF882008,0xFF801008,0xFF801008,0xFF882008,0xFF903808,0xFF700008,0xFF200000,0xFF380000,0xFF580000,0xFF600000,0xFF280000,0xFF400000,0xFF500000,0xFF300000,0xFF400000,0xFF500000,0xFF400000,0xFF580000,0xFFA02008,0xFFA82808,0xFFA82008,0xFFA82808,0xFFA82008,0xFFA82808,0xFFB03808,0xFFB03808,0xFFB03808,0xFFA83008,0xFFA02008,0xFF500000,0xFF200000,0xFF680008,0xFF802008,0xFF801808,0xFF801008,0xFF882808,0xFF904008,0xFF680008,0xFF400000,0xFF280000,0xFF480000,0xFF480000,0xFF881008,0xFF902008,0xFF902008,0xFF902008,0xFF982808,0xFFA03008,0xFF380000,0xFF180000,0xFF700000,0xFFB03808,0xFFB03808,0xFFA82808,0xFFA82008,0xFFA82008,0xFFA02008,0xFFA82808,0xFFB03008,0xFFB04808,0xFFB04008,0xFF981008,0xFF180000,0xFF580008,0xFF801008,0xFF882808,0xFF882008,0xFF984808,0xFF985010,0xFF802008,0xFF380000,0xFF300000,0xFF700000,0xFFB05008,0xFFB06008,0xFFB05808,0xFFB05808,0xFFB05008,0xFFB06808,0xFFB07008,0xFF983008,0xFF400000,0xFF380000,0xFFB04008,0xFFB04808,0xFFB03008,0xFFA82008,0xFFA02008,0xFFA01808,0xFFA01808,0xFFA82808,0xFFB04808,0xFFB04008,0xFF981808,0xFF280000,0xFF200000,0xFF700008,0xFF903008,0xFF984810,0xFFA05010,0xFF985010,0xFF701008,0xFF200000,0xFF700000,0xFFB07808,0xFFB07008,0xFFB06808,0xFFB05808,0xFFB05808,0xFFB06008,0xFFB07008,0xFFB09010,0xFFB09810,0xFFA03808,0xFF380000,0xFF881000,0xFFB03808,0xFFB03008,0xFFA82808,0xFFA82008,0xFFA02008,0xFFA82008,0xFFB03008,0xFFB04808,0xFFB04808,0xFFA83008,0xFF600000,0xFF280000,0xFF600008,0xFF903008,0xFF984810,0xFFA05810,0xFF984810,0xFF680008,0xFF180000,0xFFA04008,0xFFB08008,0xFFB07008,0xFFB06808,0xFFB06008,0xFFB04808,0xFFA84808,0xFFB06808,0xFFB08808,0xFFB08810,0xFFB06808,0xFF500000,0xFF400000,0xFFA02008,0xFFB03008,0xFFB03008,0xFFB03008,0xFFA82008,0xFFA82008,0xFFB03008,0xFFB05008,0xFFB05808,0xFFB04808,0xFF900808,0xFF500000,0xFF300000,0xFF600008,0xFF801808,0xFF882008,0xFF781008,0xFF500000,0xFF200000,0xFF983008,0xFFB08808,0xFFB07808,0xFFB06808,0xFFB05008,0xFFB04808,0xFFA03808,0xFFA84008,0xFFB06008,0xFFB08008,0xFFB08008,0xFF881008,0xFF400000,0xFF700000,0xFFB03008,0xFFB04008,0xFFB03808,0xFFB03808,0xFFB03808,0xFFB04808,0xFFB06808,0xFFB07008,0xFFB05808,0xFFA02008,0xFF600000,0xFF300000,0xFF180000,0xFF400000,0xFF480000,0xFF180000,0xFF180000,0xFF480000,0xFFB05808,0xFFB08808,0xFFB07008,0xFFB05808,0xFFB05008,0xFFB04808,0xFFB04808,0xFFB04808,0xFFB06008,0xFFB08808,0xFFB09810,0xFFB07008,0xFF680000,0xFF500000,0xFFA82808,0xFFB03808,0xFFB04008,0xFFB03808,0xFFB04008,0xFFB05008,0xFFB06808,0xFFB06808,0xFFB05808,0xFFA82808,0xFF380000,0xFF180000,0xFF400008,0xFF581808,0xFF581808,0xFF400008,0xFF280000,0xFF480000,0xFFB06808,0xFFB08810,0xFFB07008,0xFFB05808,0xFFB05008,0xFFB05808,0xFFB05808,0xFFB05808,0xFFB06808,0xFFB08008,0xFFB08810,0xFFB08810,0xFFA03808,0xFF300000,0xFF480000,0xFF880000,0xFF880000,0xFF800000,0xFF980808,0xFFA83008,0xFFB04008,0xFFB03808,0xFFA82808,0xFF680000,0xFF280000,0xFF400008,0xFF582810,0xFF603010,0xFF603810,0xFF602810,0xFF300000,0xFF480000,0xFFB06008,0xFFB09010,0xFFB07008,0xFFB05808,0xFFB05808,0xFFB06008,0xFFB06808,0xFFB06808,0xFFB07008,0xFFB07808,0xFFB08008,0xFFB08008,0xFFB06808,0xFF801008,0xFF200000,0xFF180000,0xFF280000,0xFF300000,0xFF400000,0xFF400000,0xFF480000,0xFF700000,0xFF680000,0xFF380000,0xFF280000,0xFF501808,0xFF603010,0xFF602810,0xFF684810,0xFF603810,0xFF480008,0xFF600000,0xFFA83808,0xFFB09010,0xFFB08008,0xFFB06808,0xFFB06008,0xFFB06008,0xFFB06808,0xFFB06808,0xFFB07008,0xFFB08808,0xFFB09010,0xFFB08008,0xFFB07808,0xFF902008,0xFF280000,0xFF580000,0xFF780000,0xFF800800,0xFF700000,0xFF500000,0xFF380000,0xFF280000,0xFF200000,0xFF200000,0xFF300000,0xFF581808,0xFF602810,0xFF603810,0xFF707010,0xFF705810,0xFF581810,0xFF400000,0xFF901808,0xFFB08810,0xFFB08808,0xFFB07808,0xFFB06808,0xFFA86008,0xFFA85808,0xFFB06008,0xFFB07008,0xFFB0A010,0xFFB0A810,0xFFB08008,0xFFB06808,0xFF902808,0xFF200000,0xFF881000,0xFFA04000,0xFFA84800,0xFFA85000,0xFFA85000,0xFFA04800,0xFF803000,0xFF400000,0xFF200000,0xFF280000,0xFF581808,0xFF603010,0xFF705010,0xFF708018,0xFF706010,0xFF480008,0xFF180000,0xFF580000,0xFFB06808,0xFFB08008,0xFFB07808,0xFFB07008,0xFFA86008,0xFFA85808,0xFFB07008,0xFFB09008,0xFFB0A010,0xFFB09810,0xFFB08008,0xFFB06808,0xFF700000,0xFF500000,0xFF881800,0xFFA85000,0xFFB05800,0xFFB05800,0xFFB06000,0xFFB07808,0xFFB06800,0xFF882800,0xFF380000,0xFF280000,0xFF380000,0xFF582010,0xFF684010,0xFF706010,0xFF603810,0xFF400000,0xFF200000,0xFF280000,0xFF800008,0xFFB07008,0xFFB07008,0xFFB06808,0xFFB06008,0xFFB06008,0xFFB08808,0xFFB09008,0xFFB07808,0xFFB06808,0xFFB05808,0xFF902808,0xFF480000,0xFF480000,0xFF902800,0xFFA85800,0xFFA85800,0xFFA85800,0xFFB07808,0xFFB09008,0xFFB07008,0xFFA86000,0xFF600000,0xFF380000,0xFF200000,0xFF380008,0xFF500008,0xFF480008,0xFF400000,0xFF180000,0xFF500000,0xFF580000,0xFF400000,0xFF680000,0xFF983008,0xFFB06008,0xFFB06008,0xFFB06808,0xFFB06808,0xFF983008,0xFF801008,0xFF580000,0xFF300000,0xFF380000,0xFF300000,0xFF180000,0xFF680000,0xFFA04800,0xFFA85000,0xFFB06000,0xFFB07808,0xFFB08808,0xFFB06808,0xFFB07008,0xFF984800,0xFF600000,0xFF200000,0xFF200000,0xFF580000,0xFF780000,0xFF981008,0xFFB03008,0xFFA01808,0xFF900808,0xFF900800,0xFF600000,0xFF280000,0xFF801008,0xFF903808,0xFF902808,0xFF800808,0xFF380000,0xFF300000,0xFF800000,0xFFA80000,0xFF900000,0xFF780000,0xFF380000,0xFF480000,0xFF903000,0xFFA05000,0xFFA86000,0xFFB07000,0xFFB08808,0xFFB0A808,0xFFB08808,0xFF984800,0xFF500000,0xFF280000,0xFF500000,0xFF982008,0xFFB03008,0xFFB04808,0xFFB05008,0xFFB05008,0xFFB04808,0xFFB04808,0xFFA02008,0xFF500000,0xFF200000,0xFF280000,0xFF300000,0xFF400000,0xFF980000,0xFFC80000,0xFFD81008,0xFFD81808,0xFFD81008,0xFFC00000,0xFF880000,0xFF200000,0xFF500000,0xFF882000,0xFFA85800,0xFFB07000,0xFFB09808,0xFFB0A808,0xFFB08808,0xFF801800,0xFF300000,0xFF580000,0xFFA83008,0xFFB04008,0xFFB04008,0xFFB05008,0xFFB05008,0xFFB05808,0xFFB06808,0xFFB06008,0xFFB04808,0xFFA01808,0xFF500000,0xFF400000,0xFF980000,0xFFD80800,0xFFD82808,0xFFD82808,0xFFD82808,0xFFD82808,0xFFD82808,0xFFD83008,0xFFD81808,0xFF880000,0xFF180000,0xFF600000,0xFFA85000,0xFFB0A008,0xFFB0B808,0xFFB08008,0xFF983800,0xFF680000,0xFF480000,0xFF981008,0xFFB04008,0xFFB04808,0xFFB04008,0xFFB04008,0xFFB04808,0xFFB04808,0xFFB06008,0xFFB06008,0xFFB05008,0xFFA82808,0xFF500000,0xFF780000,0xFFD83008,0xFFD84008,0xFFD83808,0xFFD83808,0xFFD83808,0xFFD82808,0xFFD82808,0xFFD83008,0xFFD84008,0xFFC80008,0xFF380000,0xFF380000,0xFF881000,0xFFB08808,0xFFB09808,0xFFB07008,0xFF600000,0xFF380000,0xFF800000,0xFFB03808,0xFFB04808,0xFFB04008,0xFFB03808,0xFFB03808,0xFFB04808,0xFFB05008,0xFFB06808,0xFFB07008,0xFFB05808,0xFF900000,0xFF280000,0xFFD01008,0xFFD85008,0xFFD84808,0xFFD84008,0xFFD84008,0xFFD83008,0xFFD82808,0xFFD82000,0xFFD83808,0xFFD84008,0xFFD82808,0xFFB80000,0xFF400000,0xFF280000,0xFF983800,0xFF902800,0xFF884000,0xFF300000,0xFF380000,0xFFB03008,0xFFB04808,0xFFB04808,0xFFB04008,0xFFB04008,0xFFB04808,0xFFB06008,0xFFB07808,0xFFB08808,0xFFB08008,0xFFB06008,0xFF880000,0xFF300000,0xFFD01008,0xFFD85808,0xFFD84808,0xFFD84008,0xFFD83008,0xFFD81800,0xFFD81800,0xFFD81800,0xFFD84008,0xFFD85008,0xFFD83808,0xFFD83008,0xFFB80000,0xFF280000,0xFF580000,0xFF480000,0xFF700000,0xFF280000,0xFF780000,0xFFB03008,0xFFB04008,0xFFB04008,0xFFB04008,0xFFB03808,0xFFB04008,0xFFB05808,0xFFB08008,0xFFB08808,0xFFB07808,0xFFB04808,0xFF700000,0xFF180000,0xFFC00808,0xFFD86008,0xFFD84808,0xFFD84008,0xFFD82008,0xFFD81800,0xFFD81800,0xFFD83008,0xFFD85808,0xFFD85808,0xFFD84008,0xFFD83008,0xFFB80000,0xFF200000,0xFF200000,0xFF280000,0xFF300000,0xFF300000,0xFF880000,0xFFA82008,0xFFB03808,0xFFB04808,0xFFB04808,0xFFB04808,0xFFB04808,0xFFB05808,0xFFB08808,0xFFB09808,0xFFB09008,0xFFB05008,0xFF400000,0xFF180000,0xFFB80000,0xFFD84808,0xFFD84008,0xFFD83008,0xFFD82808,0xFFD83008,0xFFD84808,0xFFD86008,0xFFD86808,0xFFD85808,0xFFD84008,0xFFD01008,0xFF400000,0xFF200000,0xFF300000,0xFF400000,0xFF480000,0xFF280000,0xFF700000]]);
_root.imDict["sanskrit"] = _root.toBmap([32,32,[0xFF9C9463,0xFF9C945A,0xFF948C5A,0xFF84845A,0xFF9C945A,0xFF948C5A,0xFF9C945A,0xFF948C5A,0xFF847B52,0xFF847B52,0xFF847B52,0xFF84845A,0xFF948C5A,0xFF9C945A,0xFF847B52,0xFF948C5A,0xFF9C9463,0xFF948C5A,0xFF9C945A,0xFF948C5A,0xFF9C9463,0xFF9C945A,0xFF948C5A,0xFF948C5A,0xFF9C9463,0xFF847B52,0xFF847B52,0xFF84845A,0xFF9C945A,0xFF948C5A,0xFF9C9463,0xFF948C5A,0xFFCEC67B,0xFFCEC684,0xFFCEBD7B,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEBD7B,0xFFCEC67B,0xFFCEC67B,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFCEBD73,0xFF9C9463,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFF9C945A,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6C684,0xFFCEC67B,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFF848452,0xFFD6C684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFCEC67B,0xFFD6CE8C,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEBD73,0xFF84845A,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFF847B52,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFF84845A,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC67B,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC67B,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFF9C945A,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC67B,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEC67B,0xFFCEBD7B,0xFFCEC67B,0xFFCEBD7B,0xFF9C9463,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC67B,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFCEBD73,0xFF9C9463,0xFFCEC67B,0xFFD6CE8C,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD7B,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEBD73,0xFF9C9463,0xFFCEC67B,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC67B,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEBD73,0xFFCEBD7B,0xFFCEBD73,0xFFC6BD6B,0xFFC6BD6B,0xFFCEBD73,0xFFCEBD73,0xFFC6B56B,0xFFCEBD73,0xFFCEBD73,0xFFCEC67B,0xFFC6B56B,0xFFA59C63,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFD6CE8C,0xFFCEC684,0xFFCEBD73,0xFFC6B56B,0xFF9C945A,0xFF9C9463,0xFF9C945A,0xFF9C9463,0xFF84845A,0xFF8C845A,0xFF8C845A,0xFF848452,0xFF8C845A,0xFF9C9463,0xFF9C945A,0xFF9C9463,0xFF9C945A,0xFF9C945A,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEC67B,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEBD73,0xFF8C845A,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFA59C63,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFCEC684,0xFFCEC67B,0xFFCEC684,0xFFD6C684,0xFFCEBD7B,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6CE8C,0xFFCEBD73,0xFF9C945A,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEBD7B,0xFFCEC684,0xFFD6C684,0xFFA59C63,0xFFCEC684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFD6CE8C,0xFFCEBD7B,0xFFCEC684,0xFFD6CE8C,0xFFCEBD73,0xFF948C5A,0xFFD6CE8C,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFF9C9463,0xFFCEBD73,0xFFC6BD6B,0xFFCEBD73,0xFFBDAD6B,0xFFC6BD6B,0xFFCEBD7B,0xFFC6BD6B,0xFFCEBD7B,0xFFCEBD7B,0xFFC6BD6B,0xFFCEBD7B,0xFFCEC67B,0xFFCEC67B,0xFFCEBD7B,0xFFCEC67B,0xFFCEBD7B,0xFFCEC684,0xFF948C5A,0xFFD6C684,0xFFD6CE8C,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFF9C9463,0xFFA59C63,0xFF848452,0xFF8C845A,0xFF9C9463,0xFF9C945A,0xFF9C9463,0xFF84845A,0xFF948C5A,0xFF84845A,0xFF9C9463,0xFF9C945A,0xFF847B52,0xFF9C9463,0xFF948C5A,0xFF9C945A,0xFF9C9463,0xFF948C5A,0xFF948C5A,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD73,0xFF9C9463,0xFFCEBD73,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEBD73,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEBD73,0xFF9C945A,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFBDAD6B,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFCEBD73,0xFF948C5A,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFC6B56B,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEBD7B,0xFF847B52,0xFFCEC684,0xFFD6C684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEBD7B,0xFFBDB56B,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEBD7B,0xFF84845A,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFBDB56B,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEBD73,0xFF847B52,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFC6B56B,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEBD73,0xFF9C9463,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFC6B56B,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEBD7B,0xFF9C9463,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFC6B56B,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEBD7B,0xFF9C945A,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFBDB56B,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFCEBD7B,0xFF9C945A,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEBD7B,0xFFBDAD6B,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEBD73,0xFF84845A,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFBDAD6B,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEBD7B,0xFF9C945A,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFCEC684,0xFFC6B56B,0xFFD6CE8C,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEBD73,0xFF9C9463,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEBD7B,0xFFC6B56B,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6CE8C,0xFFD6C684,0xFFD6CE8C,0xFFCEC684,0xFFCEBD7B,0xFFA59C63,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFD6CE8C,0xFFCEC684,0xFFD6C684,0xFFCEC684,0xFFCEC684,0xFFCEBD7B,0xFFC6B56B,0xFFC6B56B,0xFFCEBD73,0xFFC6BD6B,0xFFC6B56B,0xFFBDB56B,0xFFC6B56B,0xFFBDB56B,0xFFC6B56B,0xFFC6B56B,0xFFBDB56B,0xFFC6B56B,0xFFCEBD73,0xFFC6B56B,0xFFCEBD73,0xFFC6BD6B,0xFFCEBD7B,0xFFA59C63,0xFFC6BD6B,0xFFCEBD73,0xFFC6B56B,0xFFBDB56B,0xFFBDB56B,0xFFCEBD73,0xFFBDB56B,0xFFCEBD73,0xFFC6B56B,0xFFC6BD6B,0xFFC6B56B,0xFFC6BD6B,0xFFCEBD73,0xFFBDAD6B]]);
_root.imDict["indentedBrick"] = _root.toBmap([32,32,[0xFFB09890,0xFFA89890,0xFFA09088,0xFFA89088,0xFFB09890,0xFFA89890,0xFFA89890,0xFF585890,0xFF706838,0xFFC8A058,0xFFA098B0,0xFFB0A880,0xFFB8A090,0xFFB08898,0xFFB8B890,0xFFB8A098,0xFFB08098,0xFFA89890,0xFFA09088,0xFFA89088,0xFFB09890,0xFFA89890,0xFFA89890,0xFF929890,0xFF706070,0xFFC8A058,0xFFA098B0,0xFFB0A880,0xFFB8A090,0xFFB08898,0xFFB8B890,0xFFB8A098,0xFF846098,0xFF747368,0xFF704860,0xFF787850,0xFF604858,0xFF787048,0xFF766257,0xFF442860,0xFF655027,0xFFA89048,0xFF887088,0xFF747368,0xFF544860,0xFF988840,0xFF584078,0xFF806740,0xFF807068,0xFF747368,0xFF704860,0xFF787850,0xFF604858,0xFF787048,0xFF766257,0xFF544860,0xFF604038,0xFFA89048,0xFF887088,0xFF747368,0xFF544860,0xFF988840,0xFF584078,0xFF806740,0xFF605068,0xFF887048,0xFF655870,0xFF707848,0xFF766257,0xFF836054,0xFF747368,0xFF362054,0xFF544820,0xFFA88840,0xFF847890,0xFF705161,0xFF675850,0xFF787850,0xFF766257,0xFF786860,0xFF604858,0xFF887048,0xFF655870,0xFF707848,0xFF766257,0xFF836054,0xFF747368,0xFF442058,0xFF545830,0xFFA88840,0xFF847890,0xFF705161,0xFF675850,0xFF787850,0xFF766257,0xFF786860,0xFF684858,0xFF787850,0xFF766257,0xFF624860,0xFF806740,0xFF887068,0xFF403068,0xFF303028,0xFF544018,0xFFB4A040,0xFF846098,0xFF685068,0xFF585850,0xFF806740,0xFF544860,0xFF786038,0xFF684858,0xFF787850,0xFF766257,0xFF624860,0xFF806740,0xFF887068,0xFF685068,0xFF503850,0xFF545830,0xFFB4A040,0xFF846098,0xFF685068,0xFF585850,0xFF806740,0xFF544860,0xFF786038,0xFF544858,0xFF786840,0xFF806860,0xFF747368,0xFF836054,0xFF624860,0xFF675850,0xFF343048,0xFF544820,0xFFB0A038,0xFF786090,0xFF786860,0xFF786860,0xFF624860,0xFF907242,0xFF655870,0xFF565448,0xFF786840,0xFF806860,0xFF747368,0xFF836054,0xFF624860,0xFF909850,0xFF402070,0xFF525128,0xFFB0A038,0xFF786090,0xFF786860,0xFF786860,0xFF624860,0xFF907242,0xFF655870,0xFF625248,0xFF463148,0xFF655027,0xFF807048,0xFF807060,0xFF585068,0xFF352840,0xFF280820,0xFF453515,0xFFB0B838,0xFF786090,0xFF684058,0xFF787848,0xFFA08058,0xFF787088,0xFF706860,0xFF604050,0xFF463148,0xFF655027,0xFF807048,0xFF807060,0xFF807068,0xFF605068,0xFF343048,0xFF442018,0xFFB0B838,0xFF786090,0xFF684058,0xFF787848,0xFFA08058,0xFF787088,0xFF706860,0xFF362054,0xFF300822,0xFF281810,0xFF201808,0xFF281008,0xFF281810,0xFF201810,0xFF151007,0xFF504000,0xFF604040,0xFF281048,0xFF201810,0xFF151007,0xFF180000,0xFF280800,0xFF301808,0xFF323610,0xFF240012,0xFF281810,0xFF201008,0xFF201000,0xFF200800,0xFF281008,0xFF281808,0xFF525810,0xFF988040,0xFF280078,0xFF283810,0xFF240012,0xFF151007,0xFF180800,0xFF280800,0xFF685008,0xFF383850,0xFF382820,0xFF482820,0xFF403830,0xFF483028,0xFF383028,0xFF382818,0xFF403028,0xFF545830,0xFF452740,0xFF525128,0xFF462137,0xFF483838,0xFF483830,0xFF483830,0xFF545830,0xFF462137,0xFF403028,0xFF483028,0xFF403830,0xFF483028,0xFF383028,0xFF382818,0xFF403028,0xFF545830,0xFF452740,0xFF525128,0xFF462137,0xFF483838,0xFF545830,0xFF462137,0xFF001830,0xFF000000,0xFF100800,0xFF200800,0xFF151007,0xFF200808,0xFF201008,0xFF281008,0xFF281008,0xFF281810,0xFF201008,0xFF180800,0xFF280800,0xFF281008,0xFF323610,0xFF624820,0xFF625248,0xFFC8B048,0xFFA098B0,0xFFB0A880,0xFFB8A090,0xFFB08898,0xFFB8B890,0xFFB8A098,0xFFB08098,0xFFA89890,0xFFA09088,0xFFA89088,0xFFB09890,0xFFA89890,0xFFA89890,0xFF929890,0xFF180070,0xFF283810,0xFF382020,0xFF655027,0xFF625248,0xFF675850,0xFF565448,0xFF704840,0xFF707850,0xFF705850,0xFFA48860,0xFF787088,0xFF684058,0xFF787848,0xFF836054,0xFFA48860,0xFF605088,0xFFA89048,0xFF887088,0xFF747368,0xFF544860,0xFF988840,0xFF584078,0xFF806740,0xFF807068,0xFF747368,0xFF704860,0xFF787850,0xFF604858,0xFF787048,0xFF766257,0xFF544860,0xFF282038,0xFF482020,0xFF545830,0xFF786040,0xFF706860,0xFF836054,0xFF747368,0xFF544860,0xFF684840,0xFF907242,0xFF655870,0xFF787040,0xFF786860,0xFF786860,0xFF886860,0xFFD0D868,0xFF6840B8,0xFFA89850,0xFF847890,0xFF705161,0xFF675850,0xFF787850,0xFF766257,0xFF786860,0xFF604858,0xFF887048,0xFF655870,0xFF707848,0xFF766257,0xFF836054,0xFF747368,0xFF442058,0xFF383020,0xFF655027,0xFF707850,0xFF836054,0xFF605068,0xFF786840,0xFF786860,0xFF684058,0xFF787850,0xFF544858,0xFF806238,0xFF544860,0xFF684840,0xFF847850,0xFF907868,0xFFC0B870,0xFF6848A0,0xFFB4B044,0xFF846098,0xFF685868,0xFF585850,0xFF806740,0xFF544860,0xFF786038,0xFF684858,0xFF787850,0xFF766257,0xFF624860,0xFF806740,0xFF887068,0xFF685068,0xFF585850,0xFF462137,0xFF707028,0xFF836054,0xFF787870,0xFF766257,0xFF684058,0xFF887848,0xFF655870,0xFF707048,0xFF766257,0xFF786860,0xFF684858,0xFF705850,0xFF847850,0xFF807060,0xFFC8B068,0xFF6050A8,0xFFB4B044,0xFF786090,0xFF786860,0xFF786860,0xFF624860,0xFF907242,0xFF655870,0xFF565448,0xFF786840,0xFF806860,0xFF747368,0xFF836054,0xFF684858,0xFF909850,0xFF402070,0xFF483028,0xFF727830,0xFF786860,0xFF604058,0xFF787048,0xFF704858,0xFF787850,0xFF806860,0xFF807068,0xFF585068,0xFF786840,0xFF684858,0xFF787850,0xFF886860,0xFF807868,0xFFA48860,0xFF403890,0xFFA89020,0xFF787088,0xFF684058,0xFF787848,0xFF836054,0xFF807870,0xFF747368,0xFF704050,0xFF483850,0xFF655027,0xFF807048,0xFF807060,0xFF807068,0xFF605068,0xFF707048,0xFF684058,0xFFA89048,0xFFA89890,0xFFB09890,0xFFA89890,0xFFA09890,0xFFA89088,0xFFB09088,0xFFB8B890,0xFFB8A098,0xFFB08098,0xFFB8B890,0xFFB0A898,0xFFA08090,0xFFA08880,0xFFE8D088,0xFF2818D0,0xFF525810,0xFF240038,0xFF323610,0xFF240012,0xFF151007,0xFF180000,0xFF200000,0xFF280800,0xFF303008,0xFF382018,0xFF240012,0xFF201008,0xFF281000,0xFF443408,0xFF280820,0xFF323610,0xFF382828,0xFF382820,0xFF382820,0xFF382820,0xFF402820,0xFF483028,0xFF483830,0xFF403830,0xFF483028,0xFF483830,0xFF383028,0xFF382820,0xFF382818,0xFF382820,0xFF403028,0xFF383028,0xFF382828,0xFF382820,0xFF382820,0xFF382820,0xFF402820,0xFF483028,0xFF483830,0xFF403830,0xFF483028,0xFF483830,0xFF383028,0xFF382820,0xFF382818,0xFF382820,0xFF403028,0xFFB09028,0xFFA89890,0xFFA09088,0xFFA89088,0xFFB09890,0xFFA89890,0xFFA89890,0xFF847890,0xFF747368,0xFFA08058,0xFF847890,0xFF988860,0xFFA08070,0xFF906878,0xFFA09870,0xFF948478,0xFF948478,0xFF886070,0xFF807068,0xFF887068,0xFF909870,0xFF886070,0xFF907870,0xFF655870,0xFF707048,0xFFC8A058,0xFFC8B8B0,0xFFB4B0A8,0xFFB8A090,0xFFB08898,0xFFB8B890,0xFFB8A098,0xFF846098,0xFF747368,0xFF704860,0xFF787850,0xFF604858,0xFF787048,0xFF766257,0xFF502860,0xFF645830,0xFF887048,0xFF685868,0xFF625248,0xFF352840,0xFF786820,0xFF442058,0xFF624820,0xFF625248,0xFF585850,0xFF502840,0xFF545830,0xFF452740,0xFF525128,0xFF584438,0xFF280840,0xFF605810,0xFFA89048,0xFF887088,0xFF747368,0xFF544860,0xFF988840,0xFF584078,0xFF806740,0xFF605068,0xFF887048,0xFF655870,0xFF707848,0xFF766257,0xFF836054,0xFF747368,0xFF442058,0xFF545830,0xFF908840,0xFF664174,0xFF503048,0xFF483830,0xFF545830,0xFF584438,0xFF584840,0xFF584840,0xFF704840,0xFF483850,0xFF545830,0xFF584840,0xFF684840,0xFF565448,0xFF240038,0xFF525810,0xFFA88840,0xFF847890,0xFF705161,0xFF675850,0xFF787850,0xFF766257,0xFF786860,0xFF684858,0xFF787850,0xFF766257,0xFF624860,0xFF806740,0xFF887068,0xFF685068,0xFF503850,0xFF545830,0xFF988040,0xFF664174,0xFF463148,0xFF383830,0xFF624820,0xFF352840,0xFF544018,0xFF452740,0xFF545830,0xFF604038,0xFF452740,0xFF624820,0xFF625248,0xFF463148,0xFF241830,0xFF505008,0xFFB4A040,0xFF846098,0xFF685068,0xFF585850,0xFF806740,0xFF544860,0xFF786038,0xFF544858,0xFF786840,0xFF806860,0xFF747368,0xFF836054,0xFF624860,0xFF909850,0xFF402070,0xFF525128,0xFF908040,0xFF664174,0xFF604840,0xFF565448,0xFF452740,0xFF705024,0xFF483850,0xFF483830,0xFF545830,0xFF684840,0xFF505850,0xFF604038,0xFF452740,0xFF727830,0xFF100058,0xFF504800,0xFFB0A038,0xFF786090,0xFF786860,0xFF786860,0xFF624860,0xFF907242,0xFF655870,0xFF625248,0xFF463148,0xFF655027,0xFF807048,0xFF807060,0xFF807068,0xFF605068,0xFF463148,0xFF483028,0xFF909838,0xFF584078,0xFF462137,0xFF545830,0xFF806238,0xFF605068,0xFF584840,0xFF462137,0xFF383830,0xFF402820,0xFF655027,0xFF625248,0xFF625248,0xFF463148,0xFF001028,0xFF484000,0xFFB0A038,0xFF786090,0xFF684058,0xFF787848,0xFFA08058,0xFF787088,0xFF706860,0xFF362054,0xFF300822,0xFF281810,0xFF201808,0xFF281008,0xFF281810,0xFF201810,0xFF151007,0xFF484000,0xFF452740,0xFF241830,0xFF201818,0xFF201010,0xFF281810,0xFF181818,0xFF101010,0xFF151007,0xFF000000,0xFF100000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF504000,0xFF786040,0xFF280058,0xFF181810,0xFF100800,0xFF100000,0xFF180000,0xFF280000,0xFF443408,0xFF383830,0xFF382820,0xFF482820,0xFF403830,0xFF483028,0xFF383028,0xFF382818,0xFF403028,0xFF545830,0xFF452740,0xFF525128,0xFF462137,0xFF483838,0xFF483830,0xFF483830,0xFF483830,0xFF383028,0xFF382820,0xFF482820,0xFF403830,0xFF483028,0xFF383028,0xFF382818,0xFF403028,0xFF545830,0xFF452740,0xFF525128,0xFF462137,0xFF483838,0xFF545830,0xFF462137,0xFF545830,0xFFC0A840,0xFFB4B0A8,0xFFB8A8A0,0xFFB8A8A0,0xFFB0A098,0xFFB8A090,0xFFB8A098,0xFFB08098,0xFFA89890,0xFFA09088,0xFFA89088,0xFFB09890,0xFFA89890,0xFF929890,0xFF664174,0xFF383850,0xFF300822,0xFF323610,0xFF240012,0xFF281810,0xFF281810,0xFF281810,0xFF201810,0xFF201008,0xFF201008,0xFF151007,0xFF280808,0xFF281008,0xFF323610,0xFF240012,0xFF787810,0xFF706860,0xFFB4A058,0xFF8868A0,0xFF747368,0xFF544860,0xFF988840,0xFF584078,0xFF806740,0xFF807068,0xFF747368,0xFF704860,0xFF787850,0xFF604858,0xFF787048,0xFF766257,0xFF442860,0xFF283028,0xFF382018,0xFF624820,0xFF807048,0xFF807068,0xFF807068,0xFF685060,0xFF463148,0xFF705024,0xFF707850,0xFF766257,0xFFA08058,0xFF787088,0xFF684058,0xFF787848,0xFFA88058,0xFF787088,0xFFB4A058,0xFF846098,0xFF705161,0xFF675850,0xFF787850,0xFF766257,0xFF786860,0xFF604858,0xFF887048,0xFF655870,0xFF707848,0xFF766257,0xFF836054,0xFF747368,0xFF362054,0xFF240012,0xFF453515,0xFF909028,0xFF664174,0xFF847850,0xFF706860,0xFF836054,0xFF747368,0xFF544860,0xFF684840,0xFF907242,0xFF655870,0xFF787040,0xFF786860,0xFF786860,0xFFB0A860,0xFF786090,0xFFA88058,0xFF847890,0xFF685868,0xFF585850,0xFF806740,0xFF624860,0xFF787048,0xFF766257,0xFF766257,0xFF766257,0xFF624860,0xFF806740,0xFF887068,0xFF685068,0xFF585850,0xFF180838,0xFF453515,0xFF645830,0xFF887848,0xFF807068,0xFF605068,0xFF786840,0xFF786860,0xFF684058,0xFF787850,0xFF544858,0xFF786038,0xFF544860,0xFF684840,0xFF847850,0xFFB8B868,0xFF684098,0xFFA09850,0xFF887088,0xFF787870,0xFF786860,0xFF624860,0xFF907242,0xFF655870,0xFF675850,0xFF787850,0xFF806860,0xFF747368,0xFF836054,0xFF624860,0xFF909850,0xFF402070,0xFF101028,0xFF482808,0xFF727830,0xFF836054,0xFF747368,0xFF766257,0xFF684058,0xFF887848,0xFF655870,0xFF707048,0xFF766257,0xFF786860,0xFF684858,0xFF705850,0xFF847850,0xFFA89060,0xFF505890,0xFF908038,0xFF786070,0xFF684058,0xFF787848,0xFFA08058,0xFF787088,0xFF706860,0xFF704050,0xFF585850,0xFF604840,0xFF807048,0xFF807060,0xFF807068,0xFF605068,0xFF707048,0xFF100058,0xFF504800,0xFF786030,0xFF786860,0xFF604058,0xFF787048,0xFF704858,0xFF787850,0xFF806860,0xFF807068,0xFF585068,0xFF988840,0xFF584078,0xFF786840,0xFF886860,0xFFD0B868,0xFF4038B0,0xFF403028,0xFF201028,0xFF201008,0xFF180808,0xFF200800,0xFF280800,0xFF281008,0xFF281808,0xFF281810,0xFF201810,0xFF201810,0xFF201010,0xFF201810,0xFF201810,0xFF181818,0xFF001010,0xFF706000,0xFFA88050,0xFFA89890,0xFFB09890,0xFFA89890,0xFFA09890,0xFFA89088,0xFFB09088,0xFFB8B890,0xFFB8A098,0xFFB08098,0xFFB8B890,0xFFB0A898,0xFFA08090,0xFFC8A880,0xFF3838B0,0xFF382828,0xFF382820,0xFF382820,0xFF382820,0xFF402820,0xFF483028,0xFF483830,0xFF403830,0xFF483028,0xFF483830,0xFF383028,0xFF382820,0xFF382818,0xFF382820,0xFF403028,0xFF383028,0xFF382828,0xFF382820,0xFF382820,0xFF382820,0xFF402820,0xFF483028,0xFF483830,0xFF403830,0xFF483028,0xFF483830,0xFF383028,0xFF382820,0xFF382818,0xFF382820,0xFF403028]]);
_root.imDict["metalTile"] = _root.toBmap([32,32,[0xFF302808,0xFF303020,0xFF283028,0xFF382818,0xFF707828,0xFF707060,0xFF363064,0xFF181828,0xFF181818,0xFF181818,0xFF283818,0xFF484818,0xFF584838,0xFF607850,0xFF484058,0xFF202838,0xFF302018,0xFF385828,0xFF382030,0xFF405820,0xFF626434,0xFF706050,0xFF484860,0xFF180030,0xFF203818,0xFF180018,0xFF181818,0xFF203818,0xFF302018,0xFF383020,0xFF283020,0xFF180818,0xFF283818,0xFF404818,0xFF404038,0xFF302030,0xFF585018,0xFF707644,0xFF585060,0xFF283840,0xFF200818,0xFF383818,0xFF505020,0xFF687048,0xFF706860,0xFF687068,0xFF505060,0xFF203040,0xFF282018,0xFF484818,0xFF332840,0xFF383830,0xFF585820,0xFF707644,0xFF505058,0xFF181240,0xFF181818,0xFF181818,0xFF283818,0xFF302818,0xFF405020,0xFF404030,0xFF302030,0xFF181020,0xFF201818,0xFF283818,0xFF444720,0xFF444542,0xFF302030,0xFF585020,0xFF707644,0xFF687058,0xFF604850,0xFF687848,0xFF786860,0xFF789870,0xFF788078,0xFF788078,0xFF656173,0xFF404860,0xFF180028,0xFF303818,0xFF485028,0xFF382838,0xFF303828,0xFF585020,0xFF687040,0xFF484858,0xFF382838,0xFF303020,0xFF405020,0xFF484030,0xFF504030,0xFF505532,0xFF403038,0xFF283828,0xFF402018,0xFF201828,0xFF283818,0xFF485020,0xFF383040,0xFF383828,0xFF607820,0xFF726444,0xFF787868,0xFF809870,0xFF848276,0xFF848882,0xFF848882,0xFF848882,0xFF848882,0xFF585870,0xFF222642,0xFF180818,0xFF303818,0xFF485828,0xFF302838,0xFF302818,0xFF584818,0xFF687848,0xFF686858,0xFF606858,0xFF504050,0xFF505040,0xFF607040,0xFF544245,0xFF405040,0xFF382030,0xFF585828,0xFF485848,0xFF282038,0xFF302018,0xFF485828,0xFF332840,0xFF485828,0xFF706434,0xFF808858,0xFF848276,0xFF908880,0xFF869086,0xFF869086,0xFF908880,0xFF848882,0xFF726275,0xFF403060,0xFF181828,0xFF181818,0xFF383818,0xFF405830,0xFF302038,0xFF383018,0xFF485820,0xFF626434,0xFF686050,0xFF606858,0xFF646444,0xFF686850,0xFF606850,0xFF544245,0xFF505040,0xFF607038,0xFF706050,0xFF585068,0xFF203048,0xFF302018,0xFF485028,0xFF405040,0xFF504038,0xFF687040,0xFF808858,0xFF848276,0xFF848882,0xFF848276,0xFF848882,0xFF869086,0xFF889090,0xFF584880,0xFF303848,0xFF203018,0xFF180018,0xFF383818,0xFF405828,0xFF302030,0xFF283018,0xFF404818,0xFF504028,0xFF607040,0xFF706050,0xFF707058,0xFF787060,0xFF687068,0xFF686858,0xFF404858,0xFF584030,0xFF607850,0xFF302050,0xFF181020,0xFF383818,0xFF505532,0xFF405048,0xFF484038,0xFF706434,0xFF787060,0xFF747870,0xFF809165,0xFF908880,0xFF869086,0xFF746881,0xFF585870,0xFF485848,0xFF504838,0xFF302838,0xFF203020,0xFF382018,0xFF405830,0xFF282030,0xFF282818,0xFF404018,0xFF504028,0xFF585040,0xFF707644,0xFF787060,0xFF607068,0xFF544245,0xFF181240,0xFF283818,0xFF484818,0xFF584838,0xFF383848,0xFF181828,0xFF405818,0xFF484038,0xFF332840,0xFF485028,0xFF706434,0xFF809165,0xFF848276,0xFF746881,0xFF445062,0xFF382838,0xFF203828,0xFF282018,0xFF586818,0xFF726444,0xFF363064,0xFF203828,0xFF382018,0xFF405830,0xFF202030,0xFF202018,0xFF404018,0xFF504030,0xFF607040,0xFF584050,0xFF485848,0xFF402438,0xFF181828,0xFF203818,0xFF584818,0xFF789848,0xFF584078,0xFF283850,0xFF202818,0xFF302018,0xFF203028,0xFF282018,0xFF606820,0xFF706050,0xFF687058,0xFF404858,0xFF302030,0xFF383020,0xFF181830,0xFF181818,0xFF485818,0xFF706434,0xFF687060,0xFF302858,0xFF201020,0xFF303818,0xFF183028,0xFF180018,0xFF303818,0xFF383020,0xFF383828,0xFF303828,0xFF283020,0xFF282818,0xFF202818,0xFF484018,0xFF626434,0xFF808858,0xFF788880,0xFF656173,0xFF404050,0xFF202030,0xFF180018,0xFF203818,0xFF504018,0xFF485040,0xFF382830,0xFF383828,0xFF405828,0xFF382838,0xFF181830,0xFF283818,0xFF504018,0xFF607038,0xFF706050,0xFF505060,0xFF282838,0xFF180818,0xFF181818,0xFF181818,0xFF181818,0xFF203818,0xFF202018,0xFF202018,0xFF382018,0xFF405020,0xFF484030,0xFF586840,0xFF686050,0xFF786858,0xFF747870,0xFF707868,0xFF707068,0xFF445062,0xFF202038,0xFF382818,0xFF383828,0xFF283020,0xFF302018,0xFF405020,0xFF302038,0xFF181830,0xFF201818,0xFF485818,0xFF626434,0xFF544245,0xFF505848,0xFF505040,0xFF485040,0xFF282838,0xFF180018,0xFF181818,0xFF181818,0xFF181818,0xFF181818,0xFF303818,0xFF444720,0xFF202038,0xFF444720,0xFF504838,0xFF607850,0xFF686058,0xFF707060,0xFF809165,0xFF848276,0xFF726275,0xFF607868,0xFF404050,0xFF282030,0xFF302818,0xFF405020,0xFF302038,0xFF181028,0xFF203818,0xFF484018,0xFF626434,0xFF706858,0xFF787868,0xFF787868,0xFF707868,0xFF607060,0xFF544245,0xFF485848,0xFF282838,0xFF180818,0xFF181818,0xFF303818,0xFF383020,0xFF203830,0xFF180018,0xFF383818,0xFF485830,0xFF586840,0xFF686050,0xFF706860,0xFF809870,0xFF848276,0xFF869086,0xFF656173,0xFF302858,0xFF383020,0xFF485828,0xFF303040,0xFF181028,0xFF303818,0xFF587020,0xFF686050,0xFF707060,0xFF809165,0xFF848882,0xFF848882,0xFF726275,0xFF607868,0xFF606050,0xFF404050,0xFF180030,0xFF181818,0xFF383818,0xFF405020,0xFF202838,0xFF180018,0xFF181818,0xFF383818,0xFF405828,0xFF504038,0xFF607848,0xFF706860,0xFF809870,0xFF848276,0xFF656173,0xFF484850,0xFF382838,0xFF485830,0xFF383048,0xFF181830,0xFF303818,0xFF687020,0xFF808858,0xFF848276,0xFF726275,0xFF809870,0xFF848882,0xFF788880,0xFF726275,0xFF607068,0xFF484050,0xFF282838,0xFF200818,0xFF383818,0xFF485828,0xFF282838,0xFF180820,0xFF283818,0xFF444720,0xFF383040,0xFF405028,0xFF504030,0xFF607048,0xFF706858,0xFF789868,0xFF656173,0xFF382858,0xFF405828,0xFF484030,0xFF383040,0xFF181830,0xFF283818,0xFF646818,0xFF808858,0xFF788078,0xFF726275,0xFF787868,0xFF789870,0xFF726275,0xFF789868,0xFF726275,0xFF505058,0xFF303040,0xFF282818,0xFF404818,0xFF484030,0xFF302838,0xFF181020,0xFF283818,0xFF586818,0xFF606058,0xFF302858,0xFF383020,0xFF505828,0xFF687048,0xFF706860,0xFF687068,0xFF484860,0xFF382838,0xFF485830,0xFF303048,0xFF181830,0xFF283818,0xFF584818,0xFF809848,0xFF726275,0xFF607870,0xFF584050,0xFF687848,0xFF786858,0xFF747870,0xFF707868,0xFF607068,0xFF404050,0xFF302030,0xFF404818,0xFF484030,0xFF222642,0xFF180018,0xFF303818,0xFF505020,0xFF707644,0xFF585068,0xFF303850,0xFF303020,0xFF484818,0xFF626434,0xFF706058,0xFF585068,0xFF283848,0xFF302818,0xFF303828,0xFF181028,0xFF303818,0xFF505020,0xFF707644,0xFF707868,0xFF445062,0xFF202838,0xFF282818,0xFF444720,0xFF584030,0xFF707644,0xFF707868,0xFF585068,0xFF303848,0xFF283020,0xFF444720,0xFF222642,0xFF180820,0xFF303818,0xFF587020,0xFF606050,0xFF444542,0xFF282838,0xFF444720,0xFF383048,0xFF303828,0xFF485020,0xFF626434,0xFF504858,0xFF181240,0xFF181818,0xFF181818,0xFF383818,0xFF687828,0xFF809165,0xFF848276,0xFF686080,0xFF363064,0xFF181028,0xFF405818,0xFF402438,0xFF303830,0xFF585020,0xFF687848,0xFF504858,0xFF203040,0xFF180018,0xFF181818,0xFF181818,0xFF181818,0xFF485818,0xFF687040,0xFF584858,0xFF283848,0xFF180818,0xFF303818,0xFF405830,0xFF302838,0xFF283020,0xFF404818,0xFF484030,0xFF382838,0xFF303828,0xFF485020,0xFF726444,0xFF809165,0xFF848882,0xFF869086,0xFF746881,0xFF485870,0xFF222642,0xFF302018,0xFF485028,0xFF383048,0xFF383828,0xFF405020,0xFF404030,0xFF282030,0xFF180818,0xFF181818,0xFF283818,0xFF404818,0xFF504038,0xFF505048,0xFF585040,0xFF303848,0xFF181020,0xFF181818,0xFF303818,0xFF485028,0xFF332840,0xFF203020,0xFF302018,0xFF403020,0xFF485828,0xFF726444,0xFF809165,0xFF848882,0xFF848882,0xFF848882,0xFF848882,0xFF686080,0xFF363064,0xFF181830,0xFF383818,0xFF485830,0xFF332840,0xFF203020,0xFF302018,0xFF303020,0xFF303020,0xFF485020,0xFF626434,0xFF706860,0xFF585870,0xFF505850,0xFF586840,0xFF484850,0xFF180038,0xFF303818,0xFF201028,0xFF383818,0xFF485830,0xFF332840,0xFF283020,0xFF404818,0xFF626434,0xFF788050,0xFF848276,0xFF848882,0xFF848882,0xFF848882,0xFF848882,0xFF746881,0xFF585870,0xFF283848,0xFF180818,0xFF383818,0xFF505532,0xFF383048,0xFF303028,0xFF282818,0xFF382818,0xFF485828,0xFF687040,0xFF706860,0xFF687870,0xFF707068,0xFF707060,0xFF505058,0xFF283040,0xFF586818,0xFF382050,0xFF181828,0xFF385818,0xFF484038,0xFF332840,0xFF303020,0xFF485020,0xFF687040,0xFF809165,0xFF848276,0xFF848276,0xFF848882,0xFF788880,0xFF726275,0xFF687068,0xFF504858,0xFF203040,0xFF180018,0xFF405818,0xFF504838,0xFF303040,0xFF201020,0xFF283818,0xFF302818,0xFF383020,0xFF485828,0xFF707644,0xFF707060,0xFF687060,0xFF584858,0xFF405848,0xFF504030,0xFF485040,0xFF203040,0xFF180018,0xFF405818,0xFF484038,0xFF302838,0xFF383020,0xFF607820,0xFF686050,0xFF687060,0xFF788860,0xFF848276,0xFF848276,0xFF656173,0xFF584858,0xFF585848,0xFF405848,0xFF200030,0xFF201818,0xFF485818,0xFF504838,0xFF283040,0xFF180818,0xFF283818,0xFF382818,0xFF585828,0xFF707644,0xFF607060,0xFF606050,0xFF584050,0xFF505848,0xFF303040,0xFF405020,0xFF404030,0xFF202030,0xFF202018,0xFF404018,0xFF484838,0xFF302838,0xFF405020,0xFF584030,0xFF587848,0xFF786050,0xFF809165,0xFF746881,0xFF485870,0xFF332840,0xFF303020,0xFF383020,0xFF303828,0xFF181020,0xFF203818,0xFF484018,0xFF444542,0xFF202030,0xFF202018,0xFF404018,0xFF626434,0xFF686050,0xFF504858,0xFF505040,0xFF485040,0xFF382838,0xFF181828,0xFF303818,0xFF405020,0xFF302838,0xFF181020,0xFF203818,0xFF404018,0xFF382838,0xFF283830,0xFF484818,0xFF607040,0xFF786858,0xFF787868,0xFF505868,0xFF283040,0xFF180818,0xFF181818,0xFF203818,0xFF484018,0xFF484838,0xFF200838,0xFF181818,0xFF383818,0xFF405830,0xFF202038,0xFF302018,0xFF504818,0xFF484838,0xFF444542,0xFF382838,0xFF203828,0xFF180018,0xFF181818,0xFF283818,0xFF382818,0xFF383828,0xFF303830,0xFF201028,0xFF203818,0xFF202018,0xFF180820,0xFF383818,0xFF607828,0xFF686050,0xFF584858,0xFF383840,0xFF303828,0xFF203028,0xFF180018,0xFF283818,0xFF584820,0xFF607850,0xFF404058,0xFF180030,0xFF181818,0xFF383818,0xFF181830,0xFF181818,0xFF303818,0xFF303020,0xFF303028,0xFF203020,0xFF200018,0xFF203818,0xFF202018,0xFF302018,0xFF383020,0xFF485828,0xFF504838,0xFF383040,0xFF181828,0xFF181818,0xFF181818,0xFF303818,0xFF505828,0xFF485848,0xFF302838,0xFF303020,0xFF303028,0xFF181830,0xFF181818,0xFF485818,0xFF584838,0xFF585848,0xFF505850,0xFF303848,0xFF181020,0xFF181818,0xFF181818,0xFF181818,0xFF203818,0xFF202018,0xFF202018,0xFF202018,0xFF282018,0xFF202820,0xFF202018,0xFF282018,0xFF404818,0xFF504030,0xFF587040,0xFF584050,0xFF405850,0xFF302038,0xFF303028,0xFF383020,0xFF405828,0xFF302030,0xFF303020,0xFF303020,0xFF181028,0xFF181818,0xFF203818,0xFF504018,0xFF585040,0xFF585848,0xFF607848,0xFF484050,0xFF202838,0xFF180018,0xFF181818,0xFF203818,0xFF180018,0xFF181818,0xFF203818,0xFF302018,0xFF203020,0xFF180818,0xFF203818,0xFF302018,0xFF485020,0xFF504838,0xFF607848,0xFF686858,0xFF687060,0xFF586860,0xFF404050,0xFF282838,0xFF202018,0xFF302018,0xFF303828,0xFF181828,0xFF181818,0xFF181818,0xFF303818,0xFF485020,0xFF484838,0xFF504838,0xFF607848,0xFF484058,0xFF282838,0xFF202820,0xFF180018,0xFF283818,0xFF200818,0xFF283818,0xFF382018,0xFF283830,0xFF181020,0xFF181818,0xFF283818,0xFF404818,0xFF484030,0xFF585040,0xFF687850,0xFF706860,0xFF707868,0xFF687870,0xFF384860,0xFF282030,0xFF382818,0xFF383828,0xFF181830,0xFF181818,0xFF203818,0xFF382018,0xFF485828,0xFF504838,0xFF505848,0xFF587040,0xFF686050,0xFF504860,0xFF383848,0xFF283828,0xFF180818,0xFF201818,0xFF283818,0xFF404818,0xFF302030,0xFF181828,0xFF181818,0xFF203818,0xFF302018,0xFF405828,0xFF484030,0xFF585040,0xFF607850,0xFF706860,0xFF687068,0xFF505060,0xFF383048,0xFF405028,0xFF382030,0xFF181830,0xFF181818,0xFF283818,0xFF384818,0xFF484030,0xFF505040,0xFF505040,0xFF585040,0xFF607848,0xFF686058,0xFF587060,0xFF382050,0xFF203828,0xFF180018,0xFF283818,0xFF404018,0xFF302038,0xFF181830,0xFF181818,0xFF203818,0xFF382018,0xFF383828,0xFF405028,0xFF484030,0xFF504838,0xFF607048,0xFF606858,0xFF484860,0xFF383040,0xFF405820,0xFF404030,0xFF180038,0xFF181818,0xFF283818,0xFF404818,0xFF504038,0xFF505040,0xFF505840,0xFF505040,0xFF585040,0xFF607848,0xFF606050,0xFF504858,0xFF283848,0xFF181020,0xFF203818,0xFF302018,0xFF385020,0xFF180038,0xFF181818,0xFF303818,0xFF385020,0xFF484030]]);
_root.imDict["normalBrick"] = _root.toBmap([32,32,[0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF575757,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF575757,0xFF4F4F4F,0xFF4F4F4F,0xFF4F4F4F,0xFF5F5F5F,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF585858,0xFF616161,0xFF5C5C5C,0xFF5A5A5A,0xFF575757,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5F5F5F,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5F5F5F,0xFF5C5C5C,0xFF545454,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5C5C5C,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4C4C4C,0xFF5E5E5E,0xFF565656,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF5C5C5C,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF585858,0xFF474747,0xFF5C5C5C,0xFF565656,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF555555,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF5A5A5A,0xFF5F5F5F,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF505050,0xFF454545,0xFF5C5C5C,0xFF5C5C5C,0xFF545454,0xFF525252,0xFF4F4F4F,0xFF4A4A4A,0xFF4D4D4D,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF575757,0xFF525252,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF5A5A5A,0xFF4A4A4A,0xFF505050,0xFF454545,0xFF555555,0xFF545454,0xFF525252,0xFF525252,0xFF4F4F4F,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF5A5A5A,0xFF4A4A4A,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF4A4A4A,0xFF424242,0xFF4A4A4A,0xFF424242,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF4F4F4F,0xFF585858,0xFF5A5A5A,0xFF545454,0xFF4F4F4F,0xFF474747,0xFF454545,0xFF474747,0xFF424242,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF545454,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF555555,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF585858,0xFF5A5A5A,0xFF545454,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF4A4A4A,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF555555,0xFF5A5A5A,0xFF4A4A4A,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF424242,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF525252,0xFF525252,0xFF424242,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF505050,0xFF4D4D4D,0xFF4D4D4D,0xFF555555,0xFF525252,0xFF4D4D4D,0xFF4D4D4D,0xFF424242,0xFF636363,0xFF575757,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF4D4D4D,0xFF4D4D4D,0xFF4D4D4D,0xFF515151,0xFF4E4E4E,0xFF4D4D4D,0xFF505050,0xFF545454,0xFF505050,0xFF4D4D4D,0xFF4D4D4D,0xFF424242,0xFF636363,0xFF575757,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF4D4D4D,0xFF4D4D4D,0xFF4C4C4C,0xFF4A4A4A,0xFF4A4A4A,0xFF4D4D4D,0xFF4D4D4D,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF5D5D5D,0xFF555555,0xFF4D4D4D,0xFF4D4D4D,0xFF555555,0xFF4F4F4F,0xFF4B4B4B,0xFF4A4A4A,0xFF4C4C4C,0xFF4B4B4B,0xFF4A4A4A,0xFF4B4B4B,0xFF4D4D4D,0xFF4C4C4C,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF5D5D5D,0xFF555555,0xFF4D4D4D,0xFF4D4D4D,0xFF555555,0xFF4F4F4F,0xFF4A4A4A,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF585858,0xFF5A5A5A,0xFF575757,0xFF454545,0xFF454545,0xFF474747,0xFF474747,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF454545,0xFF585858,0xFF5A5A5A,0xFF575757,0xFF454545,0xFF454545,0xFF474747,0xFF474747,0xFF454545,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF636363,0xFF5A5A5A,0xFF5A5A5A,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF636363,0xFF5A5A5A,0xFF5A5A5A,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF636363,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF636363,0xFF5A5A5A,0xFF5A5A5A,0xFF5A5A5A,0xFF5F5F5F,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF585858,0xFF616161,0xFF5C5C5C,0xFF5A5A5A,0xFF575757,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5F5F5F,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5F5F5F,0xFF5C5C5C,0xFF545454,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5C5C5C,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4C4C4C,0xFF5E5E5E,0xFF565656,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF5C5C5C,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF585858,0xFF474747,0xFF5C5C5C,0xFF565656,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF555555,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF5A5A5A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF5A5A5A,0xFF5F5F5F,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF505050,0xFF454545,0xFF5C5C5C,0xFF5C5C5C,0xFF545454,0xFF525252,0xFF4F4F4F,0xFF4A4A4A,0xFF4D4D4D,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF525252,0xFF575757,0xFF525252,0xFF525252,0xFF525252,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF5A5A5A,0xFF4A4A4A,0xFF505050,0xFF454545,0xFF555555,0xFF545454,0xFF525252,0xFF525252,0xFF4F4F4F,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF5A5A5A,0xFF4A4A4A,0xFF525252,0xFF5A5A5A,0xFF5A5A5A,0xFF525252,0xFF4A4A4A,0xFF424242,0xFF4A4A4A,0xFF424242,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF4F4F4F,0xFF585858,0xFF5A5A5A,0xFF545454,0xFF4F4F4F,0xFF474747,0xFF454545,0xFF474747,0xFF424242,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF424242,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF545454,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF595959,0xFF595959,0xFF535353,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF555555,0xFF595959,0xFF595959,0xFF535353,0xFF636363,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF525252,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF535353,0xFF535353,0xFF4B4B4B,0xFF636363,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF575757,0xFF595959,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF535353,0xFF535353,0xFF4B4B4B,0xFF636363,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF595959,0xFF525252,0xFF525252,0xFF525252,0xFF595959,0xFF525252,0xFF525252,0xFF595959,0xFF4A4A4A,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF535353,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF555555,0xFF565656,0xFF525252,0xFF555555,0xFF595959,0xFF4A4A4A,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF535353,0xFF525252,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF525252,0xFF525252,0xFF535353,0xFF434343,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF595959,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF525252,0xFF555555,0xFF575757,0xFF525252,0xFF525252,0xFF535353,0xFF434343,0xFF636363,0xFF525252,0xFF525252,0xFF525252,0xFF595959,0xFF525252,0xFF525252,0xFF4F4F4F,0xFF4B4B4B,0xFF4B4B4B,0xFF535353,0xFF525252,0xFF4B4B4B,0xFF4B4B4B,0xFF424242,0xFF636363,0xFF595959,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF4B4B4B,0xFF4B4B4B,0xFF4B4B4B,0xFF515151,0xFF4D4D4D,0xFF4B4B4B,0xFF4E4E4E,0xFF535353,0xFF4F4F4F,0xFF4B4B4B,0xFF4B4B4B,0xFF424242,0xFF636363,0xFF595959,0xFF525252,0xFF525252,0xFF5A5A5A,0xFF4B4B4B,0xFF4B4B4B,0xFF4B4B4B,0xFF4A4A4A,0xFF4A4A4A,0xFF4B4B4B,0xFF4B4B4B,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF5B5B5B,0xFF535353,0xFF4B4B4B,0xFF4B4B4B,0xFF535353,0xFF515151,0xFF4B4B4B,0xFF4A4A4A,0xFF4B4B4B,0xFF4A4A4A,0xFF4A4A4A,0xFF4A4A4A,0xFF4B4B4B,0xFF4B4B4B,0xFF4A4A4A,0xFF4A4A4A,0xFF424242,0xFF5B5B5B,0xFF535353,0xFF4B4B4B,0xFF4B4B4B,0xFF535353,0xFF515151,0xFF4A4A4A]]);
_root.imDict["switchBlock"] = _root.toBmap([32,32,[0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFFDE8C21,0xFFE79C39,0xFFEFA539,0xFFE79421,0xFFDE8418,0xFFE78C29,0xFFF7A539,0xFFDE8421,0xFFCE7B18,0xFF944208,0xFFA55A10,0xFFF7A531,0xFFDE8421,0xFFDE8418,0xFFE79C31,0xFFEFA539,0xFFF7AD42,0xFFDE8C21,0xFFDE9429,0xFFDE8C21,0xFF9C5208,0xFFAD5A10,0xFFEF9C29,0xFFEF9C29,0xFFF7A539,0xFFEF9C31,0xFFDE8418,0xFFD67B10,0xFFD68418,0xFFEF9C31,0xFFE78C29,0xFF000000,0xFFDE8C21,0xFFEFA539,0xFFF7AD42,0xFFD68418,0xFFE78C29,0xFFD68421,0xFFE78C21,0xFFDE8C29,0xFFCE7318,0xFFD68421,0xFF944A10,0xFFAD5A18,0xFFE79421,0xFFE78C21,0xFFD68421,0xFFDE8C21,0xFFF7AD42,0xFFC67310,0xFFCE7318,0xFFBD6B08,0xFFA55A08,0xFFE79421,0xFFDE8421,0xFFEF9C31,0xFFDE8C18,0xFFE79421,0xFFE78C21,0xFFC67308,0xFFD67B18,0xFFEF9C29,0xFFE79429,0xFF000000,0xFFDE8C21,0xFFE79429,0xFFCE7B18,0xFFBD6B08,0xFFD68418,0xFFC67318,0xFFD68421,0xFFEF9429,0xFFEF9429,0xFFEF9429,0xFFE79429,0xFF844208,0xFFAD5A18,0xFFC67321,0xFFE78C21,0xFFDE8C21,0xFFC67310,0xFFCE7B10,0xFFC67318,0xFF944A08,0xFFB56318,0xFFDE8C21,0xFFD68418,0xFFCE7B10,0xFFE79C31,0xFFE79429,0xFFE78C21,0xFFE79429,0xFFE79421,0xFFEF9C31,0xFFE79429,0xFF000000,0xFFD68418,0xFFD68421,0xFFC67310,0xFFCE7B10,0xFFD68421,0xFFB56310,0xFFBD6B18,0xFFEF9C31,0xFFEF9429,0xFFEF9429,0xFFEF9C29,0xFFBD6B18,0xFF944210,0xFF844208,0xFFA55210,0xFFE79429,0xFFE78C21,0xFFE79429,0xFFA55A08,0xFFA55A08,0xFFE79C31,0xFFE78C29,0xFFBD6B08,0xFFBD6B08,0xFFCE7310,0xFFEF9C31,0xFFF7AD42,0xFFF7AD42,0xFFDE8C21,0xFFEF9C31,0xFFEF9429,0xFF000000,0xFFD67B18,0xFFD68418,0xFFE78C29,0xFFC66B08,0xFFD67B10,0xFFDE8C21,0xFFA55208,0xFFC67308,0xFFEF9C39,0xFFE79421,0xFFE79429,0xFFE78C21,0xFFEF9429,0xFFBD7321,0xFFB56318,0xFFE79429,0xFFEF9429,0xFFCE7B21,0xFFA55208,0xFFD68418,0xFFCE7B10,0xFFCE7310,0xFFDE8C21,0xFFD68418,0xFFD67B10,0xFFEF9C31,0xFFEF9C31,0xFFD68421,0xFFB56308,0xFFDE8421,0xFFE79429,0xFF000000,0xFFDE8421,0xFFE78C21,0xFFD68421,0xFFB56300,0xFFC66B00,0xFFCE7308,0xFFA55200,0xFFA55208,0xFFAD5A08,0xFFE79431,0xFFE78C21,0xFFDE8C21,0xFFDE8C21,0xFFE78C21,0xFFDE8421,0xFFE78C29,0xFFD68421,0xFFD68421,0xFFA55A10,0xFFAD5A10,0xFFB55A00,0xFFD68421,0xFFE78C29,0xFFD68421,0xFFE78C21,0xFFE78C29,0xFFCE7B18,0xFFCE7310,0xFFC67310,0xFFEF9C31,0xFFEF9429,0xFF000000,0xFFE79429,0xFFE78C29,0xFFEF9429,0xFFE79429,0xFF8C3908,0xFF9C4A00,0xFFAD5A08,0xFFAD5A00,0xFF9C4A00,0xFFB55A08,0xFFE79431,0xFFD68418,0xFFD67B18,0xFFD68421,0xFFDE8421,0xFFE78C21,0xFFE79429,0xFFEF9C31,0xFFD68C29,0xFFBD6308,0xFF8C4208,0xFF843908,0xFFA55221,0xFFB56310,0xFFDE8C21,0xFFE79429,0xFFDE8421,0xFFDE8418,0xFFDE8C21,0xFFF7A539,0xFFEF9C31,0xFF000000,0xFFEF9429,0xFFEF9C31,0xFFDE8C21,0xFFEF9C29,0xFFE78C29,0xFFBD6310,0xFFBD6B00,0xFFAD5A08,0xFFB55A08,0xFFBD6B10,0xFF9C4A10,0xFFA55208,0xFFEF9C31,0xFFDE8C21,0xFFDE8421,0xFFE79429,0xFFE79429,0xFFE79429,0xFFE79429,0xFFE78C18,0xFFAD5A18,0xFFAD6B18,0xFFE79C39,0xFFE79C29,0xFFEF9429,0xFFB56310,0xFFAD5A10,0xFFE79421,0xFFF7A539,0xFFF7A531,0xFFDE8418,0xFF000000,0xFFDE8418,0xFFDE8C21,0xFFD67B18,0xFFC67318,0xFFEF9429,0xFFEF9429,0xFFE79429,0xFFEFA531,0xFFDE8421,0xFFD67B18,0xFF843908,0xFFCE7B10,0xFFE78C21,0xFFF7A539,0xFFD68418,0xFFCE7B18,0xFFE78C21,0xFFE78C29,0xFFD68418,0xFFEF9429,0xFFE79429,0xFFE79429,0xFFEF9C31,0xFFEF9429,0xFFEF9C29,0xFFDE8C21,0xFF944208,0xFFA55208,0xFFE78C21,0xFFE79C31,0xFFD68421,0xFF000000,0xFF944A08,0xFF944A08,0xFF843908,0xFFCE8421,0xFFDE8421,0xFFF7AD42,0xFFF7B542,0xFFEF9C31,0xFFE78C21,0xFF9C5208,0xFFA55210,0xFF9C5210,0xFFD68418,0xFFDE8C31,0xFFCE7B18,0xFFD68421,0xFFD68418,0xFFDE8421,0xFFEF9421,0xFFE78C21,0xFFE78C29,0xFFDE8C21,0xFFEF9429,0xFFF7AD42,0xFFEFA539,0xFFA55210,0xFF9C4A00,0xFFAD5A08,0xFF9C4A08,0xFF944208,0xFF843910,0xFF000000,0xFFD68421,0xFF9C4A00,0xFF944A08,0xFFA55208,0xFFDE8418,0xFFEF9C31,0xFFF7A539,0xFFDE8418,0xFF944208,0xFF9C5208,0xFFE79C29,0xFFBD7329,0xFF944A10,0xFF944A08,0xFFAD5A10,0xFFAD6308,0xFFB56B10,0xFFD68421,0xFFCE7B18,0xFFEF9429,0xFFD68421,0xFFD68421,0xFFDE9421,0xFFDE8C18,0xFFAD5A10,0xFF944208,0xFFDE8418,0xFFCE7B10,0xFFB56308,0xFFA55200,0xFFCE7B21,0xFF000000,0xFFE79C31,0xFFE78C29,0xFFC66B08,0xFFAD5A10,0xFFBD6B21,0xFFDE8410,0xFFCE7B08,0xFFCE7318,0xFF8C4208,0xFFCE7B10,0xFFE79429,0xFFEF9C29,0xFF9C5210,0xFFA55A08,0xFFDE8C31,0xFF9C5A10,0xFF9C5208,0xFFA55A10,0xFF843908,0xFFA55A10,0xFFDE8421,0xFFDE8C21,0xFFD68418,0xFFAD6308,0xFF9C4A08,0xFFBD6308,0xFFE78C21,0xFFE79429,0xFFB56308,0xFFD68418,0xFFEFA539,0xFF000000,0xFFEFA531,0xFFE79C29,0xFFEF9C31,0xFFEF9C29,0xFFAD5A10,0xFFBD7318,0xFFDE8410,0xFF9C4A08,0xFF944A08,0xFFEFA539,0xFFF7AD39,0xFFEFA531,0xFFCE7B18,0xFF9C4A10,0xFFB56318,0xFFCE8429,0xFF732908,0xFF632100,0xFF8C4208,0xFFDE8C31,0xFFEF9429,0xFFEF9429,0xFFE79421,0xFFA55208,0xFF944208,0xFFCE7B18,0xFFD67B18,0xFFCE7B10,0xFFE79C31,0xFFEFA539,0xFFE79429,0xFF000000,0xFFD68421,0xFFDE8418,0xFFEFA539,0xFFE79429,0xFFD68421,0xFFB56310,0xFFD67B10,0xFFA55208,0xFFE79C39,0xFFEF9C29,0xFFF7A539,0xFFEF9C31,0xFFCE7B18,0xFF9C5208,0xFF7B3108,0xFF732908,0xFF7B3108,0xFF843910,0xFFDE9C31,0xFFEF9C31,0xFFEF9C29,0xFFE79429,0xFFCE7B10,0xFFAD5A10,0xFF944208,0xFFAD6318,0xFFD67B18,0xFFD67B10,0xFFE79429,0xFFEF9C31,0xFFDE8C29,0xFF000000,0xFFDE8C29,0xFFDE8C21,0xFFDE8C29,0xFFEFA539,0xFFCE7B18,0xFF9C5210,0xFF9C4A08,0xFF944208,0xFFEF9C31,0xFFF7A539,0xFFF7AD39,0xFFDE9429,0xFFC67318,0xFF843910,0xFF732908,0xFFAD6318,0xFFBD7318,0xFF9C5210,0xFFB56B18,0xFFEFA539,0xFFEF9429,0xFFD67B10,0xFFC67310,0xFFBD7329,0xFFD67B18,0xFFA55A10,0xFFE79429,0xFFEF9C31,0xFFEF9429,0xFFDE8421,0xFFE79431,0xFF000000,0xFFBD6B08,0xFFDE8C29,0xFFE79C31,0xFFDE8C21,0xFFDE9431,0xFF9C4A08,0xFF843108,0xFFB56318,0xFFDE8C18,0xFFF7A531,0xFFDE8C29,0xFFCE7B18,0xFF844208,0xFF733108,0xFFBD7329,0xFFE79C39,0xFFE78C21,0xFFDE8C21,0xFF9C5A10,0xFFD67B08,0xFFE79421,0xFFDE8421,0xFFDE8C21,0xFFC67329,0xFFC67321,0xFFD68418,0xFFEFA531,0xFFE78C29,0xFFDE8C21,0xFFEF9429,0xFFDE8C29,0xFF000000,0xFFC67310,0xFFB56308,0xFFD68421,0xFFDE8C21,0xFFD68421,0xFF944A08,0xFF944A10,0xFFD67B10,0xFFEF9421,0xFFE79421,0xFFD68418,0xFF7B3108,0xFF844208,0xFFD68C31,0xFFEF9C39,0xFFF7AD42,0xFFF7A531,0xFFCE8421,0xFF8C4208,0xFFD68C29,0xFFE78418,0xFFEF9429,0xFFE79C29,0xFFEF9429,0xFFCE8431,0xFFB56318,0xFF9C5A10,0xFFE79429,0xFFDE8418,0xFFDE8C21,0xFFDE8421,0xFF000000,0xFFDE8421,0xFFB56308,0xFFCE7B18,0xFFDE8418,0xFFD67B08,0xFF9C4A08,0xFFC67308,0xFFD67B10,0xFFCE7308,0xFFE79429,0xFFC66B08,0xFF732908,0xFF7B3908,0xFFCE8429,0xFFEF9C39,0xFFE79429,0xFFE78C29,0xFFCE7B21,0xFF733108,0xFFA55A10,0xFFEF9C31,0xFFE78C21,0xFFDE8418,0xFFEF9C29,0xFFEFA531,0xFFE79C39,0xFFA55208,0xFF9C5208,0xFFCE7308,0xFFDE8418,0xFFDE8C21,0xFF000000,0xFFD68418,0xFFD67B10,0xFFE79429,0xFFE78C21,0xFFDE8421,0xFFA55208,0xFFBD6308,0xFFBD6B00,0xFFAD5A08,0xFFCE7308,0xFFC67318,0xFF944A08,0xFF844208,0xFFAD6321,0xFFD68421,0xFFC67310,0xFFCE7B18,0xFFEF9429,0xFFD68C31,0xFF944A10,0xFFD68410,0xFFD67B10,0xFFCE7B08,0xFFE79C31,0xFFE79421,0xFFA55A08,0xFF9C5210,0xFF9C4A08,0xFF9C4A08,0xFFCE7B08,0xFFEF9C31,0xFF000000,0xFFC66B10,0xFFD67B10,0xFFE79431,0xFFEFA539,0xFFD68421,0xFF9C5210,0xFFE79429,0xFFD68418,0xFFBD6308,0xFFBD6308,0xFF9C5A08,0xFFA55A10,0xFFDE8C31,0xFFDE9431,0xFFD67B18,0xFFB56308,0xFFCE7B18,0xFFE78C21,0xFFEF9C29,0xFFDE8C18,0xFF9C4A08,0xFFBD7321,0xFFCE7310,0xFFA55A08,0xFFA55A10,0xFFC67321,0xFFCE7B10,0xFFD68421,0xFFCE7B10,0xFFA55A10,0xFFD68418,0xFF000000,0xFF944A08,0xFFBD6B10,0xFFCE7B18,0xFFB56321,0xFFA55208,0xFFA55210,0xFFF7AD42,0xFFF7B542,0xFFEF9C31,0xFFD68421,0xFFA55A10,0xFFDE8C31,0xFFDE9421,0xFFE79429,0xFFCE7B18,0xFFCE8421,0xFFE79429,0xFFDE8C29,0xFFDE8C21,0xFFDE8418,0xFFE79431,0xFFA55A10,0xFFA55A10,0xFF944208,0xFFBD6B21,0xFFEFA531,0xFFEFA531,0xFFE79429,0xFFE79429,0xFFD68418,0xFF944A10,0xFF000000,0xFFB56318,0xFFB56310,0xFFB56B18,0xFFBD6318,0xFF844208,0xFFCE7B10,0xFFEF9C31,0xFFF7AD39,0xFFDE8C29,0xFFCE7310,0xFFD68C29,0xFFEF9429,0xFFDE8421,0xFFD68421,0xFFE78C21,0xFFF7A539,0xFFF7AD42,0xFFDE8C29,0xFFDE8421,0xFFDE8418,0xFFEF9C31,0xFFAD6318,0xFF944A10,0xFFAD5A08,0xFFEFA531,0xFFEF9C31,0xFFDE9429,0xFFCE7308,0xFFDE8418,0xFFE79C31,0xFFE78C29,0xFF000000,0xFFF7AD42,0xFFF7AD42,0xFFEF9C29,0xFFCE7308,0xFFA55208,0xFFB56308,0xFFD68410,0xFFE78C21,0xFFCE7318,0xFFC67310,0xFFD67B18,0xFFDE8421,0xFFD68418,0xFFD68421,0xFFE78C29,0xFFE79429,0xFFCE7B18,0xFFCE7B18,0xFFD68418,0xFFD68418,0xFFB56B10,0xFFBD6B21,0xFFC67308,0xFFAD5A08,0xFFAD5A08,0xFFDE8C29,0xFFBD6B10,0xFFDE8C21,0xFFCE7B10,0xFFDE8C21,0xFFEF9429,0xFF000000,0xFFE78C21,0xFFEFA539,0xFFE78C21,0xFFC67308,0xFFAD5208,0xFFB55A00,0xFFCE7B10,0xFFE78C18,0xFFCE7B10,0xFFBD6B10,0xFFD68421,0xFFDE8421,0xFFDE8421,0xFFE79429,0xFFDE8C29,0xFFE79421,0xFFD68418,0xFFCE7B21,0xFFA55A10,0xFF944A08,0xFF9C5A10,0xFFB56B18,0xFFE78C10,0xFFDE8C18,0xFF9C4A08,0xFF8C3100,0xFFD68C29,0xFFE78C21,0xFFD67B18,0xFFD67B10,0xFFEF9429,0xFF000000,0xFFD67B18,0xFFDE9429,0xFFE79429,0xFFBD6308,0xFF944208,0xFFA55208,0xFFCE7308,0xFFDE8418,0xFFD68421,0xFFAD6318,0xFFE79421,0xFFEF9429,0xFFEF9C29,0xFFB56318,0xFFC67318,0xFFEF9429,0xFFF79C31,0xFFDE9431,0xFF945210,0xFF8C4208,0xFFE79421,0xFFF7A539,0xFFF7A539,0xFFD68410,0xFFAD5A00,0xFF843108,0xFFDE8C29,0xFFEFA539,0xFFD68418,0xFFCE7B18,0xFFDE8C29,0xFF000000,0xFFD68418,0xFFDE8421,0xFFC66B08,0xFFD68418,0xFFCE7B18,0xFF9C4A08,0xFFCE7B18,0xFFC67310,0xFF7B3108,0xFF944A08,0xFFDE8C29,0xFFEF9C29,0xFFDE8418,0xFF844200,0xFFB56B10,0xFFE79421,0xFFF7A531,0xFFE79431,0xFFA56308,0xFFCE7B18,0xFFE78C21,0xFFF7AD39,0xFFEF9429,0xFFDE8C21,0xFFB56308,0xFF7B2900,0xFFC67318,0xFFEFB54A,0xFFE78C29,0xFFC67308,0xFFE78C29,0xFF000000,0xFFCE7B18,0xFFBD6300,0xFFCE7310,0xFFE79429,0xFFE79C39,0xFFAD6321,0xFF944A08,0xFF944A08,0xFF9C5A08,0xFF7B3108,0xFF8C4208,0xFFEF9429,0xFFE79429,0xFF7B3908,0xFF7B3100,0xFF9C4A08,0xFFB56318,0xFFAD6321,0xFF944A08,0xFFCE7B18,0xFFDE8418,0xFFF7A539,0xFFE79421,0xFFE78C29,0xFFBD6318,0xFFD67B10,0xFFB56310,0xFFE79C39,0xFFD68421,0xFFDE8418,0xFFE79429,0xFF000000,0xFFCE7318,0xFFB56300,0xFFD68421,0xFFCE8429,0xFF945210,0xFFAD6308,0xFFA55A08,0xFFC66B10,0xFFAD5A10,0xFF945210,0xFFA55A08,0xFFEF9429,0xFFEF9C29,0xFFCE7B18,0xFF9C5A08,0xFFB56308,0xFF9C5A10,0xFF8C4208,0xFF843908,0xFF945210,0xFFDE8C21,0xFFCE7B10,0xFFE78C29,0xFFE78C21,0xFFE78C29,0xFFD67B10,0xFFD68421,0xFFDE8C29,0xFFC67308,0xFFDE8421,0xFFDE8C21,0xFF000000,0xFFC66B10,0xFFBD6B08,0xFFCE7B18,0xFF9C5A10,0xFF944208,0xFFCE8421,0xFFD68410,0xFFCE7B10,0xFFD68418,0xFFC67318,0xFF944A08,0xFFEFA531,0xFFF79C31,0xFFDE9421,0xFFEF9C31,0xFFDE8C29,0xFFDE8C21,0xFFE79C39,0xFFAD6321,0xFF8C4208,0xFFB56308,0xFFB56310,0xFFB56310,0xFFE78C21,0xFFBD6B08,0xFFE78C21,0xFFEF9C31,0xFFC67B08,0xFFC66B08,0xFFDE8C21,0xFFDE8C21,0xFF000000,0xFFD68418,0xFFC67318,0xFFC67318,0xFFC67321,0xFFE79429,0xFFEF9C31,0xFFF7B542,0xFFE79429,0xFFCE7B18,0xFFC67318,0xFF843910,0xFFEF9C21,0xFFE79429,0xFFDE8421,0xFFE78C21,0xFFFFBD42,0xFFF7AD39,0xFFF7A531,0xFFEF9C31,0xFF9C5208,0xFF944210,0xFFB56B18,0xFFE79421,0xFFCE7308,0xFFBD6B10,0xFFCE7B18,0xFFE79C31,0xFFDE8C21,0xFFC67308,0xFFDE8421,0xFFE79C31,0xFF000000,0xFFD68421,0xFFDE8418,0xFFD68418,0xFFE78C21,0xFFDE8C21,0xFFEF9C39,0xFFF7AD39,0xFFEF9C31,0xFFDE8C31,0xFFB56B18,0xFF843910,0xFFC67318,0xFFEF9421,0xFFC67310,0xFFE78C29,0xFFEF9C31,0xFFDE8C21,0xFFC67310,0xFFEF9429,0xFFDE8C29,0xFF844208,0xFFC67321,0xFFF7AD42,0xFFDE8418,0xFFDE8418,0xFFDE8C29,0xFFD68418,0xFFE78C21,0xFFDE8418,0xFFDE8421,0xFFE79431]]);
_root.imDict["grid"] = _root.toBmap([32,32,[0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0x2C000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000,0xFF000000]]);

_root.imDict["Lava1"] = _root.toBmap([16,16,[0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFFF5A10,0x00000000,0xFFD61000,0xFFFFC6AD,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0x00000000,0xFFFF5A10,0x00000000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava2"] = _root.toBmap([16,16,[0x00000000,0x00000000,0xFFFF5A10,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFFFFFFF,0xFFFFC6AD,0xFFFF5A10,0xFFD61000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFFFC6AD,0xFFFF8C7B,0xFFFF8C7B,0xFFFF5A10,0xFFD61000,0xFFD61000,0x00000000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava3"] = _root.toBmap([16,16,[0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFF7B0000,0xFFFF5A10,0xFFD61000,0xFF7B0000,0x00000000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFFC6AD,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFFC6AD,0xFFFFFFFF,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava4"] = _root.toBmap([16,16,[0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFFFC6AD,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFFC6AD,0xFF7B0000,0xFFFFC6AD,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFFC6AD,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava5"] = _root.toBmap([16,16,[0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFFFC6AD,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFFC6AD,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFFFFC6AD,0xFFFF5A10,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFFC6AD,0xFF7B0000,0xFFFFC6AD,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFFF5A10,0xFFFFC6AD,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava6"] = _root.toBmap([16,16,[0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFF7B0000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFFF5A10,0xFFFFC6AD,0xFFD61000,0xFFFFC6AD,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFFFC6AD,0xFFD61000,0xFFD61000,0xFFFFC6AD,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFFFC6AD,0xFF7B0000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava7"] = _root.toBmap([16,16,[0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0xFFFF5A10,0x00000000,0xFFFF5A10,0xFFFF5A10,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFD61000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFFC6AD,0xFFFF5A10,0xFFD61000,0xFFD61000,0x00000000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava0"] = _root.toBmap([16,16,[0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFD61000,0xFFD61000,0x00000000,0xFFFF5A10,0x00000000,0x00000000,0x00000000,0xFFD61000,0x00000000,0xFFFF5A10,0x00000000,0xFFFF5A10,0xFFFF5A10,0x00000000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFD61000,0xFFFF5A10,0xFFD61000,0x00000000,0x00000000,0x00000000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF8C7B,0xFFFF8C7B,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFF7B0000,0xFF7B0000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFF7B0000,0xFFFF5A10,0xFFD61000,0xFFFF5A10,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFFD61000,0xFFD61000,0xFFD61000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000,0xFF7B0000]]);
_root.imDict["Lava"] = _root.toBmap([1,1,[0xFF7B0000]]);

_root.inDebugMode = false;

if(_root.LevelSplit !== true)
{
   _root.startBlock = 0;
}
if(_root.currentArea == undefined)
{
   _root.RemoveCourse = function()
   {
      _root.pointer.removeMovieClip(_root.pointer);
      _root.Course.removeMovieClip(_root.Course);
      _root.BGCourse.removeMovieClip(_root.BGCourse);
      _root.MidBackground.removeMovieClip(_root.MidBackground);
      _root.BGCloseCourse.removeMovieClip(_root.BGCloseCourse);
      _root.FarBackground.removeMovieClip(_root.FarBackground);
      _root.Blackout.removeMovieClip(_root.Blackout);
      _root.onEnterFrame = null;
      _root.currentArea = -5;
      _root.Stats.removeMovieClip(_root.Stats);
   };
   _root.currentArea = -5;
}
_root.CustomObjs = function()
{
   var objectIndex = 0;
   var maxDepth = _root.Course.BackGFX.getNextHighestDepth();
   while(objectIndex < maxDepth)
   {
      var signObject = _root.Course.BackGFX["CodedSign" + objectIndex];
      if(signObject !== undefined){
          var signMessage = signObject.signmessage;
          var signX = signObject._x;
          var signY = signObject._y;
          var signDepth = signObject.getDepth();
          signObject.alpha = 0;
          if(signMessage.indexOf("<keepsign>") < 0) {
            signObject.signmessage = "";
            signObject.removeMovieClip();
          }
          if(signMessage.indexOf("<customobject>") !== -1) // confusing code ahead due to reusing variable names
          {
             var objectName = _root.textSearchPlainOrDefault(signMessage,"name","GoldCoin");
             // var dList = _root.textSearchPlainOrDefault(signMessage, "layer", "BackGFX").split(",");
             // var objectLayer = _root;
             // var dListIndex = 0;
             // while(dListIndex < dList.length) {
             //    objectLayer = objectLayer[dList[dListIndex]];
             //    dListIndex = dListIndex + 1;
             // }
             // if(_root.textSearchPlainOrDefault(signMessage, "layer", "BackGFX") == ""){
             //    objectLayer = _root;
             // }
             var objectLayer = _root;
             objectLayer = _root.Course[_root.textSearchPlainOrDefault(signMessage, "layer", "BackGFX")];
             var objectIter = _root.textSearchPlainOrDefault(signMessage,"iter","");
             if(signMessage.indexOf("<attributes:") > -1)
             {
                var attributesList = _root.textSearchPlain(signMessage,"attributes");
                attributesList = attributesList.split(",");
                var collectingArray = [];
                var iAttributesList = 0;
                while(iAttributesList < attributesList.length)
                {
                   var attributePair = attributesList[iAttributesList].split(":");
                   collectingArray.push(attributePair[0]);
                   var attributeValueFirst = _root.toNumber(attributePair[1]);
                   collectingArray.push(attributeValueFirst);
                   iAttributesList = iAttributesList + 1;
                }
                attributesList = collectingArray;
             }
             else
             {
                attributesList = [];
             }
             collectingArray = objectLayer.getNextHighestDepth();
             iAttributesList = "customObject" + collectingArray;
             objectLayer.attachMovie(objectName,iAttributesList,collectingArray);
             attributePair = objectLayer[iAttributesList];
             attributePair._x = signX;
             attributePair._y = signY;
             if(objectIter != "")
             {
                attributePair.gotoAndStop(objectIter);
             }
             var attributeListIndex = 0;
             while(attributeListIndex < attributesList.length)
             {
                attributePair[attributesList[attributeListIndex]] = attributesList[attributeListIndex + 1];
                attributeListIndex = attributeListIndex + 2;
             }
             _root.colorObjectLazy(attributePair, signMessage);
          }
          else if(signMessage.indexOf("<tilecluster>") !== -1)
          {
             _root.placeTileCluster(
                 signX
               , signY
               , _root.textSearchOrDefault(signMessage,"theta",0)
               , _root.removeAllWhitespace(_root.textSearchPlainOrDefault(signMessage,"tiles","")).split(",")
               , _root.removeAllWhitespace(_root.textSearchPlainOrDefault(signMessage,"layers","")).split(",")
               , _root.textSearchOrDefault(signMessage,"rows",0)
               , _root.textSearchOrDefault(signMessage,"cols",0)
               , _root.removeAllWhitespace(_root.textSearchPlainOrDefault(signMessage,"angles","")).split(",")
               , _root.textSearchOrDefault(signMessage,"scale",100)
               , signMessage
              );
          }
          else if(signMessage.indexOf("<flipgate>") !== -1)
          {
             var createdFlippingPL = _root.appendObject( _root.Course.BackGFX
                                                       , "FlippingPL"
                                                       , { _x: signX
                                                         , _y: signY
                                                         , speed: 0
                                                         , scale: _root.textSearchOrDefault(signMessage,"scale",1)});
             var startRotation = _root.textSearchOrDefault(signMessage,"start",90);
             createdFlippingPL._rotation = startRotation;
             if(_root.OrangeBlockPLCount > 0) {
                createdFlippingPL._rotation = startRotation + 90;
             }
             // flipGates: [0: createdFlippingPL, 1: startRotation]
             _root.flipGates.push([createdFlippingPL, startRotation]);
          }
          else if(signMessage.indexOf("<spikes>") !== -1)
          {
             var numBlocks = _root.textSearchOrDefault(signMessage, "blocks", 1);
             var spikeDirection = _root.textSearchPlainOrDefault(signMessage, "dir", "up");
             //possible directions: up, down, left, right
             var dx = 16;
             var dy = 16;
             if(spikeDirection == "right") {
                dy = numBlocks * 32;
             }
             else if(spikeDirection == "down") {
                dx = numBlocks * 32;
             }
             else if(spikeDirection == "left") {
                dy = numBlocks * 32;
             }
             else { // "up"
                dx = numBlocks * 32;
             }
             _root.drawSpike( _root.Course.BackGFX
                            , signX
                            , signY
                            , numBlocks
                            , spikeDirection);
             var paddingValueX = 1;
             var paddingValueY = 1;
             _root.spikeLayerParent.Spikes.beginFill(0x00FF00);
             _root.spikeLayerParent.Spikes.moveTo(signX + paddingValueX      , signY + paddingValueY);
             _root.spikeLayerParent.Spikes.lineTo(signX + paddingValueX      , signY + paddingValueY);
             _root.spikeLayerParent.Spikes.lineTo(signX - paddingValueX + dx , signY + paddingValueY);
             _root.spikeLayerParent.Spikes.lineTo(signX - paddingValueX + dx , signY + dy);
             _root.spikeLayerParent.Spikes.lineTo(signX + paddingValueX      , signY + dy);
             _root.spikeLayerParent.Spikes.lineTo(signX + paddingValueX      , signY + paddingValueY);
             _root.spikeLayerParent.Spikes.endFill();
          }
          else if(signMessage.indexOf("<polygon>") !== -1)
          {
             var instructions = _root.textSearchPlainOrDefault( signMessage
                                                              , "instructions"
                                                              , "1,0,0,1,-1,0,0,-1");
             instructions = _root.removeAllWhitespace(instructions);
             instructions = instructions.split(",");
             var bmString = _root.textSearchPlainOrDefault( signMessage
                                                          , "texture"
                                                          , "green");
             var bitmapToUse = _root.imDict[bmString];
             var defaultBitmap = _root.imDict["green"];
             var layersString = _root.textSearchPlainOrDefault( signMessage
                                                              , "layers"
                                                              , "b");
             var tempArr = layersString.split("");
             var bitmapRot = _root.textSearchOrDefault( signMessage
                                                      , "theta"
                                                      , 0);
             var thickness = _root.textSearchOrDefault( signMessage
                                                      , "thickness"
                                                      , 1);   
             var alphaMul = _root.textSearchOrDefault( signMessage
                                                     , "alpha"
                                                     , 1);
             if(alphaMul > 1) {
                alphaMul = 1;
             }    
             if(alphaMul < 0) {
                alphaMul = 0;
             }
             var i = 0;
             while(i < tempArr.length) {
                var expandedName = _root.abbreviationMap(tempArr[i]);
                var layer = _root.Course.BackGFX;
                var bitmapSelect = defaultBitmap;
                var alphaMulSelect = 1;
                if(expandedName == "x") {
                    layer = _root.Course.Platforms.invisground;
                }
                else {
                    layer = _root.Course[expandedName];
                    if(expandedName == "BackGFX" || expandedName == "FrontGFX") {
                        bitmapSelect = bitmapToUse;
                        alphaMulSelect = alphaMul;
                    }
                }
                _root.drawClosedShape( layer, instructions, signX, signY
                                     , bitmapSelect, bitmapRot, thickness, alphaMulSelect);
                i = i + 1;
             }
          }
          else if(signMessage.indexOf("<rootvariable>") !== -1)
          {
             var dList = _root.textSearchPlainOrDefault(signMessage, "name", "gravity").split(",");
             var currentDepthInList = _root;
             var dListIndex = 0;
             while(dListIndex < dList.length - 1) {
                currentDepthInList = currentDepthInList[dList[dListIndex]];
                dListIndex = dListIndex + 1;
             }
             currentDepthInList[dList[dList.length - 1]] = _root.textSearchOrDefault(signMessage,"value",1);
          }
          else if(signMessage.indexOf("<movingblock>") !== -1)
          {
             // moving block platform is actually 26x26 
             // consists of LDTile at Platforms layer and BackGFX layer.
             // at each frame, will update coordinate of BackGFX tile to be at that of Platforms tile
             var blockScale = _root.textSearchOrDefault(signMessage, "scale", 1);
             var pixelsOff = 6;
             var scaleValue = (32 * blockScale - pixelsOff) / 32 * 100;
             var blockNum = _root.textSearchPlainOrDefault(signMessage, "blocknum", "291");
             var platBlock = _root.appendObject( _root.Course.Platforms
                                               , "LDTile"
                                               , { _x: signX
                                                 , _y: signY
                                                 , _xscale: scaleValue
                                                 , _yscale: scaleValue});
             var gfxBlock  = _root.appendObject( _root.Course.BackGFX
                                               , "LDTile"
                                               , { _x: signX
                                                 , _y: signY
                                                 , _xscale: scaleValue + pixelsOff / 32 * 100
                                                 , _yscale: scaleValue + pixelsOff / 32 * 100});
             platBlock.gotoAndStop(blockNum);                                    
             gfxBlock.gotoAndStop(blockNum);
             var ob = new Object();
             ob.platBlock = platBlock;
             ob.gfxBlock = gfxBlock;
             ob.blockSize = scaleValue / 100 * 32;
             ob.xspeed = 0;
             ob.yspeed = 0;
             ob.maxSpeed = _root.textSearchOrDefault(signMessage, "maxspeed", 8);
             ob.airPushMul = _root.textSearchOrDefault(signMessage, "airpush", 1);
             _root.movingBlocks.push(ob);
          }
          else if(signMessage.indexOf("<firespawn>") !== -1)
          {
             var properties = new Object();
             properties.x = signX;
             properties.y = signY;
             properties.angle = _root.textSearchOrDefault(signMessage, "angle", 0);
             properties.speed = _root.textSearchOrDefault(signMessage, "speed", 8);
             properties.delay = _root.textSearchOrDefault(signMessage, "delay", 100);
             properties.burstDelay = _root.textSearchOrDefault(signMessage, "burstdelay", 10);
             properties.burstAmount = _root.textSearchOrDefault(signMessage, "burstamount", 1);
             properties.timer = _root.textSearchOrDefault(signMessage, "offset", 0);
             properties._color = _root.textSearchOrDefault(signMessage, "color", 1);
             properties.radX = 32 * _root.textSearchOrDefault(signMessage, "radx", 14);
             properties.radY = 32 * _root.textSearchOrDefault(signMessage, "rady", 10);
             _root.fireSpawns.push(properties);                                       
          }
          else if(signMessage.indexOf("<risinglava>") !== -1) {
          var dx = 100;
          dx = _root.textSearchOrDefault(signMessage, "dx", dx);
          dx = _root.textSearchOrDefault(signMessage, "width", dx);
          var isSolid = _root.textSearchPlainOrDefault(signMessage, "solid", "yes");
            _root.placeRisingLava(signX, signY,
                dx,
                _root.textSearchOrDefault(signMessage, "dy", _root.LevelYsize * 32),
                _root.textSearchOrDefault(signMessage, "speed", 2), 
                _root.textSearchOrDefault(signMessage, "miny", 0), 
                _root.textSearchOrDefault(signMessage, "red", 0), 
                _root.textSearchOrDefault(signMessage, "blue", 128),
                _root.textSearchOrDefault(signMessage, "green", 128), 
                _root.textSearchOrDefault(signMessage, "alpha", 50),
                isSolid == "yes" || isSolid == "true");
          }
          else if(signMessage.indexOf("<experimental>") !== -1)
          {
             var billLauncher = _root.appendObject( _root.Course.BackGFX
                                                  , "BulletBillLauncher"
                                                  , { _x: signX
                                                    , _y: signY});
             var properties = new Object();
             properties.launcher = billLauncher;
             properties.timeValue = 0;                              
             _root.fireSpawns.push(properties);                                       
          }
      }
      objectIndex = objectIndex + 1;
   }
};
_root.textSearch = function(string, tag)
{
   return _root.textSearchOrDefault(string,tag,false);
};
_root.textSearchOrDefault = function(string, tag, defaultValue)
{
   return toNumber(_root.textSearchPlainOrDefault(string,tag,defaultValue));
};
_root.textSearchPlain = function(string, tag)
{
   return _root.textSearchPlainOrDefault(string,tag,false);
};
_root.textSearchPlainOrDefault = function(string, tag, defaultValue)
{
   if(string.indexOf("<" + tag + ":") != -1)
   {
      var stringToReturn = string;
      stringToReturn = stringToReturn.slice(stringToReturn.indexOf("<" + tag + ":"));
      if(stringToReturn.indexOf("<",1) != -1)
      {
         stringToReturn = stringToReturn.slice(0,stringToReturn.indexOf("<",1));
      }
      if(stringToReturn.indexOf(">") != -1)
      {
         stringToReturn = stringToReturn.slice(stringToReturn.indexOf(":") + 1,stringToReturn.indexOf(">"));
         return stringToReturn;
      }
   }
   return defaultValue;
};
_root.toNumber = function(string)
{
   if(isNaN(Number(string)) || string == false)
   {
      return string;
   }
   return Number(string);
};
_root.removeAllInstancesOfChar = function(s, c) {
    var stringArr = s.split(c);
    var ret = "";
    var i = 0;
    while(i < stringArr.length){
        if(stringArr[i].length > 0) {
            ret = ret + stringArr[i];
        }
        i = i + 1;
    }
    return ret;
};
_root.removeAllWhitespace = function(s)
{
   var whitespaces = [" ", "\n", "\r"];
   var ret = s;
   var i = 0;
   while(i < whitespaces.length) {
      ret = _root.removeAllInstancesOfChar( ret, whitespaces[i]);
      i = i + 1;
   }
   return ret;
};
_root.drawClosedShape = function( layer, arr, xStart, yStart, bitmapToUse, rot, thickness, alphaMul) { // arr's elements are STRINGS!!!
    var alphaTrans = new flash.geom.ColorTransform(1, 1, 1, alphaMul, 0, 0, 0, 0);
    var newBitmap = bitmapToUse.clone();
    newBitmap.colorTransform(newBitmap.rectangle, alphaTrans);
    var curveIndicator = "c";
    var arrUpdated = [];
    var i = 0;
    while(i < arr.length) {
        if(arr[i] == curveIndicator) {
            arrUpdated.push(curveIndicator);
        }
        else {
            arrUpdated.push(Number(arr[i]) * 32);
        }
        i = i + 1;
    }
    var matrix = new flash.geom.Matrix();
    matrix.identity();
    matrix.translate(xStart, yStart);
    matrix.rotate(_root.toRadians(rot));
    var outlineVisible = 100;
    if(thickness == 0) {
        outlineVisible = 0;
    }
    layer.lineStyle(thickness, 0x000000, outlineVisible);
    layer.beginBitmapFill(newBitmap, matrix);
    layer.moveTo(xStart, yStart);
    //begin drawing according to instructions
    var currentPointX = xStart;
    var currentPointY = yStart;
    var nextX = 0;
    var nextY = 0;
    var controlX = 0;
    var controlY = 0;
    i = 0;
    while(i < arrUpdated.length) {
        if( arrUpdated[i] == curveIndicator) { //draw a curve
            nextX = arrUpdated[i + 1] + currentPointX;
            nextY = arrUpdated[i + 2] + currentPointY;
            controlX = arrUpdated[i + 3] + currentPointX;
            controlY = arrUpdated[i + 4] + currentPointY;
            layer.curveTo(controlX, controlY, nextX, nextY);
            i = i + 5;
        }
        else { //draw a line
            nextX = arrUpdated[i] + currentPointX;
            nextY = arrUpdated[i + 1] + currentPointY;
            layer.lineTo(nextX, nextY);
            i = i + 2;
        }
        currentPointX = nextX;
        currentPointY = nextY;
    }
    // return to start if not at start yet
    if( currentPointX !== xStart || currentPointY !== yStart) {
        layer.lineTo(xStart, yStart);
    }
    layer.endFill();
};
_root.colorObject = function(ob, a, b, c, d, e, f, g, h){
    (new Color(ob)).setTransform(
            {ra:a
            ,rb:b
            ,ga:c
            ,gb:d
            ,ba:e
            ,bb:f
            ,aa:g
            ,ab:h
            }
    );
};
_root.colorObjectLazy = function(ob, s){
    _root.colorObject(
             ob
           , _root.textSearchOrDefault(s,"redperc",100)
           , _root.textSearchOrDefault(s,"redoffset",0)
           , _root.textSearchOrDefault(s,"greenperc",100)
           , _root.textSearchOrDefault(s,"greenoffset",0)
           , _root.textSearchOrDefault(s,"blueperc",100)
           , _root.textSearchOrDefault(s,"blueoffset",0)
           , _root.textSearchOrDefault(s,"alphaperc",100)
           , _root.textSearchOrDefault(s,"alphaoffset",0)
   );
};
_root.appendObject = function(layer, identifier, dict) {
    var nextDepth = layer.getNextHighestDepth();
    var tag = "anObject" + nextDepth;
    layer.attachMovie( identifier, tag, nextDepth);
    var createdObject = layer[tag];
    // _root.println("appendObject called with dict: " + dict);
    for(var k in dict) {
        createdObject[k] = dict[k];
        // _root.println("setting attr " + k + "to: " + dict[k] );
    }
    return createdObject;
};
_root.abbreviationMap = function(s)
{
   switch(s)
   {
      case "p":
         return "Platforms";
      case "k":
         return "BPlatforms";
      case "i":
         return "Ice";
      case "l":
         return "Lava";
      case "f":
         return "FrontGFX";
      case "b":
         return "BackGFX";
      default:
         return s;
   }
};
_root.toRadians = function(d)
{
   return Math.PI * d / 180;
};
_root.placeTileCluster = function(x, y, theta, tileArray, layerArray, numRows, numCols, angles, scale, messageString)
{
   if(tileArray.length == 0)
   {
      return -1;
   }
   var thetaFirstTile = _root.toRadians(theta + 45);
   var thetaSecondTile = x + 16 * scale * 0.01 * Math.sqrt(2) * Math.cos(thetaFirstTile);
   var thetaThirdTile = y + 16 * scale * 0.01 * Math.sqrt(2) * Math.sin(thetaFirstTile);
   thetaFirstTile = _root.toRadians(theta);
   var thetaFourthTile = 32 * scale * 0.01 * Math.cos(thetaFirstTile);
   var thetaFifthTile = 32 * scale * 0.01 * Math.sin(thetaFirstTile);
   thetaFirstTile = _root.toRadians(theta + 90);
   var thetaSixthTile = 32 * scale * 0.01 * Math.cos(thetaFirstTile);
   var thetaSeventhTile = 32 * scale * 0.01 * Math.sin(thetaFirstTile);
   thetaFirstTile = 0;
   var columnIndexIterator = 0;
   while(thetaFirstTile < numRows)
   {
      while(columnIndexIterator < numCols)
      {
         var indexInMainList = numCols * thetaFirstTile + columnIndexIterator;
         if(indexInMainList >= tileArray.length)
         {
            break;
         }
         var layersListMain = layerArray[indexInMainList].split("");
         var layersIndexIterator = 0;
         while(layersIndexIterator < layersListMain.length)
         {
            var layerNameValue = _root.abbreviationMap(layersListMain[layersIndexIterator]);
            if(layerNameValue !== "x") {
                layerNameValue = _root.Course[layerNameValue];
            }
            else {
                layerNameValue = _root.Course.Platforms.invisground;
            }
            var layerNextDepthMain = layerNameValue.getNextHighestDepth();
            var clusterTag = "static" + layerNextDepthMain;
            layerNameValue.attachMovie("LDTile",clusterTag,layerNextDepthMain);
            var clusterObject = layerNameValue[clusterTag];
            clusterObject._x = thetaSecondTile + thetaFourthTile * columnIndexIterator + thetaSixthTile * thetaFirstTile;
            clusterObject._y = thetaThirdTile + thetaFifthTile * columnIndexIterator + thetaSeventhTile * thetaFirstTile;
            var angleOffsetForClusterOb = 0;
            if(angles.length == numRows * numCols)
            {
               angleOffsetForClusterOb = Number(angles[indexInMainList]);
            }
            clusterObject._rotation = theta + angleOffsetForClusterOb;
            clusterObject._xscale = scale;
            clusterObject._yscale = scale;
            clusterObject.gotoAndStop(tileArray[indexInMainList]);
            _root.colorObjectLazy(clusterObject, messageString);
            layersIndexIterator = layersIndexIterator + 1;
         }
         columnIndexIterator = columnIndexIterator + 1;
      }
      thetaFirstTile = thetaFirstTile + 1;
      columnIndexIterator = 0;
   }
};
_root.toBmap = function(imArr) {
    var heightOfImage = imArr[0];
    var widthOfImage = imArr[1];
    var imageData = imArr[2];
    var ret = new flash.display.BitmapData(widthOfImage, heightOfImage, true, 0xFFFFFFFF);
    ret.b
    ret.lock();
    var i = 0;
    var j = 0;
    while(i < heightOfImage) {
        while(j < widthOfImage) {
            var indexInArray = i * widthOfImage + j;
            ret.setPixel32(j, i, imageData[indexInArray]);
            j = j + 1;
        }
        i = i + 1;
        j = 0;
    }
    ret.unlock();
    return ret;
};
_root.drawSpike = function(layer, xStart, yStart, numBlocks, dir) {
    var numSpikes = numBlocks * 2;
    var spikeBitmapToUse = _root.imDict["spikeUp"];
    var xEnd = xStart + 16;
    var yEnd = yStart + 16;
    var rotValue = 0;
    var scaleXValue = 1;
    var scaleYValue = 1;
    switch(dir)
    {
       case "left":
          spikeBitmapToUse = _root.imDict["spikeLeft"];
          yEnd = yStart + 32 * numBlocks;
          rotValue = _root.toRadians(-90);
          break;
       case "right":
          spikeBitmapToUse = _root.imDict["spikeRight"];
          yEnd = yStart + 32 * numBlocks;
          rotValue = _root.toRadians(90);
          scaleYValue = -1;
          break;
       case "down":
          spikeBitmapToUse = _root.imDict["spikeDown"];
          xEnd = xStart + 32 * numBlocks;
          rotValue = _root.toRadians(180);
          scaleXValue = -1;
          break;
       default:
          xEnd = xStart + 32 * numBlocks;
          break;
    }
    var matrix = new flash.geom.Matrix();
    matrix.identity();
    //matrix.rotate(rotValue);
    //matrix.scale(scaleXValue, scaleYValue);
    matrix.translate(xStart, yStart);
    layer.lineStyle( 0, 0, 0);
    layer.beginBitmapFill(spikeBitmapToUse, matrix);
    layer.moveTo( xStart, yStart);
    layer.lineTo( xEnd, yStart);
    layer.lineTo( xEnd, yEnd);
    layer.lineTo( xStart, yEnd);
    layer.lineTo( xStart, yStart);
    layer.endFill();
  
};
_root.customFluddFn = function()
{
   _root.WaterAmount = 10000;
};
_root.flipGateFn = function(){
  var flipGateIndex = 0;
  while(flipGateIndex < _root.flipGates.length) {
      var flipGate = _root.flipGates[flipGateIndex][0];
      var flipGateStart = _root.flipGates[flipGateIndex][1];
      if(_root.OrangeBlockPLCount > 0) {
          if(flipGate._rotation < flipGateStart + 90) {
              flipGate.speed = 6;
          }
          else {
              flipGate.speed = 0;
          }
      }
      else {
          if(flipGate._rotation > flipGateStart) {
              flipGate.speed = -6;
          }
          else {
              flipGate.speed = 0;
          }
      }
      flipGateIndex = flipGateIndex + 1;
  }
};
_root.mitigateLavaFn = function() {
    var s = _root.coursescale;
    if(_root.needsRestore) {
        _root.CharHP = _root.CharHP + 1;
        _root.needsRestore = false;
    }
    if (_root.Course.Lava.hitTest(
         (_root.Course.Char._x *
         s
         / 100
         )+
         _root.Course._x
       , ((_root.Course.Char._y)*
       s
       /100)+_root.Course._y, true) 
       && _root.CharHP >= 0 
       && !
       ((_root.Course.Char.attackFrame == "Fall" ||
       _root.Course.Char.attackFrame == "Respawn" 
       || _root.Course.Char.attackFrame == "Faint" || 
       _root.Course.Char.attackFrame == "Drown" 
       || _root.Course.Char.attackFrame == "Pause" || 
       _root.Course.Char.attackFrame == "none" || 
       _root.Course.Char.attackFrame == "Squish") 
       && _root.Course.Char.attack == true || _root.Metal == true || 
       _root.Invincible == true) 
       && _root.playpause == false && _root.Course.Char.yspeed > -3
       ) {
           if(_root.CharHP == 8) {
                _root.needsRestore = true;
           }
           else{
                _root.CharHP = _root.CharHP + 1; // lava does 2 damage now
           }
       }
};
// // check if mario is landed on a platform
//_root.Course.Platforms.hitTest(
//(_x*_root.coursescale/100)+_root.Course._x
//, (_y*_root.coursescale/100)+_root.Course._y, true) 

// // check if mario hit a wall on the right
// _root.Course.Platforms.hitTest(((_x+wide-1)*_root.coursescale/100)+_root.Course._x
// , ((_y-(tall*_yscale/200))*_root.coursescale/100)+_root.Course._y, true)
// // check if mario hit a wall on the left
//_root.Course.Platforms.hitTest(((_x-wide+1)*_root.coursescale/100)+_root.Course._x
//, ((_y-(tall*_yscale/200))*_root.coursescale/100)+_root.Course._y, true)

// // check if mario hit a ceiling
//_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+_root.Course._x
//, ((_y-tall+1)*_root.coursescale/100)+_root.Course._y, true)

// // ceiling again?
//if (Squish == false || _root.Course.Char.yspeed<-1) {
//				while (_root.Course.Platforms.hitTest(((_x)*_root.coursescale/100)+_root.Course._x
//                , ((_y-(tall*_yscale/100))*_root.coursescale/100)+_root.Course._y, true)

_root.doesHitPlatformLayer = function(layer) {
    var nextCharX = _root.Course.Char._x + _root.Course.Char.xspeed;
    var nextCharY = _root.Course.Char._y + _root.Course.Char.yspeed;
    var gx = nextCharX * _root.coursescale / 100 + _root.Course._x;
    var gy = nextCharY * _root.coursescale / 100 + _root.Course._y;
    var rwx = (nextCharX + _root.Course.Char.wide - 1) * _root.coursescale / 100
            + _root.Course._x;
    var rwy = (nextCharY - (_root.Course.Char.tall * _root.Course.Char._yscale / 200))
            * _root.coursescale / 100 + _root.Course._y;
    var lwx = (nextCharX - _root.Course.Char.wide + 1) * _root.coursescale / 100
            + _root.Course._x;
    var lwy = rwy;
    var cx = gx;
    var cy = (nextCharY - _root.Course.Char.tall) * _root.coursescale / 100 + _root.Course._y;
    var cyAlt = ( nextCharY - ( _root.Course.Char.tall * _root.Course.Char._yscale / 100)) 
              * _root.coursescale / 100 + _root.Course._y;
    var hitGround = 
    layer.hitTest( // at ground
      gx
    , gy
    , true);
    var hitRightWall =
    layer.hitTest( // hit right wall
      rwx
    , rwy
    , true);
    var hitLeftWall =
    layer.hitTest( // hit left wall
      lwx
    , lwy
    , true);
    var hitCeiling =
    layer.hitTest( // hit ceiling
      cx
    , cy, true) && _root.Course.Char.Squish == false && _root.Course.Char.yspeed < 0.001;
    var hitPlat = hitGround || hitRightWall || hitLeftWall || hitCeiling;
    var vxKnockback = 0;
    if(hitRightWall) {
        vxKnockback = -3;
    }
    if(hitLeftWall) {
        vxKnockback = 3;
    }
    return [hitPlat, vxKnockback];
};
_root.spikeFn = function () {
    var pointsToCheck = [
        [_root.Course._x + _root.coursescale * 0.01 * (_root.Course.Char._x                                ), _root.Course._y + _root.coursescale * 0.01 * (_root.Course.Char._y - _root.Course.Char.tall * 1/8)]
      , [_root.Course._x + _root.coursescale * 0.01 * (_root.Course.Char._x + _root.Course.Char.wide * 1 / 2), _root.Course._y + _root.coursescale * 0.01 * (_root.Course.Char._y - _root.Course.Char.tall * 4/8)]
      , [_root.Course._x + _root.coursescale * 0.01 * (_root.Course.Char._x - _root.Course.Char.wide * 1 / 2), _root.Course._y + _root.coursescale * 0.01 * (_root.Course.Char._y - _root.Course.Char.tall * 4/8)]
      , [_root.Course._x + _root.coursescale * 0.01 * (_root.Course.Char._x                                ), _root.Course._y + _root.coursescale * 0.01 * (_root.Course.Char._y - _root.Course.Char.tall * 7/8)]
    ];
    var marioHitsSpike = false;
    var vxKnockback = 0;
    if(_root.spikeLayerParent.Spikes.hitTest(pointsToCheck[0][0], pointsToCheck[0][1], true)) {
        marioHitsSpike = true;
    }
    else if(_root.spikeLayerParent.Spikes.hitTest(pointsToCheck[1][0], pointsToCheck[1][1], true)) {
        marioHitsSpike = true;
        vxKnockback = -3;
    }
    else if(_root.spikeLayerParent.Spikes.hitTest(pointsToCheck[2][0], pointsToCheck[2][1], true)) {
        marioHitsSpike = true;
        vxKnockback = 3;
    }
    else if(_root.spikeLayerParent.Spikes.hitTest(pointsToCheck[3][0], pointsToCheck[3][1], true)) {
        marioHitsSpike = true;
    }
    var doesHitSpikePlatArr = _root.doesHitPlatformLayer(_root.spikeLayerParent.Spikes);
    marioHitsSpike = marioHitsSpike 
                  || doesHitSpikePlatArr[0];
    if( 
        marioHitsSpike
     && _root.CharHP > 0
     && _root.Invisible == false
     && _root.Metal == false
     && _root.Invincible == false
     && _root.playpause == false
     //&& _root.newTransitionTimer == 0
     ) {
        _root.MarioHit(1, 80, 0, doesHitSpikePlatArr[1], 1, "", false);
    }
};
_root.movingBlockHits = function(blockOb, plLayer) {
    var tol = 2;
    var safetyOff = 4;
    var topLeftX    = ( blockOb.platBlock._x - (blockOb.blockSize + 1) / 2 + _root.Course.BackGFX._x - tol) * _root.coursescale / 100 + _root.Course._x;
    var topLeftY    = ( blockOb.platBlock._y - (blockOb.blockSize + 1) / 2 + _root.Course.BackGFX._y - tol) * _root.coursescale / 100 + _root.Course._y;
    var topRightX   = ( blockOb.platBlock._x + (blockOb.blockSize + 1) / 2 + _root.Course.BackGFX._x + tol) * _root.coursescale / 100 + _root.Course._x;
    var topRightY = topLeftY;                                              
    var bottomLeftX = topLeftX;                                            
    var bottomLeftY = ( blockOb.platBlock._y + (blockOb.blockSize + 1) / 2 + _root.Course.BackGFX._y + tol) * _root.coursescale / 100 + _root.Course._y;
    var bottomRightX = topRightX;
    var bottomRightY = bottomLeftY;
    var ax = topLeftX + safetyOff;
    var ay = topLeftY;
    var bx = topRightX - safetyOff;
    var by = topRightY;
    var cx = topRightX;
    var cy = topRightY + safetyOff;
    var dx = bottomRightX;
    var dy = bottomRightY - safetyOff;
    var ex = bottomRightX - safetyOff;
    var ey = bottomRightY;
    var fx = bottomLeftX + safetyOff;
    var fy = bottomLeftY;
    var gx = bottomLeftX;
    var gy = bottomLeftY - safetyOff;
    var hx = topLeftX;
    var hy = topLeftY + safetyOff;
    var px = (ax + bx) / 2;
    var py = ay;
    var qx = cx;
    var qy = (cy + dy) / 2;
    var rx = (ex + fx) / 2;
    var ry = ey;
    var sx = gx;
    var sy = (gy + hy) / 2;
    //check block collision with walls, ground, ceiling
    var blockHitCeiling = plLayer.hitTest(ax, ay, true)
     || plLayer.hitTest(bx, by, true)
     || plLayer.hitTest(px, py, true);
    var blockHitRightWall = plLayer.hitTest(cx, cy, true)
     || plLayer.hitTest(dx, dy, true)
     || plLayer.hitTest(qx, qy, true);
    var blockHitLeftWall = plLayer.hitTest(hx, hy, true)
     || plLayer.hitTest(gx, gy, true)
     || plLayer.hitTest(sx, sy, true);
    var blockHitGround = plLayer.hitTest(ex, ey, true)
     || plLayer.hitTest(fx, fy, true)
     || plLayer.hitTest(rx, ry, true);
    var ret = new Object();
    ret.blockHitCeiling = blockHitCeiling;
    ret.blockHitRightWall = blockHitRightWall;
    ret.blockHitLeftWall = blockHitLeftWall;
    ret.blockHitGround = blockHitGround;
    return ret;
};
_root.movingBlockFn = function () {
    var i = 0;
    while(i < _root.movingBlocks.length) {
        var blockOb = _root.movingBlocks[i];
        var plLayer = _root.Course.Platforms;
        var secondPlLayer = _root.Course.BPlatforms;
        var testOffset = 2;
        var marioPushingRight = _root.KeyRIGHT() && blockOb.platBlock.hitTest(
                    (_root.Course.Char._x + _root.Course.Char.wide + 2 + _root.Course.Char.xspeed) * _root.coursescale / 100 + _root.Course._x
                  , (_root.Course.Char._y - _root.Course.Char.tall * _root.Course._yscale / 200 + _root.Course.Char.yspeed) * _root.coursescale / 100 + _root.Course._y
                  , true
                );
        var marioPushingLeft = _root.KeyLEFT() && blockOb.platBlock.hitTest(
                    (_root.Course.Char._x - _root.Course.Char.wide - 2 + _root.Course.Char.xspeed) * _root.coursescale / 100 + _root.Course._x
                  , (_root.Course.Char._y - _root.Course.Char.tall * _root.Course._yscale / 200 + _root.Course.Char.yspeed) * _root.coursescale / 100 + _root.Course._y
                  , true
                );
        var shouldUpdatePushRight = true;
        var shouldUpdatePushLeft = true;
        var onGround = false;
        // // adjust block cors based on collisions with platforms
        // special case: ground hitTest: if no ground suppport, the block drops
        var initHits = _root.movingBlockHits(blockOb, plLayer);
        var hitPrimary = initHits.blockHitGround;
        var hitCeilInit = initHits.blockHitCeiling;
        // check if block is on top of mario. 
        var squishThres = _root.Course.Char.tall;
        if(_root.Course.Char.Squish == true) {
            squishThres = 48;
        }
        var marioUnderBlock = blockOb.platBlock.hitTest(
                    (_root.Course.Char._x + _root.Course.Char.xspeed) * _root.coursescale / 100 + _root.Course._x
                  , (_root.Course.Char._y - squishThres  + _root.Course.Char.yspeed) * _root.coursescale / 100 + _root.Course._y
                  , true
                );
        // now check if block is on top of ground, if so, move up.
        if( hitPrimary
         || marioUnderBlock
         || _root.movingBlockHits(blockOb, secondPlLayer).blockHitGround
           && ! hitCeilInit) {
            onGround = true;
            var doAgain = true;
            //check if block will hit ceil if we move up: 
            blockOb.platBlock._y = blockOb.platBlock._y - testOffset;
            var willBlockHitCeiling = _root.movingBlockHits(blockOb, plLayer).blockHitCeiling;
            blockOb.platBlock._y = blockOb.platBlock._y + testOffset;
            if(willBlockHitCeiling && ! hitPrimary) {
                doAgain = false;
            }
            while( doAgain) {
               blockOb.platBlock._y = blockOb.platBlock._y - 1;
               doAgain = _root.movingBlockHits(blockOb, plLayer).blockHitGround
                      || _root.movingBlockHits(blockOb, secondPlLayer).blockHitGround;
            }
            blockOb.yspeed = 0;
         }
        else {
            blockOb.platBlock._y = blockOb.platBlock._y + testOffset; // test this cor; will restore cor
            var nextStepHitGround = _root.movingBlockHits(blockOb, plLayer).blockHitGround
                                 || _root.movingBlockHits(blockOb, secondPlLayer).blockHitGround;
            if( nextStepHitGround && blockOb.yspeed == 0) {
                onGround = true;
            } 
            else {
                blockOb.yspeed = Math.min(blockOb.maxSpeed, blockOb.yspeed + _root.gravity);
            }
            blockOb.platBlock._y = blockOb.platBlock._y - testOffset; // restore
        }
        if( _root.movingBlockHits(blockOb, plLayer).blockHitRightWall) {
            var doAgainR = true;
            while( doAgainR) {
                blockOb.platBlock._x = blockOb.platBlock._x - 1;
                doAgainR = _root.movingBlockHits(blockOb, plLayer).blockHitRightWall;
            }
            
            blockOb.xspeed = 0;
            shouldUpdatePushRight = false;
         }
        else {
            blockOb.platBlock._x = blockOb.platBlock._x + testOffset; // test this cor; will restore cor
            var nextStepHitRightWall = _root.movingBlockHits(blockOb, plLayer).blockHitRightWall;
            if( nextStepHitRightWall && blockOb.xspeed == 0) {
                shouldUpdatePushRight = false;
            } 
            blockOb.platBlock._x = blockOb.platBlock._x - testOffset;
        }
        if( _root.movingBlockHits(blockOb, plLayer).blockHitLeftWall) {
            var doAgainL = true;
            while( doAgainL) {
                blockOb.platBlock._x = blockOb.platBlock._x + 1;
                doAgainL = _root.movingBlockHits(blockOb, plLayer).blockHitLeftWall;
            }
            
            blockOb.xspeed = 0;
            shouldUpdatePushLeft = false;
         }
        else {
            blockOb.platBlock._x = blockOb.platBlock._x - testOffset; // test this cor; will restore cor
            var nextStepHitLeftWall = _root.movingBlockHits(blockOb, plLayer).blockHitLeftWall;
            if( nextStepHitLeftWall && blockOb.xspeed == 0) {
                shouldUpdatePushLeft = false;
            } 
            blockOb.platBlock._x = blockOb.platBlock._x + testOffset;
        }
       
        while( _root.movingBlockHits(blockOb, plLayer).blockHitCeiling
         && ! hitPrimary) {
            blockOb.platBlock._y = blockOb.platBlock._y + 1;
            blockOb.yspeed = 0;
         }
        // check if next step will hit ground. if it will, halve the speed under a tolerance
        var initYcor = blockOb.platBlock._y;
        blockOb.platBlock._y = blockOb.platBlock._y + blockOb.yspeed;
        var doesHitGroundNext = false;
        while( _root.movingBlockHits(blockOb, plLayer).blockHitGround
            || _root.movingBlockHits(blockOb, secondPlLayer).blockHitGround
            || blockOb.platBlock.hitTest(
                    (_root.Course.Char._x + _root.Course.Char.xspeed) * _root.coursescale / 100 + _root.Course._x
                  , (_root.Course.Char._y - _root.Course.Char.tall  + _root.Course.Char.yspeed) * _root.coursescale / 100 + _root.Course._y
                  , true
                )) {
                doesHitGroundNext = true;
                blockOb.yspeed = 0;
                blockOb.platBlock._y = blockOb.platBlock._y - 1;
            }
        if( doesHitGroundNext == false) {
            blockOb.platBlock._y = initYcor;
        }
        // update pos based on speed
        blockOb.platBlock._x = blockOb.platBlock._x + blockOb.xspeed;
        blockOb.platBlock._y = blockOb.platBlock._y + blockOb.yspeed;
        //now we need to check if mario is pushing the block
        var pushStrength = 2 - 0.9 * Math.min(1, blockOb.blockSize - 1);
        var pushMul = 1;
        if(onGround == false) {
            pushMul = blockOb.airPushMul;
        }
        if(marioPushingRight && shouldUpdatePushRight) {
            blockOb.xspeed = pushStrength * pushMul;
        }
        if(marioPushingLeft && shouldUpdatePushLeft) {
            blockOb.xspeed = -1 * pushStrength * pushMul;
        }
        // if mario not pushing at all, set xspeed to 0
        if(! marioPushingLeft && ! marioPushingRight) {
            blockOb.xspeed = 0;
        }
        //move gfxBlock to platBlock cors
        blockOb.gfxBlock._x = blockOb.platBlock._x;
        blockOb.gfxBlock._y = blockOb.platBlock._y;
        i = i + 1;
    }
};
_root.roundToNearestDecimal = function(x, numDecs) {
    var sca = Math.pow(10, numDecs);
    return Math.floor(x * sca) / sca;
};

_root.fireSpawnFn = function() {
    var i = 0;
    while(i < _root.fireSpawns.length) {
        var fireSpawnProperties = _root.fireSpawns[i];
        // check if mario is close enough to the fireSpawn
        var marX = _root.Course.Char._x - _root.Course.BackGFX._x; // mario's real cors.
        var marY = _root.Course.Char._y - _root.Course.BackGFX._y;
        var inRange = Math.abs(marX - fireSpawnProperties.x) < fireSpawnProperties.radX
                   && Math.abs(marY - fireSpawnProperties.y) < fireSpawnProperties.radY;
        // check if you need to spawn a fireball
        if( fireSpawnProperties.timer % fireSpawnProperties.burstDelay == 0
         && fireSpawnProperties.timer < fireSpawnProperties.burstDelay 
                                      * fireSpawnProperties.burstAmount
         && inRange) {
            _root.appendObject( _root.Course.BackGFX, "BowserFire1", {
                _x: fireSpawnProperties.x,
                _y: fireSpawnProperties.y,
                speed: fireSpawnProperties.speed,
                rotation: fireSpawnProperties.angle,
                bounce: 0,
                frame: fireSpawnProperties._color,
                follow: 0,
                bounceboost: 0,
                bouncemax: 0
            });
        }
        // update the timer
        fireSpawnProperties.timer = ( fireSpawnProperties.timer + 1) % fireSpawnProperties.delay;
        i = i + 1;
    }
};

_root.experimentalFn = function() {
    //_root.TextHint = "platHits: " 
    //               + _root.Course.Platforms.hitTest(
    //                   (16 + _root.Course.BackGFX._x) * _root.coursescale / 100 + _root.Course._x
    //                 , (16 + _root.Course.BackGFX._y) * _root.coursescale / 100 + _root.Course._y
    //                 , true);
    
    //_root.TextHint = "platHitChar: " + _root.Course.Platforms.hitTest(
    //    _root.Course.Char._x * _root.coursescale / 100 + _root.Course._x
    //  , _root.Course.Char._y * _root.coursescale / 100 + _root.Course._y
    //  , true
    //  )
    //+ " VALS: " + _root.Course.Char._x * _root.coursescale / 100 //+ _root.Course._x
    //+ ", "      + _root.Course.Char._y * _root.coursescale / 100 //+ _root.Course._y
    //;
    
    //_root.TextHint = "Mario: " + "(" + _root.roundToNearestDecimal(_root.Course.Char._x * _root.coursescale / 100 + _root.Course._x, 2)
    //                          + ", " + _root.roundToNearestDecimal(_root.Course.Char._y * _root.coursescale / 100 + _root.Course._y, 2)
    //                          + ")";
    //_root.TextHint = "CharCors: " + "(" + _root.Course.Char._x + ", " + _root.Course.Char._y + ")"
    //               + "platCors: " + "(" + _root.Course.Platforms._x + ", " + _root.Course.Platforms._y + ")"; 
                              
    //var i = 0;
    //while(i < _root.fireSpawns.length) {
    //    var fireSpawnDict = _root.fireSpawns[i];
    //    var maxTime = 90;
    //    if(fireSpawnDict.timeValue % maxTime == 0) {
    //        fireSpawnDict.launcher.play();
    //    }
    //    fireSpawnDict.timeValue = (fireSpawnDict.timeValue + 1) % maxTime;
    //    i = i + 1;
    //}
};
_root.println = function(s) {
    if(_root.inDebugMode == true){
        _root.TextHint =_root.TextHint + s + "\r\n";
    }
}

// dx in blocks
_root.placeRisingLava = function(x, y, dx, dy, speed, minY, red, blue, green, alpha, isSolid) {
    var lavaObject = new Object();
    // _root.println("x: " + x + " y: " + y);
    
    var topLavas = [];
    var nextFrontGFXDepth;
    var obtag;
    var topLavaGFX;
    var i = 0;
    while(i < 8) {
        nextFrontGFXDepth = _root.Course.FrontGFX.getNextHighestDepth();
        obtag = "TopLava" + i + "Depth" + nextFrontGFXDepth;
        _root.Course.FrontGFX.createEmptyMovieClip( obtag, nextFrontGFXDepth);
        topLavaGFX = _root.Course.FrontGFX[obtag];
        
        topLavaGFX._x = x;
        topLavaGFX._y = y;
        
        var matrix = new flash.geom.Matrix();
        matrix.identity();
        // matrix.translate(x, y);
        topLavaGFX.lineStyle( 0, 0, 0);
        topLavaGFX.beginBitmapFill(_root.imDict["Lava" + i], matrix);
        topLavaGFX.moveTo( 0, 0);
        topLavaGFX.lineTo( 32 * dx, 0);
        topLavaGFX.lineTo( 32 * dx, 16);
        topLavaGFX.lineTo( 0, 16);
        topLavaGFX.lineTo( 0, 0);
        topLavaGFX.endFill();
        
        if(i % 8 == 0) {
            topLavaGFX._visible = true;
        }
        else {
            topLavaGFX._visible = false;
        }
        
        topLavas.push(topLavaGFX);
        
        i = i + 1;
    }
    
    // _root.println("length of topLavas: " + topLavas.length);
    
    
    
    nextFrontGFXDepth = _root.Course.FrontGFX.getNextHighestDepth();
    _root.Course.FrontGFX.createEmptyMovieClip( "BotLava" + nextFrontGFXDepth, nextFrontGFXDepth);
    var botLavaGFX = _root.Course.FrontGFX["BotLava" + nextFrontGFXDepth];
    botLavaGFX._x = x;
    botLavaGFX._y = y + 16;
    var matrix = new flash.geom.Matrix();
    matrix.identity();
    botLavaGFX.lineStyle( 0, 0, 0);
    botLavaGFX.beginBitmapFill(_root.imDict["Lava"], matrix);
    botLavaGFX.moveTo( 0, 0);
    botLavaGFX.lineTo( 32 * dx, 0);
    botLavaGFX.lineTo( 32 * dx, dy - 16);
    botLavaGFX.lineTo( 0, dy - 16);
    botLavaGFX.lineTo( 0, 0);
    botLavaGFX.endFill();
    botLavaGFX._visible = true;
    
    var nextLavaDepth = _root.Course.Lava.getNextHighestDepth();
    _root.Course.Lava.createEmptyMovieClip( "RisingLava" + nextLavaDepth
                                           , nextLavaDepth
                                           );
    var lavaCollision = _root.Course.Lava["RisingLava" + nextLavaDepth];
    lavaCollision._x = x;
    lavaCollision._y = y;
    
    // ( blockOb.platBlock._x - (blockOb.blockSize + 1) / 2 + _root.Course.BackGFX._x - tol) * _root.coursescale / 100 + _root.Course._x;
    
    lavaCollision.lineStyle( 0, 0, 0);
    lavaCollision.beginBitmapFill(_root.imDict["green"], matrix);
    lavaCollision.moveTo( 0, 0);
    lavaCollision.lineTo( 32 * dx, 0);
    lavaCollision.lineTo( 32 * dx, dy);
    lavaCollision.lineTo( 0, dy);
    lavaCollision.lineTo( 0, 0);
    lavaCollision.endFill();
    lavaCollision._visible = false;
    
    var nextPlatDepth = _root.Course.Platforms.getNextHighestDepth();
    _root.Course.Platforms.createEmptyMovieClip( "RisingLavaPlat" + nextPlatDepth
                                           , nextPlatDepth
                                           );
    var lavaPlat = _root.Course.Platforms["RisingLavaPlat" + nextPlatDepth];
    lavaPlat._x = x;
    lavaPlat._y = y + 12;
    
    if(isSolid == true) {
        lavaPlat.lineStyle( 0, 0, 0);
        lavaPlat.beginBitmapFill(_root.imDict["green"], matrix);
        lavaPlat.moveTo( 0, 0);
        lavaPlat.lineTo( 32 * dx, 0);
        lavaPlat.lineTo( 32 * dx, dy);
        lavaPlat.lineTo( 0, dy);
        lavaPlat.lineTo( 0, 0);
        lavaPlat.endFill();
    }
    lavaPlat._visible = false;
    
    lavaObject["topLavas"] = topLavas;
    lavaObject["botLavaGFX"] = botLavaGFX;
    lavaObject["lavaCollision"] = lavaCollision;
    lavaObject["lavaPlat"] = lavaPlat;
    lavaObject["frame"] = 0;
    lavaObject["speed"] = speed;
    lavaObject["y"] = y;
    
    _root.risingLava.push(lavaObject);
}

_root.risingLavaFn = function(){
    var i = 0;
    while(i < _root.risingLava.length) {
        var lavaObject = _root.risingLava[i];
        
        var oldFrame = lavaObject["frame"];
        
        lavaObject["topLavas"][lavaObject["frame"]]._visible = false;
        lavaObject["frame"] = (lavaObject["frame"] + 1) % 8;
        lavaObject["topLavas"][lavaObject["frame"]]._visible = true;
        
        
        // // update y cors
        if(lavaObject["y"] > 32 * 8) {
            lavaObject["y"] = lavaObject["y"] - lavaObject["speed"];
            var j = 0;
            while(j < 8) {
                lavaObject["topLavas"][j]._y = lavaObject["topLavas"][j]._y - lavaObject["speed"];
                j = j + 1;
            }
            lavaObject["botLavaGFX"]._y = lavaObject["botLavaGFX"]._y - lavaObject["speed"];
            lavaObject["lavaCollision"]._y = lavaObject["lavaCollision"]._y - lavaObject["speed"];
            lavaObject["lavaPlat"]._y = lavaObject["lavaPlat"]._y - lavaObject["speed"];
            
            var rush = 32;
            var marY = _root.Course.Char._y - _root.Course.BackGFX._y;
            if(lavaObject["y"] - marY > 32 * 12 && marY > 32 * 12) {
                lavaObject["y"] = lavaObject["y"] - rush;
                j = 0;
                while(j < 8) {
                    lavaObject["topLavas"][j]._y = lavaObject["topLavas"][j]._y - rush;
                    j = j + 1;
                }
                lavaObject["botLavaGFX"]._y = lavaObject["botLavaGFX"]._y - rush;
                lavaObject["lavaCollision"]._y = lavaObject["lavaCollision"]._y - rush;
                lavaObject["lavaPlat"]._y = lavaObject["lavaPlat"]._y - rush;
            }
        }
        
        i = i + 1;
    }
}

_root.swapBG = function()
{
   var q = _root.FarBackground.getDepth();
   _root.FarBackground.attachMovie("LD-Black","FarBackground",q);
   _root.FarBackground._x = _root.screensizeX / 2;
   _root.FarBackground._y = _root.screensizeY / 2;
   _root.FarBackground.loadMovie("https://github.com/ExtremeHydreigon/abcd/raw/master/ims/bBG.PNG",this,"GET");
   _root.FarBackground._x = 0;
   _root.FarBackground._y = 0;
   _root.BGCourse.removeMovieClip();
   _root.MidBackground.removeMovieClip();
   _root.BGCloseCourse.removeMovieClip();
};
_root.spikeLayerParent = _root.Course.Platforms;
// _root.didInit = false;
_root.KeyPlus = function()
{
   //if(_root.PlayingLevelDesigner == true) {
   //    if(Key.isDown(83)) {
   //        _root.Course.yspeed = 10;
   //    }
   //}
   if(_root.currentArea !== _root.startBlock)
   {
      // note that we have reached new transition.
      _root.currentArea = _root.startBlock;
      // initialize at start of transition
      _root.newTransitionTimer = 1;
      if(_root.spikeLayerParent.Spikes == undefined) {
          _root.spikeLayerParent.createEmptyMovieClip( "Spikes"
                                           , _root.spikeLayerParent.getNextHighestDepth()
                                           );
          _root.spikeLayerParent.Spikes._visible = false;
      }
      _root.flipGates = [];
      _root.fireSpawns = [];
      _root.movingBlocks = [];
      _root.risingLava = [];
      _root.needsRestore = false;
      //_root.swapBG();
      
      // pre-spawn bug
      // if(_root.didInit == true) {
        _root.CustomObjs();
      // }
   }
   if(_root.PauseGame == false)
   {
      // call per frame
      // _root.customFluddFn();
      _root.flipGateFn();
      // _root.mitigateLavaFn();
      _root.spikeFn();
      _root.movingBlockFn();
      _root.fireSpawnFn();
      // _root.experimentalFn();
      _root.risingLavaFn();
      _root.newTransitionTimer = Math.max(_root.newTransitionTimer - 1, 0);
   }
   // _root.didInit = true;
   return Key.isDown(33) || Key.isDown(187);
};
